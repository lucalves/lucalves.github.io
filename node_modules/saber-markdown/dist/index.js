"use strict";function _interopDefault(r){return r&&"object"==typeof r&&"default"in r?r.default:r}var punycode=_interopDefault(require("punycode"));function createCommonjsModule(r,e){return r(e={exports:{}},e.exports),e.exports}function getCjsExportFromNamespace(r){return r&&r.default||r}var Aacute="Á",aacute="á",Abreve="Ă",abreve="ă",ac="∾",acd="∿",acE="∾̳",Acirc="Â",acirc="â",acute="´",Acy="А",acy="а",AElig="Æ",aelig="æ",af="⁡",Afr="𝔄",afr="𝔞",Agrave="À",agrave="à",alefsym="ℵ",aleph="ℵ",Alpha="Α",alpha="α",Amacr="Ā",amacr="ā",amalg="⨿",amp="&",AMP="&",andand="⩕",And="⩓",and="∧",andd="⩜",andslope="⩘",andv="⩚",ang="∠",ange="⦤",angle="∠",angmsdaa="⦨",angmsdab="⦩",angmsdac="⦪",angmsdad="⦫",angmsdae="⦬",angmsdaf="⦭",angmsdag="⦮",angmsdah="⦯",angmsd="∡",angrt="∟",angrtvb="⊾",angrtvbd="⦝",angsph="∢",angst="Å",angzarr="⍼",Aogon="Ą",aogon="ą",Aopf="𝔸",aopf="𝕒",apacir="⩯",ap="≈",apE="⩰",ape="≊",apid="≋",apos="'",ApplyFunction="⁡",approx="≈",approxeq="≊",Aring="Å",aring="å",Ascr="𝒜",ascr="𝒶",Assign="≔",ast="*",asymp="≈",asympeq="≍",Atilde="Ã",atilde="ã",Auml="Ä",auml="ä",awconint="∳",awint="⨑",backcong="≌",backepsilon="϶",backprime="‵",backsim="∽",backsimeq="⋍",Backslash="∖",Barv="⫧",barvee="⊽",barwed="⌅",Barwed="⌆",barwedge="⌅",bbrk="⎵",bbrktbrk="⎶",bcong="≌",Bcy="Б",bcy="б",bdquo="„",becaus="∵",because="∵",Because="∵",bemptyv="⦰",bepsi="϶",bernou="ℬ",Bernoullis="ℬ",Beta="Β",beta="β",beth="ℶ",between="≬",Bfr="𝔅",bfr="𝔟",bigcap="⋂",bigcirc="◯",bigcup="⋃",bigodot="⨀",bigoplus="⨁",bigotimes="⨂",bigsqcup="⨆",bigstar="★",bigtriangledown="▽",bigtriangleup="△",biguplus="⨄",bigvee="⋁",bigwedge="⋀",bkarow="⤍",blacklozenge="⧫",blacksquare="▪",blacktriangle="▴",blacktriangledown="▾",blacktriangleleft="◂",blacktriangleright="▸",blank="␣",blk12="▒",blk14="░",blk34="▓",block="█",bne="=⃥",bnequiv="≡⃥",bNot="⫭",bnot="⌐",Bopf="𝔹",bopf="𝕓",bot="⊥",bottom="⊥",bowtie="⋈",boxbox="⧉",boxdl="┐",boxdL="╕",boxDl="╖",boxDL="╗",boxdr="┌",boxdR="╒",boxDr="╓",boxDR="╔",boxh="─",boxH="═",boxhd="┬",boxHd="╤",boxhD="╥",boxHD="╦",boxhu="┴",boxHu="╧",boxhU="╨",boxHU="╩",boxminus="⊟",boxplus="⊞",boxtimes="⊠",boxul="┘",boxuL="╛",boxUl="╜",boxUL="╝",boxur="└",boxuR="╘",boxUr="╙",boxUR="╚",boxv="│",boxV="║",boxvh="┼",boxvH="╪",boxVh="╫",boxVH="╬",boxvl="┤",boxvL="╡",boxVl="╢",boxVL="╣",boxvr="├",boxvR="╞",boxVr="╟",boxVR="╠",bprime="‵",breve="˘",Breve="˘",brvbar="¦",bscr="𝒷",Bscr="ℬ",bsemi="⁏",bsim="∽",bsime="⋍",bsolb="⧅",bsol="\\",bsolhsub="⟈",bull="•",bullet="•",bump="≎",bumpE="⪮",bumpe="≏",Bumpeq="≎",bumpeq="≏",Cacute="Ć",cacute="ć",capand="⩄",capbrcup="⩉",capcap="⩋",cap="∩",Cap="⋒",capcup="⩇",capdot="⩀",CapitalDifferentialD="ⅅ",caps="∩︀",caret="⁁",caron="ˇ",Cayleys="ℭ",ccaps="⩍",Ccaron="Č",ccaron="č",Ccedil="Ç",ccedil="ç",Ccirc="Ĉ",ccirc="ĉ",Cconint="∰",ccups="⩌",ccupssm="⩐",Cdot="Ċ",cdot="ċ",cedil="¸",Cedilla="¸",cemptyv="⦲",cent="¢",centerdot="·",CenterDot="·",cfr="𝔠",Cfr="ℭ",CHcy="Ч",chcy="ч",check="✓",checkmark="✓",Chi="Χ",chi="χ",circ="ˆ",circeq="≗",circlearrowleft="↺",circlearrowright="↻",circledast="⊛",circledcirc="⊚",circleddash="⊝",CircleDot="⊙",circledR="®",circledS="Ⓢ",CircleMinus="⊖",CirclePlus="⊕",CircleTimes="⊗",cir="○",cirE="⧃",cire="≗",cirfnint="⨐",cirmid="⫯",cirscir="⧂",ClockwiseContourIntegral="∲",CloseCurlyDoubleQuote="”",CloseCurlyQuote="’",clubs="♣",clubsuit="♣",colon=":",Colon="∷",Colone="⩴",colone="≔",coloneq="≔",comma=",",commat="@",comp="∁",compfn="∘",complement="∁",complexes="ℂ",cong="≅",congdot="⩭",Congruent="≡",conint="∮",Conint="∯",ContourIntegral="∮",copf="𝕔",Copf="ℂ",coprod="∐",Coproduct="∐",copy="©",COPY="©",copysr="℗",CounterClockwiseContourIntegral="∳",crarr="↵",cross="✗",Cross="⨯",Cscr="𝒞",cscr="𝒸",csub="⫏",csube="⫑",csup="⫐",csupe="⫒",ctdot="⋯",cudarrl="⤸",cudarrr="⤵",cuepr="⋞",cuesc="⋟",cularr="↶",cularrp="⤽",cupbrcap="⩈",cupcap="⩆",CupCap="≍",cup="∪",Cup="⋓",cupcup="⩊",cupdot="⊍",cupor="⩅",cups="∪︀",curarr="↷",curarrm="⤼",curlyeqprec="⋞",curlyeqsucc="⋟",curlyvee="⋎",curlywedge="⋏",curren="¤",curvearrowleft="↶",curvearrowright="↷",cuvee="⋎",cuwed="⋏",cwconint="∲",cwint="∱",cylcty="⌭",dagger="†",Dagger="‡",daleth="ℸ",darr="↓",Darr="↡",dArr="⇓",dash="‐",Dashv="⫤",dashv="⊣",dbkarow="⤏",dblac="˝",Dcaron="Ď",dcaron="ď",Dcy="Д",dcy="д",ddagger="‡",ddarr="⇊",DD="ⅅ",dd="ⅆ",DDotrahd="⤑",ddotseq="⩷",deg="°",Del="∇",Delta="Δ",delta="δ",demptyv="⦱",dfisht="⥿",Dfr="𝔇",dfr="𝔡",dHar="⥥",dharl="⇃",dharr="⇂",DiacriticalAcute="´",DiacriticalDot="˙",DiacriticalDoubleAcute="˝",DiacriticalGrave="`",DiacriticalTilde="˜",diam="⋄",diamond="⋄",Diamond="⋄",diamondsuit="♦",diams="♦",die="¨",DifferentialD="ⅆ",digamma="ϝ",disin="⋲",div="÷",divide="÷",divideontimes="⋇",divonx="⋇",DJcy="Ђ",djcy="ђ",dlcorn="⌞",dlcrop="⌍",dollar="$",Dopf="𝔻",dopf="𝕕",Dot="¨",dot="˙",DotDot="⃜",doteq="≐",doteqdot="≑",DotEqual="≐",dotminus="∸",dotplus="∔",dotsquare="⊡",doublebarwedge="⌆",DoubleContourIntegral="∯",DoubleDot="¨",DoubleDownArrow="⇓",DoubleLeftArrow="⇐",DoubleLeftRightArrow="⇔",DoubleLeftTee="⫤",DoubleLongLeftArrow="⟸",DoubleLongLeftRightArrow="⟺",DoubleLongRightArrow="⟹",DoubleRightArrow="⇒",DoubleRightTee="⊨",DoubleUpArrow="⇑",DoubleUpDownArrow="⇕",DoubleVerticalBar="∥",DownArrowBar="⤓",downarrow="↓",DownArrow="↓",Downarrow="⇓",DownArrowUpArrow="⇵",DownBreve="̑",downdownarrows="⇊",downharpoonleft="⇃",downharpoonright="⇂",DownLeftRightVector="⥐",DownLeftTeeVector="⥞",DownLeftVectorBar="⥖",DownLeftVector="↽",DownRightTeeVector="⥟",DownRightVectorBar="⥗",DownRightVector="⇁",DownTeeArrow="↧",DownTee="⊤",drbkarow="⤐",drcorn="⌟",drcrop="⌌",Dscr="𝒟",dscr="𝒹",DScy="Ѕ",dscy="ѕ",dsol="⧶",Dstrok="Đ",dstrok="đ",dtdot="⋱",dtri="▿",dtrif="▾",duarr="⇵",duhar="⥯",dwangle="⦦",DZcy="Џ",dzcy="џ",dzigrarr="⟿",Eacute="É",eacute="é",easter="⩮",Ecaron="Ě",ecaron="ě",Ecirc="Ê",ecirc="ê",ecir="≖",ecolon="≕",Ecy="Э",ecy="э",eDDot="⩷",Edot="Ė",edot="ė",eDot="≑",ee="ⅇ",efDot="≒",Efr="𝔈",efr="𝔢",eg="⪚",Egrave="È",egrave="è",egs="⪖",egsdot="⪘",el="⪙",Element="∈",elinters="⏧",ell="ℓ",els="⪕",elsdot="⪗",Emacr="Ē",emacr="ē",empty="∅",emptyset="∅",EmptySmallSquare="◻",emptyv="∅",EmptyVerySmallSquare="▫",emsp13=" ",emsp14=" ",emsp=" ",ENG="Ŋ",eng="ŋ",ensp=" ",Eogon="Ę",eogon="ę",Eopf="𝔼",eopf="𝕖",epar="⋕",eparsl="⧣",eplus="⩱",epsi="ε",Epsilon="Ε",epsilon="ε",epsiv="ϵ",eqcirc="≖",eqcolon="≕",eqsim="≂",eqslantgtr="⪖",eqslantless="⪕",Equal="⩵",equals="=",EqualTilde="≂",equest="≟",Equilibrium="⇌",equiv="≡",equivDD="⩸",eqvparsl="⧥",erarr="⥱",erDot="≓",escr="ℯ",Escr="ℰ",esdot="≐",Esim="⩳",esim="≂",Eta="Η",eta="η",ETH="Ð",eth="ð",Euml="Ë",euml="ë",euro="€",excl="!",exist="∃",Exists="∃",expectation="ℰ",exponentiale="ⅇ",ExponentialE="ⅇ",fallingdotseq="≒",Fcy="Ф",fcy="ф",female="♀",ffilig="ﬃ",fflig="ﬀ",ffllig="ﬄ",Ffr="𝔉",ffr="𝔣",filig="ﬁ",FilledSmallSquare="◼",FilledVerySmallSquare="▪",fjlig="fj",flat="♭",fllig="ﬂ",fltns="▱",fnof="ƒ",Fopf="𝔽",fopf="𝕗",forall="∀",ForAll="∀",fork="⋔",forkv="⫙",Fouriertrf="ℱ",fpartint="⨍",frac12="½",frac13="⅓",frac14="¼",frac15="⅕",frac16="⅙",frac18="⅛",frac23="⅔",frac25="⅖",frac34="¾",frac35="⅗",frac38="⅜",frac45="⅘",frac56="⅚",frac58="⅝",frac78="⅞",frasl="⁄",frown="⌢",fscr="𝒻",Fscr="ℱ",gacute="ǵ",Gamma="Γ",gamma="γ",Gammad="Ϝ",gammad="ϝ",gap="⪆",Gbreve="Ğ",gbreve="ğ",Gcedil="Ģ",Gcirc="Ĝ",gcirc="ĝ",Gcy="Г",gcy="г",Gdot="Ġ",gdot="ġ",ge="≥",gE="≧",gEl="⪌",gel="⋛",geq="≥",geqq="≧",geqslant="⩾",gescc="⪩",ges="⩾",gesdot="⪀",gesdoto="⪂",gesdotol="⪄",gesl="⋛︀",gesles="⪔",Gfr="𝔊",gfr="𝔤",gg="≫",Gg="⋙",ggg="⋙",gimel="ℷ",GJcy="Ѓ",gjcy="ѓ",gla="⪥",gl="≷",glE="⪒",glj="⪤",gnap="⪊",gnapprox="⪊",gne="⪈",gnE="≩",gneq="⪈",gneqq="≩",gnsim="⋧",Gopf="𝔾",gopf="𝕘",grave="`",GreaterEqual="≥",GreaterEqualLess="⋛",GreaterFullEqual="≧",GreaterGreater="⪢",GreaterLess="≷",GreaterSlantEqual="⩾",GreaterTilde="≳",Gscr="𝒢",gscr="ℊ",gsim="≳",gsime="⪎",gsiml="⪐",gtcc="⪧",gtcir="⩺",gt=">",GT=">",Gt="≫",gtdot="⋗",gtlPar="⦕",gtquest="⩼",gtrapprox="⪆",gtrarr="⥸",gtrdot="⋗",gtreqless="⋛",gtreqqless="⪌",gtrless="≷",gtrsim="≳",gvertneqq="≩︀",gvnE="≩︀",Hacek="ˇ",hairsp=" ",half="½",hamilt="ℋ",HARDcy="Ъ",hardcy="ъ",harrcir="⥈",harr="↔",hArr="⇔",harrw="↭",Hat="^",hbar="ℏ",Hcirc="Ĥ",hcirc="ĥ",hearts="♥",heartsuit="♥",hellip="…",hercon="⊹",hfr="𝔥",Hfr="ℌ",HilbertSpace="ℋ",hksearow="⤥",hkswarow="⤦",hoarr="⇿",homtht="∻",hookleftarrow="↩",hookrightarrow="↪",hopf="𝕙",Hopf="ℍ",horbar="―",HorizontalLine="─",hscr="𝒽",Hscr="ℋ",hslash="ℏ",Hstrok="Ħ",hstrok="ħ",HumpDownHump="≎",HumpEqual="≏",hybull="⁃",hyphen="‐",Iacute="Í",iacute="í",ic="⁣",Icirc="Î",icirc="î",Icy="И",icy="и",Idot="İ",IEcy="Е",iecy="е",iexcl="¡",iff="⇔",ifr="𝔦",Ifr="ℑ",Igrave="Ì",igrave="ì",ii="ⅈ",iiiint="⨌",iiint="∭",iinfin="⧜",iiota="℩",IJlig="Ĳ",ijlig="ĳ",Imacr="Ī",imacr="ī",image="ℑ",ImaginaryI="ⅈ",imagline="ℐ",imagpart="ℑ",imath="ı",Im="ℑ",imof="⊷",imped="Ƶ",Implies="⇒",incare="℅",infin="∞",infintie="⧝",inodot="ı",intcal="⊺",int="∫",Int="∬",integers="ℤ",Integral="∫",intercal="⊺",Intersection="⋂",intlarhk="⨗",intprod="⨼",InvisibleComma="⁣",InvisibleTimes="⁢",IOcy="Ё",iocy="ё",Iogon="Į",iogon="į",Iopf="𝕀",iopf="𝕚",Iota="Ι",iota="ι",iprod="⨼",iquest="¿",iscr="𝒾",Iscr="ℐ",isin="∈",isindot="⋵",isinE="⋹",isins="⋴",isinsv="⋳",isinv="∈",it="⁢",Itilde="Ĩ",itilde="ĩ",Iukcy="І",iukcy="і",Iuml="Ï",iuml="ï",Jcirc="Ĵ",jcirc="ĵ",Jcy="Й",jcy="й",Jfr="𝔍",jfr="𝔧",jmath="ȷ",Jopf="𝕁",jopf="𝕛",Jscr="𝒥",jscr="𝒿",Jsercy="Ј",jsercy="ј",Jukcy="Є",jukcy="є",Kappa="Κ",kappa="κ",kappav="ϰ",Kcedil="Ķ",kcedil="ķ",Kcy="К",kcy="к",Kfr="𝔎",kfr="𝔨",kgreen="ĸ",KHcy="Х",khcy="х",KJcy="Ќ",kjcy="ќ",Kopf="𝕂",kopf="𝕜",Kscr="𝒦",kscr="𝓀",lAarr="⇚",Lacute="Ĺ",lacute="ĺ",laemptyv="⦴",lagran="ℒ",Lambda="Λ",lambda="λ",lang="⟨",Lang="⟪",langd="⦑",langle="⟨",lap="⪅",Laplacetrf="ℒ",laquo="«",larrb="⇤",larrbfs="⤟",larr="←",Larr="↞",lArr="⇐",larrfs="⤝",larrhk="↩",larrlp="↫",larrpl="⤹",larrsim="⥳",larrtl="↢",latail="⤙",lAtail="⤛",lat="⪫",late="⪭",lates="⪭︀",lbarr="⤌",lBarr="⤎",lbbrk="❲",lbrace="{",lbrack="[",lbrke="⦋",lbrksld="⦏",lbrkslu="⦍",Lcaron="Ľ",lcaron="ľ",Lcedil="Ļ",lcedil="ļ",lceil="⌈",lcub="{",Lcy="Л",lcy="л",ldca="⤶",ldquo="“",ldquor="„",ldrdhar="⥧",ldrushar="⥋",ldsh="↲",le="≤",lE="≦",LeftAngleBracket="⟨",LeftArrowBar="⇤",leftarrow="←",LeftArrow="←",Leftarrow="⇐",LeftArrowRightArrow="⇆",leftarrowtail="↢",LeftCeiling="⌈",LeftDoubleBracket="⟦",LeftDownTeeVector="⥡",LeftDownVectorBar="⥙",LeftDownVector="⇃",LeftFloor="⌊",leftharpoondown="↽",leftharpoonup="↼",leftleftarrows="⇇",leftrightarrow="↔",LeftRightArrow="↔",Leftrightarrow="⇔",leftrightarrows="⇆",leftrightharpoons="⇋",leftrightsquigarrow="↭",LeftRightVector="⥎",LeftTeeArrow="↤",LeftTee="⊣",LeftTeeVector="⥚",leftthreetimes="⋋",LeftTriangleBar="⧏",LeftTriangle="⊲",LeftTriangleEqual="⊴",LeftUpDownVector="⥑",LeftUpTeeVector="⥠",LeftUpVectorBar="⥘",LeftUpVector="↿",LeftVectorBar="⥒",LeftVector="↼",lEg="⪋",leg="⋚",leq="≤",leqq="≦",leqslant="⩽",lescc="⪨",les="⩽",lesdot="⩿",lesdoto="⪁",lesdotor="⪃",lesg="⋚︀",lesges="⪓",lessapprox="⪅",lessdot="⋖",lesseqgtr="⋚",lesseqqgtr="⪋",LessEqualGreater="⋚",LessFullEqual="≦",LessGreater="≶",lessgtr="≶",LessLess="⪡",lesssim="≲",LessSlantEqual="⩽",LessTilde="≲",lfisht="⥼",lfloor="⌊",Lfr="𝔏",lfr="𝔩",lg="≶",lgE="⪑",lHar="⥢",lhard="↽",lharu="↼",lharul="⥪",lhblk="▄",LJcy="Љ",ljcy="љ",llarr="⇇",ll="≪",Ll="⋘",llcorner="⌞",Lleftarrow="⇚",llhard="⥫",lltri="◺",Lmidot="Ŀ",lmidot="ŀ",lmoustache="⎰",lmoust="⎰",lnap="⪉",lnapprox="⪉",lne="⪇",lnE="≨",lneq="⪇",lneqq="≨",lnsim="⋦",loang="⟬",loarr="⇽",lobrk="⟦",longleftarrow="⟵",LongLeftArrow="⟵",Longleftarrow="⟸",longleftrightarrow="⟷",LongLeftRightArrow="⟷",Longleftrightarrow="⟺",longmapsto="⟼",longrightarrow="⟶",LongRightArrow="⟶",Longrightarrow="⟹",looparrowleft="↫",looparrowright="↬",lopar="⦅",Lopf="𝕃",lopf="𝕝",loplus="⨭",lotimes="⨴",lowast="∗",lowbar="_",LowerLeftArrow="↙",LowerRightArrow="↘",loz="◊",lozenge="◊",lozf="⧫",lpar="(",lparlt="⦓",lrarr="⇆",lrcorner="⌟",lrhar="⇋",lrhard="⥭",lrm="‎",lrtri="⊿",lsaquo="‹",lscr="𝓁",Lscr="ℒ",lsh="↰",Lsh="↰",lsim="≲",lsime="⪍",lsimg="⪏",lsqb="[",lsquo="‘",lsquor="‚",Lstrok="Ł",lstrok="ł",ltcc="⪦",ltcir="⩹",lt="<",LT="<",Lt="≪",ltdot="⋖",lthree="⋋",ltimes="⋉",ltlarr="⥶",ltquest="⩻",ltri="◃",ltrie="⊴",ltrif="◂",ltrPar="⦖",lurdshar="⥊",luruhar="⥦",lvertneqq="≨︀",lvnE="≨︀",macr="¯",male="♂",malt="✠",maltese="✠",map="↦",mapsto="↦",mapstodown="↧",mapstoleft="↤",mapstoup="↥",marker="▮",mcomma="⨩",Mcy="М",mcy="м",mdash="—",mDDot="∺",measuredangle="∡",MediumSpace=" ",Mellintrf="ℳ",Mfr="𝔐",mfr="𝔪",mho="℧",micro="µ",midast="*",midcir="⫰",mid="∣",middot="·",minusb="⊟",minus="−",minusd="∸",minusdu="⨪",MinusPlus="∓",mlcp="⫛",mldr="…",mnplus="∓",models="⊧",Mopf="𝕄",mopf="𝕞",mp="∓",mscr="𝓂",Mscr="ℳ",mstpos="∾",Mu="Μ",mu="μ",multimap="⊸",mumap="⊸",nabla="∇",Nacute="Ń",nacute="ń",nang="∠⃒",nap="≉",napE="⩰̸",napid="≋̸",napos="ŉ",napprox="≉",natural="♮",naturals="ℕ",natur="♮",nbsp=" ",nbump="≎̸",nbumpe="≏̸",ncap="⩃",Ncaron="Ň",ncaron="ň",Ncedil="Ņ",ncedil="ņ",ncong="≇",ncongdot="⩭̸",ncup="⩂",Ncy="Н",ncy="н",ndash="–",nearhk="⤤",nearr="↗",neArr="⇗",nearrow="↗",ne="≠",nedot="≐̸",NegativeMediumSpace="​",NegativeThickSpace="​",NegativeThinSpace="​",NegativeVeryThinSpace="​",nequiv="≢",nesear="⤨",nesim="≂̸",NestedGreaterGreater="≫",NestedLessLess="≪",NewLine="\n",nexist="∄",nexists="∄",Nfr="𝔑",nfr="𝔫",ngE="≧̸",nge="≱",ngeq="≱",ngeqq="≧̸",ngeqslant="⩾̸",nges="⩾̸",nGg="⋙̸",ngsim="≵",nGt="≫⃒",ngt="≯",ngtr="≯",nGtv="≫̸",nharr="↮",nhArr="⇎",nhpar="⫲",ni="∋",nis="⋼",nisd="⋺",niv="∋",NJcy="Њ",njcy="њ",nlarr="↚",nlArr="⇍",nldr="‥",nlE="≦̸",nle="≰",nleftarrow="↚",nLeftarrow="⇍",nleftrightarrow="↮",nLeftrightarrow="⇎",nleq="≰",nleqq="≦̸",nleqslant="⩽̸",nles="⩽̸",nless="≮",nLl="⋘̸",nlsim="≴",nLt="≪⃒",nlt="≮",nltri="⋪",nltrie="⋬",nLtv="≪̸",nmid="∤",NoBreak="⁠",NonBreakingSpace=" ",nopf="𝕟",Nopf="ℕ",Not="⫬",not="¬",NotCongruent="≢",NotCupCap="≭",NotDoubleVerticalBar="∦",NotElement="∉",NotEqual="≠",NotEqualTilde="≂̸",NotExists="∄",NotGreater="≯",NotGreaterEqual="≱",NotGreaterFullEqual="≧̸",NotGreaterGreater="≫̸",NotGreaterLess="≹",NotGreaterSlantEqual="⩾̸",NotGreaterTilde="≵",NotHumpDownHump="≎̸",NotHumpEqual="≏̸",notin="∉",notindot="⋵̸",notinE="⋹̸",notinva="∉",notinvb="⋷",notinvc="⋶",NotLeftTriangleBar="⧏̸",NotLeftTriangle="⋪",NotLeftTriangleEqual="⋬",NotLess="≮",NotLessEqual="≰",NotLessGreater="≸",NotLessLess="≪̸",NotLessSlantEqual="⩽̸",NotLessTilde="≴",NotNestedGreaterGreater="⪢̸",NotNestedLessLess="⪡̸",notni="∌",notniva="∌",notnivb="⋾",notnivc="⋽",NotPrecedes="⊀",NotPrecedesEqual="⪯̸",NotPrecedesSlantEqual="⋠",NotReverseElement="∌",NotRightTriangleBar="⧐̸",NotRightTriangle="⋫",NotRightTriangleEqual="⋭",NotSquareSubset="⊏̸",NotSquareSubsetEqual="⋢",NotSquareSuperset="⊐̸",NotSquareSupersetEqual="⋣",NotSubset="⊂⃒",NotSubsetEqual="⊈",NotSucceeds="⊁",NotSucceedsEqual="⪰̸",NotSucceedsSlantEqual="⋡",NotSucceedsTilde="≿̸",NotSuperset="⊃⃒",NotSupersetEqual="⊉",NotTilde="≁",NotTildeEqual="≄",NotTildeFullEqual="≇",NotTildeTilde="≉",NotVerticalBar="∤",nparallel="∦",npar="∦",nparsl="⫽⃥",npart="∂̸",npolint="⨔",npr="⊀",nprcue="⋠",nprec="⊀",npreceq="⪯̸",npre="⪯̸",nrarrc="⤳̸",nrarr="↛",nrArr="⇏",nrarrw="↝̸",nrightarrow="↛",nRightarrow="⇏",nrtri="⋫",nrtrie="⋭",nsc="⊁",nsccue="⋡",nsce="⪰̸",Nscr="𝒩",nscr="𝓃",nshortmid="∤",nshortparallel="∦",nsim="≁",nsime="≄",nsimeq="≄",nsmid="∤",nspar="∦",nsqsube="⋢",nsqsupe="⋣",nsub="⊄",nsubE="⫅̸",nsube="⊈",nsubset="⊂⃒",nsubseteq="⊈",nsubseteqq="⫅̸",nsucc="⊁",nsucceq="⪰̸",nsup="⊅",nsupE="⫆̸",nsupe="⊉",nsupset="⊃⃒",nsupseteq="⊉",nsupseteqq="⫆̸",ntgl="≹",Ntilde="Ñ",ntilde="ñ",ntlg="≸",ntriangleleft="⋪",ntrianglelefteq="⋬",ntriangleright="⋫",ntrianglerighteq="⋭",Nu="Ν",nu="ν",num="#",numero="№",numsp=" ",nvap="≍⃒",nvdash="⊬",nvDash="⊭",nVdash="⊮",nVDash="⊯",nvge="≥⃒",nvgt=">⃒",nvHarr="⤄",nvinfin="⧞",nvlArr="⤂",nvle="≤⃒",nvlt="<⃒",nvltrie="⊴⃒",nvrArr="⤃",nvrtrie="⊵⃒",nvsim="∼⃒",nwarhk="⤣",nwarr="↖",nwArr="⇖",nwarrow="↖",nwnear="⤧",Oacute="Ó",oacute="ó",oast="⊛",Ocirc="Ô",ocirc="ô",ocir="⊚",Ocy="О",ocy="о",odash="⊝",Odblac="Ő",odblac="ő",odiv="⨸",odot="⊙",odsold="⦼",OElig="Œ",oelig="œ",ofcir="⦿",Ofr="𝔒",ofr="𝔬",ogon="˛",Ograve="Ò",ograve="ò",ogt="⧁",ohbar="⦵",ohm="Ω",oint="∮",olarr="↺",olcir="⦾",olcross="⦻",oline="‾",olt="⧀",Omacr="Ō",omacr="ō",Omega="Ω",omega="ω",Omicron="Ο",omicron="ο",omid="⦶",ominus="⊖",Oopf="𝕆",oopf="𝕠",opar="⦷",OpenCurlyDoubleQuote="“",OpenCurlyQuote="‘",operp="⦹",oplus="⊕",orarr="↻",Or="⩔",or="∨",ord="⩝",order="ℴ",orderof="ℴ",ordf="ª",ordm="º",origof="⊶",oror="⩖",orslope="⩗",orv="⩛",oS="Ⓢ",Oscr="𝒪",oscr="ℴ",Oslash="Ø",oslash="ø",osol="⊘",Otilde="Õ",otilde="õ",otimesas="⨶",Otimes="⨷",otimes="⊗",Ouml="Ö",ouml="ö",ovbar="⌽",OverBar="‾",OverBrace="⏞",OverBracket="⎴",OverParenthesis="⏜",para="¶",parallel="∥",par="∥",parsim="⫳",parsl="⫽",part="∂",PartialD="∂",Pcy="П",pcy="п",percnt="%",period=".",permil="‰",perp="⊥",pertenk="‱",Pfr="𝔓",pfr="𝔭",Phi="Φ",phi="φ",phiv="ϕ",phmmat="ℳ",phone="☎",Pi="Π",pi="π",pitchfork="⋔",piv="ϖ",planck="ℏ",planckh="ℎ",plankv="ℏ",plusacir="⨣",plusb="⊞",pluscir="⨢",plus="+",plusdo="∔",plusdu="⨥",pluse="⩲",PlusMinus="±",plusmn="±",plussim="⨦",plustwo="⨧",pm="±",Poincareplane="ℌ",pointint="⨕",popf="𝕡",Popf="ℙ",pound="£",prap="⪷",Pr="⪻",pr="≺",prcue="≼",precapprox="⪷",prec="≺",preccurlyeq="≼",Precedes="≺",PrecedesEqual="⪯",PrecedesSlantEqual="≼",PrecedesTilde="≾",preceq="⪯",precnapprox="⪹",precneqq="⪵",precnsim="⋨",pre="⪯",prE="⪳",precsim="≾",prime="′",Prime="″",primes="ℙ",prnap="⪹",prnE="⪵",prnsim="⋨",prod="∏",Product="∏",profalar="⌮",profline="⌒",profsurf="⌓",prop="∝",Proportional="∝",Proportion="∷",propto="∝",prsim="≾",prurel="⊰",Pscr="𝒫",pscr="𝓅",Psi="Ψ",psi="ψ",puncsp=" ",Qfr="𝔔",qfr="𝔮",qint="⨌",qopf="𝕢",Qopf="ℚ",qprime="⁗",Qscr="𝒬",qscr="𝓆",quaternions="ℍ",quatint="⨖",quest="?",questeq="≟",quot='"',QUOT='"',rAarr="⇛",race="∽̱",Racute="Ŕ",racute="ŕ",radic="√",raemptyv="⦳",rang="⟩",Rang="⟫",rangd="⦒",range="⦥",rangle="⟩",raquo="»",rarrap="⥵",rarrb="⇥",rarrbfs="⤠",rarrc="⤳",rarr="→",Rarr="↠",rArr="⇒",rarrfs="⤞",rarrhk="↪",rarrlp="↬",rarrpl="⥅",rarrsim="⥴",Rarrtl="⤖",rarrtl="↣",rarrw="↝",ratail="⤚",rAtail="⤜",ratio="∶",rationals="ℚ",rbarr="⤍",rBarr="⤏",RBarr="⤐",rbbrk="❳",rbrace="}",rbrack="]",rbrke="⦌",rbrksld="⦎",rbrkslu="⦐",Rcaron="Ř",rcaron="ř",Rcedil="Ŗ",rcedil="ŗ",rceil="⌉",rcub="}",Rcy="Р",rcy="р",rdca="⤷",rdldhar="⥩",rdquo="”",rdquor="”",rdsh="↳",real="ℜ",realine="ℛ",realpart="ℜ",reals="ℝ",Re="ℜ",rect="▭",reg="®",REG="®",ReverseElement="∋",ReverseEquilibrium="⇋",ReverseUpEquilibrium="⥯",rfisht="⥽",rfloor="⌋",rfr="𝔯",Rfr="ℜ",rHar="⥤",rhard="⇁",rharu="⇀",rharul="⥬",Rho="Ρ",rho="ρ",rhov="ϱ",RightAngleBracket="⟩",RightArrowBar="⇥",rightarrow="→",RightArrow="→",Rightarrow="⇒",RightArrowLeftArrow="⇄",rightarrowtail="↣",RightCeiling="⌉",RightDoubleBracket="⟧",RightDownTeeVector="⥝",RightDownVectorBar="⥕",RightDownVector="⇂",RightFloor="⌋",rightharpoondown="⇁",rightharpoonup="⇀",rightleftarrows="⇄",rightleftharpoons="⇌",rightrightarrows="⇉",rightsquigarrow="↝",RightTeeArrow="↦",RightTee="⊢",RightTeeVector="⥛",rightthreetimes="⋌",RightTriangleBar="⧐",RightTriangle="⊳",RightTriangleEqual="⊵",RightUpDownVector="⥏",RightUpTeeVector="⥜",RightUpVectorBar="⥔",RightUpVector="↾",RightVectorBar="⥓",RightVector="⇀",ring="˚",risingdotseq="≓",rlarr="⇄",rlhar="⇌",rlm="‏",rmoustache="⎱",rmoust="⎱",rnmid="⫮",roang="⟭",roarr="⇾",robrk="⟧",ropar="⦆",ropf="𝕣",Ropf="ℝ",roplus="⨮",rotimes="⨵",RoundImplies="⥰",rpar=")",rpargt="⦔",rppolint="⨒",rrarr="⇉",Rrightarrow="⇛",rsaquo="›",rscr="𝓇",Rscr="ℛ",rsh="↱",Rsh="↱",rsqb="]",rsquo="’",rsquor="’",rthree="⋌",rtimes="⋊",rtri="▹",rtrie="⊵",rtrif="▸",rtriltri="⧎",RuleDelayed="⧴",ruluhar="⥨",rx="℞",Sacute="Ś",sacute="ś",sbquo="‚",scap="⪸",Scaron="Š",scaron="š",Sc="⪼",sc="≻",sccue="≽",sce="⪰",scE="⪴",Scedil="Ş",scedil="ş",Scirc="Ŝ",scirc="ŝ",scnap="⪺",scnE="⪶",scnsim="⋩",scpolint="⨓",scsim="≿",Scy="С",scy="с",sdotb="⊡",sdot="⋅",sdote="⩦",searhk="⤥",searr="↘",seArr="⇘",searrow="↘",sect="§",semi=";",seswar="⤩",setminus="∖",setmn="∖",sext="✶",Sfr="𝔖",sfr="𝔰",sfrown="⌢",sharp="♯",SHCHcy="Щ",shchcy="щ",SHcy="Ш",shcy="ш",ShortDownArrow="↓",ShortLeftArrow="←",shortmid="∣",shortparallel="∥",ShortRightArrow="→",ShortUpArrow="↑",shy="­",Sigma="Σ",sigma="σ",sigmaf="ς",sigmav="ς",sim="∼",simdot="⩪",sime="≃",simeq="≃",simg="⪞",simgE="⪠",siml="⪝",simlE="⪟",simne="≆",simplus="⨤",simrarr="⥲",slarr="←",SmallCircle="∘",smallsetminus="∖",smashp="⨳",smeparsl="⧤",smid="∣",smile="⌣",smt="⪪",smte="⪬",smtes="⪬︀",SOFTcy="Ь",softcy="ь",solbar="⌿",solb="⧄",sol="/",Sopf="𝕊",sopf="𝕤",spades="♠",spadesuit="♠",spar="∥",sqcap="⊓",sqcaps="⊓︀",sqcup="⊔",sqcups="⊔︀",Sqrt="√",sqsub="⊏",sqsube="⊑",sqsubset="⊏",sqsubseteq="⊑",sqsup="⊐",sqsupe="⊒",sqsupset="⊐",sqsupseteq="⊒",square="□",Square="□",SquareIntersection="⊓",SquareSubset="⊏",SquareSubsetEqual="⊑",SquareSuperset="⊐",SquareSupersetEqual="⊒",SquareUnion="⊔",squarf="▪",squ="□",squf="▪",srarr="→",Sscr="𝒮",sscr="𝓈",ssetmn="∖",ssmile="⌣",sstarf="⋆",Star="⋆",star="☆",starf="★",straightepsilon="ϵ",straightphi="ϕ",strns="¯",sub="⊂",Sub="⋐",subdot="⪽",subE="⫅",sube="⊆",subedot="⫃",submult="⫁",subnE="⫋",subne="⊊",subplus="⪿",subrarr="⥹",subset="⊂",Subset="⋐",subseteq="⊆",subseteqq="⫅",SubsetEqual="⊆",subsetneq="⊊",subsetneqq="⫋",subsim="⫇",subsub="⫕",subsup="⫓",succapprox="⪸",succ="≻",succcurlyeq="≽",Succeeds="≻",SucceedsEqual="⪰",SucceedsSlantEqual="≽",SucceedsTilde="≿",succeq="⪰",succnapprox="⪺",succneqq="⪶",succnsim="⋩",succsim="≿",SuchThat="∋",sum="∑",Sum="∑",sung="♪",sup1="¹",sup2="²",sup3="³",sup="⊃",Sup="⋑",supdot="⪾",supdsub="⫘",supE="⫆",supe="⊇",supedot="⫄",Superset="⊃",SupersetEqual="⊇",suphsol="⟉",suphsub="⫗",suplarr="⥻",supmult="⫂",supnE="⫌",supne="⊋",supplus="⫀",supset="⊃",Supset="⋑",supseteq="⊇",supseteqq="⫆",supsetneq="⊋",supsetneqq="⫌",supsim="⫈",supsub="⫔",supsup="⫖",swarhk="⤦",swarr="↙",swArr="⇙",swarrow="↙",swnwar="⤪",szlig="ß",Tab="\t",target="⌖",Tau="Τ",tau="τ",tbrk="⎴",Tcaron="Ť",tcaron="ť",Tcedil="Ţ",tcedil="ţ",Tcy="Т",tcy="т",tdot="⃛",telrec="⌕",Tfr="𝔗",tfr="𝔱",there4="∴",therefore="∴",Therefore="∴",Theta="Θ",theta="θ",thetasym="ϑ",thetav="ϑ",thickapprox="≈",thicksim="∼",ThickSpace="  ",ThinSpace=" ",thinsp=" ",thkap="≈",thksim="∼",THORN="Þ",thorn="þ",tilde="˜",Tilde="∼",TildeEqual="≃",TildeFullEqual="≅",TildeTilde="≈",timesbar="⨱",timesb="⊠",times="×",timesd="⨰",tint="∭",toea="⤨",topbot="⌶",topcir="⫱",top="⊤",Topf="𝕋",topf="𝕥",topfork="⫚",tosa="⤩",tprime="‴",trade="™",TRADE="™",triangle="▵",triangledown="▿",triangleleft="◃",trianglelefteq="⊴",triangleq="≜",triangleright="▹",trianglerighteq="⊵",tridot="◬",trie="≜",triminus="⨺",TripleDot="⃛",triplus="⨹",trisb="⧍",tritime="⨻",trpezium="⏢",Tscr="𝒯",tscr="𝓉",TScy="Ц",tscy="ц",TSHcy="Ћ",tshcy="ћ",Tstrok="Ŧ",tstrok="ŧ",twixt="≬",twoheadleftarrow="↞",twoheadrightarrow="↠",Uacute="Ú",uacute="ú",uarr="↑",Uarr="↟",uArr="⇑",Uarrocir="⥉",Ubrcy="Ў",ubrcy="ў",Ubreve="Ŭ",ubreve="ŭ",Ucirc="Û",ucirc="û",Ucy="У",ucy="у",udarr="⇅",Udblac="Ű",udblac="ű",udhar="⥮",ufisht="⥾",Ufr="𝔘",ufr="𝔲",Ugrave="Ù",ugrave="ù",uHar="⥣",uharl="↿",uharr="↾",uhblk="▀",ulcorn="⌜",ulcorner="⌜",ulcrop="⌏",ultri="◸",Umacr="Ū",umacr="ū",uml="¨",UnderBar="_",UnderBrace="⏟",UnderBracket="⎵",UnderParenthesis="⏝",Union="⋃",UnionPlus="⊎",Uogon="Ų",uogon="ų",Uopf="𝕌",uopf="𝕦",UpArrowBar="⤒",uparrow="↑",UpArrow="↑",Uparrow="⇑",UpArrowDownArrow="⇅",updownarrow="↕",UpDownArrow="↕",Updownarrow="⇕",UpEquilibrium="⥮",upharpoonleft="↿",upharpoonright="↾",uplus="⊎",UpperLeftArrow="↖",UpperRightArrow="↗",upsi="υ",Upsi="ϒ",upsih="ϒ",Upsilon="Υ",upsilon="υ",UpTeeArrow="↥",UpTee="⊥",upuparrows="⇈",urcorn="⌝",urcorner="⌝",urcrop="⌎",Uring="Ů",uring="ů",urtri="◹",Uscr="𝒰",uscr="𝓊",utdot="⋰",Utilde="Ũ",utilde="ũ",utri="▵",utrif="▴",uuarr="⇈",Uuml="Ü",uuml="ü",uwangle="⦧",vangrt="⦜",varepsilon="ϵ",varkappa="ϰ",varnothing="∅",varphi="ϕ",varpi="ϖ",varpropto="∝",varr="↕",vArr="⇕",varrho="ϱ",varsigma="ς",varsubsetneq="⊊︀",varsubsetneqq="⫋︀",varsupsetneq="⊋︀",varsupsetneqq="⫌︀",vartheta="ϑ",vartriangleleft="⊲",vartriangleright="⊳",vBar="⫨",Vbar="⫫",vBarv="⫩",Vcy="В",vcy="в",vdash="⊢",vDash="⊨",Vdash="⊩",VDash="⊫",Vdashl="⫦",veebar="⊻",vee="∨",Vee="⋁",veeeq="≚",vellip="⋮",verbar="|",Verbar="‖",vert="|",Vert="‖",VerticalBar="∣",VerticalLine="|",VerticalSeparator="❘",VerticalTilde="≀",VeryThinSpace=" ",Vfr="𝔙",vfr="𝔳",vltri="⊲",vnsub="⊂⃒",vnsup="⊃⃒",Vopf="𝕍",vopf="𝕧",vprop="∝",vrtri="⊳",Vscr="𝒱",vscr="𝓋",vsubnE="⫋︀",vsubne="⊊︀",vsupnE="⫌︀",vsupne="⊋︀",Vvdash="⊪",vzigzag="⦚",Wcirc="Ŵ",wcirc="ŵ",wedbar="⩟",wedge="∧",Wedge="⋀",wedgeq="≙",weierp="℘",Wfr="𝔚",wfr="𝔴",Wopf="𝕎",wopf="𝕨",wp="℘",wr="≀",wreath="≀",Wscr="𝒲",wscr="𝓌",xcap="⋂",xcirc="◯",xcup="⋃",xdtri="▽",Xfr="𝔛",xfr="𝔵",xharr="⟷",xhArr="⟺",Xi="Ξ",xi="ξ",xlarr="⟵",xlArr="⟸",xmap="⟼",xnis="⋻",xodot="⨀",Xopf="𝕏",xopf="𝕩",xoplus="⨁",xotime="⨂",xrarr="⟶",xrArr="⟹",Xscr="𝒳",xscr="𝓍",xsqcup="⨆",xuplus="⨄",xutri="△",xvee="⋁",xwedge="⋀",Yacute="Ý",yacute="ý",YAcy="Я",yacy="я",Ycirc="Ŷ",ycirc="ŷ",Ycy="Ы",ycy="ы",yen="¥",Yfr="𝔜",yfr="𝔶",YIcy="Ї",yicy="ї",Yopf="𝕐",yopf="𝕪",Yscr="𝒴",yscr="𝓎",YUcy="Ю",yucy="ю",yuml="ÿ",Yuml="Ÿ",Zacute="Ź",zacute="ź",Zcaron="Ž",zcaron="ž",Zcy="З",zcy="з",Zdot="Ż",zdot="ż",zeetrf="ℨ",ZeroWidthSpace="​",Zeta="Ζ",zeta="ζ",zfr="𝔷",Zfr="ℨ",ZHcy="Ж",zhcy="ж",zigrarr="⇝",zopf="𝕫",Zopf="ℤ",Zscr="𝒵",zscr="𝓏",zwj="‍",zwnj="‌",entities={Aacute:Aacute,aacute:aacute,Abreve:Abreve,abreve:abreve,ac:ac,acd:acd,acE:acE,Acirc:Acirc,acirc:acirc,acute:acute,Acy:Acy,acy:acy,AElig:AElig,aelig:aelig,af:af,Afr:Afr,afr:afr,Agrave:Agrave,agrave:agrave,alefsym:alefsym,aleph:aleph,Alpha:Alpha,alpha:alpha,Amacr:Amacr,amacr:amacr,amalg:amalg,amp:amp,AMP:AMP,andand:andand,And:And,and:and,andd:andd,andslope:andslope,andv:andv,ang:ang,ange:ange,angle:angle,angmsdaa:angmsdaa,angmsdab:angmsdab,angmsdac:angmsdac,angmsdad:angmsdad,angmsdae:angmsdae,angmsdaf:angmsdaf,angmsdag:angmsdag,angmsdah:angmsdah,angmsd:angmsd,angrt:angrt,angrtvb:angrtvb,angrtvbd:angrtvbd,angsph:angsph,angst:angst,angzarr:angzarr,Aogon:Aogon,aogon:aogon,Aopf:Aopf,aopf:aopf,apacir:apacir,ap:ap,apE:apE,ape:ape,apid:apid,apos:apos,ApplyFunction:ApplyFunction,approx:approx,approxeq:approxeq,Aring:Aring,aring:aring,Ascr:Ascr,ascr:ascr,Assign:Assign,ast:ast,asymp:asymp,asympeq:asympeq,Atilde:Atilde,atilde:atilde,Auml:Auml,auml:auml,awconint:awconint,awint:awint,backcong:backcong,backepsilon:backepsilon,backprime:backprime,backsim:backsim,backsimeq:backsimeq,Backslash:Backslash,Barv:Barv,barvee:barvee,barwed:barwed,Barwed:Barwed,barwedge:barwedge,bbrk:bbrk,bbrktbrk:bbrktbrk,bcong:bcong,Bcy:Bcy,bcy:bcy,bdquo:bdquo,becaus:becaus,because:because,Because:Because,bemptyv:bemptyv,bepsi:bepsi,bernou:bernou,Bernoullis:Bernoullis,Beta:Beta,beta:beta,beth:beth,between:between,Bfr:Bfr,bfr:bfr,bigcap:bigcap,bigcirc:bigcirc,bigcup:bigcup,bigodot:bigodot,bigoplus:bigoplus,bigotimes:bigotimes,bigsqcup:bigsqcup,bigstar:bigstar,bigtriangledown:bigtriangledown,bigtriangleup:bigtriangleup,biguplus:biguplus,bigvee:bigvee,bigwedge:bigwedge,bkarow:bkarow,blacklozenge:blacklozenge,blacksquare:blacksquare,blacktriangle:blacktriangle,blacktriangledown:blacktriangledown,blacktriangleleft:blacktriangleleft,blacktriangleright:blacktriangleright,blank:blank,blk12:blk12,blk14:blk14,blk34:blk34,block:block,bne:bne,bnequiv:bnequiv,bNot:bNot,bnot:bnot,Bopf:Bopf,bopf:bopf,bot:bot,bottom:bottom,bowtie:bowtie,boxbox:boxbox,boxdl:boxdl,boxdL:boxdL,boxDl:boxDl,boxDL:boxDL,boxdr:boxdr,boxdR:boxdR,boxDr:boxDr,boxDR:boxDR,boxh:boxh,boxH:boxH,boxhd:boxhd,boxHd:boxHd,boxhD:boxhD,boxHD:boxHD,boxhu:boxhu,boxHu:boxHu,boxhU:boxhU,boxHU:boxHU,boxminus:boxminus,boxplus:boxplus,boxtimes:boxtimes,boxul:boxul,boxuL:boxuL,boxUl:boxUl,boxUL:boxUL,boxur:boxur,boxuR:boxuR,boxUr:boxUr,boxUR:boxUR,boxv:boxv,boxV:boxV,boxvh:boxvh,boxvH:boxvH,boxVh:boxVh,boxVH:boxVH,boxvl:boxvl,boxvL:boxvL,boxVl:boxVl,boxVL:boxVL,boxvr:boxvr,boxvR:boxvR,boxVr:boxVr,boxVR:boxVR,bprime:bprime,breve:breve,Breve:Breve,brvbar:brvbar,bscr:bscr,Bscr:Bscr,bsemi:bsemi,bsim:bsim,bsime:bsime,bsolb:bsolb,bsol:bsol,bsolhsub:bsolhsub,bull:bull,bullet:bullet,bump:bump,bumpE:bumpE,bumpe:bumpe,Bumpeq:Bumpeq,bumpeq:bumpeq,Cacute:Cacute,cacute:cacute,capand:capand,capbrcup:capbrcup,capcap:capcap,cap:cap,Cap:Cap,capcup:capcup,capdot:capdot,CapitalDifferentialD:CapitalDifferentialD,caps:caps,caret:caret,caron:caron,Cayleys:Cayleys,ccaps:ccaps,Ccaron:Ccaron,ccaron:ccaron,Ccedil:Ccedil,ccedil:ccedil,Ccirc:Ccirc,ccirc:ccirc,Cconint:Cconint,ccups:ccups,ccupssm:ccupssm,Cdot:Cdot,cdot:cdot,cedil:cedil,Cedilla:Cedilla,cemptyv:cemptyv,cent:cent,centerdot:centerdot,CenterDot:CenterDot,cfr:cfr,Cfr:Cfr,CHcy:CHcy,chcy:chcy,check:check,checkmark:checkmark,Chi:Chi,chi:chi,circ:circ,circeq:circeq,circlearrowleft:circlearrowleft,circlearrowright:circlearrowright,circledast:circledast,circledcirc:circledcirc,circleddash:circleddash,CircleDot:CircleDot,circledR:circledR,circledS:circledS,CircleMinus:CircleMinus,CirclePlus:CirclePlus,CircleTimes:CircleTimes,cir:cir,cirE:cirE,cire:cire,cirfnint:cirfnint,cirmid:cirmid,cirscir:cirscir,ClockwiseContourIntegral:ClockwiseContourIntegral,CloseCurlyDoubleQuote:CloseCurlyDoubleQuote,CloseCurlyQuote:CloseCurlyQuote,clubs:clubs,clubsuit:clubsuit,colon:colon,Colon:Colon,Colone:Colone,colone:colone,coloneq:coloneq,comma:comma,commat:commat,comp:comp,compfn:compfn,complement:complement,complexes:complexes,cong:cong,congdot:congdot,Congruent:Congruent,conint:conint,Conint:Conint,ContourIntegral:ContourIntegral,copf:copf,Copf:Copf,coprod:coprod,Coproduct:Coproduct,copy:copy,COPY:COPY,copysr:copysr,CounterClockwiseContourIntegral:CounterClockwiseContourIntegral,crarr:crarr,cross:cross,Cross:Cross,Cscr:Cscr,cscr:cscr,csub:csub,csube:csube,csup:csup,csupe:csupe,ctdot:ctdot,cudarrl:cudarrl,cudarrr:cudarrr,cuepr:cuepr,cuesc:cuesc,cularr:cularr,cularrp:cularrp,cupbrcap:cupbrcap,cupcap:cupcap,CupCap:CupCap,cup:cup,Cup:Cup,cupcup:cupcup,cupdot:cupdot,cupor:cupor,cups:cups,curarr:curarr,curarrm:curarrm,curlyeqprec:curlyeqprec,curlyeqsucc:curlyeqsucc,curlyvee:curlyvee,curlywedge:curlywedge,curren:curren,curvearrowleft:curvearrowleft,curvearrowright:curvearrowright,cuvee:cuvee,cuwed:cuwed,cwconint:cwconint,cwint:cwint,cylcty:cylcty,dagger:dagger,Dagger:Dagger,daleth:daleth,darr:darr,Darr:Darr,dArr:dArr,dash:dash,Dashv:Dashv,dashv:dashv,dbkarow:dbkarow,dblac:dblac,Dcaron:Dcaron,dcaron:dcaron,Dcy:Dcy,dcy:dcy,ddagger:ddagger,ddarr:ddarr,DD:DD,dd:dd,DDotrahd:DDotrahd,ddotseq:ddotseq,deg:deg,Del:Del,Delta:Delta,delta:delta,demptyv:demptyv,dfisht:dfisht,Dfr:Dfr,dfr:dfr,dHar:dHar,dharl:dharl,dharr:dharr,DiacriticalAcute:DiacriticalAcute,DiacriticalDot:DiacriticalDot,DiacriticalDoubleAcute:DiacriticalDoubleAcute,DiacriticalGrave:DiacriticalGrave,DiacriticalTilde:DiacriticalTilde,diam:diam,diamond:diamond,Diamond:Diamond,diamondsuit:diamondsuit,diams:diams,die:die,DifferentialD:DifferentialD,digamma:digamma,disin:disin,div:div,divide:divide,divideontimes:divideontimes,divonx:divonx,DJcy:DJcy,djcy:djcy,dlcorn:dlcorn,dlcrop:dlcrop,dollar:dollar,Dopf:Dopf,dopf:dopf,Dot:Dot,dot:dot,DotDot:DotDot,doteq:doteq,doteqdot:doteqdot,DotEqual:DotEqual,dotminus:dotminus,dotplus:dotplus,dotsquare:dotsquare,doublebarwedge:doublebarwedge,DoubleContourIntegral:DoubleContourIntegral,DoubleDot:DoubleDot,DoubleDownArrow:DoubleDownArrow,DoubleLeftArrow:DoubleLeftArrow,DoubleLeftRightArrow:DoubleLeftRightArrow,DoubleLeftTee:DoubleLeftTee,DoubleLongLeftArrow:DoubleLongLeftArrow,DoubleLongLeftRightArrow:DoubleLongLeftRightArrow,DoubleLongRightArrow:DoubleLongRightArrow,DoubleRightArrow:DoubleRightArrow,DoubleRightTee:DoubleRightTee,DoubleUpArrow:DoubleUpArrow,DoubleUpDownArrow:DoubleUpDownArrow,DoubleVerticalBar:DoubleVerticalBar,DownArrowBar:DownArrowBar,downarrow:downarrow,DownArrow:DownArrow,Downarrow:Downarrow,DownArrowUpArrow:DownArrowUpArrow,DownBreve:DownBreve,downdownarrows:downdownarrows,downharpoonleft:downharpoonleft,downharpoonright:downharpoonright,DownLeftRightVector:DownLeftRightVector,DownLeftTeeVector:DownLeftTeeVector,DownLeftVectorBar:DownLeftVectorBar,DownLeftVector:DownLeftVector,DownRightTeeVector:DownRightTeeVector,DownRightVectorBar:DownRightVectorBar,DownRightVector:DownRightVector,DownTeeArrow:DownTeeArrow,DownTee:DownTee,drbkarow:drbkarow,drcorn:drcorn,drcrop:drcrop,Dscr:Dscr,dscr:dscr,DScy:DScy,dscy:dscy,dsol:dsol,Dstrok:Dstrok,dstrok:dstrok,dtdot:dtdot,dtri:dtri,dtrif:dtrif,duarr:duarr,duhar:duhar,dwangle:dwangle,DZcy:DZcy,dzcy:dzcy,dzigrarr:dzigrarr,Eacute:Eacute,eacute:eacute,easter:easter,Ecaron:Ecaron,ecaron:ecaron,Ecirc:Ecirc,ecirc:ecirc,ecir:ecir,ecolon:ecolon,Ecy:Ecy,ecy:ecy,eDDot:eDDot,Edot:Edot,edot:edot,eDot:eDot,ee:ee,efDot:efDot,Efr:Efr,efr:efr,eg:eg,Egrave:Egrave,egrave:egrave,egs:egs,egsdot:egsdot,el:el,Element:Element,elinters:elinters,ell:ell,els:els,elsdot:elsdot,Emacr:Emacr,emacr:emacr,empty:empty,emptyset:emptyset,EmptySmallSquare:EmptySmallSquare,emptyv:emptyv,EmptyVerySmallSquare:EmptyVerySmallSquare,emsp13:emsp13,emsp14:emsp14,emsp:emsp,ENG:ENG,eng:eng,ensp:ensp,Eogon:Eogon,eogon:eogon,Eopf:Eopf,eopf:eopf,epar:epar,eparsl:eparsl,eplus:eplus,epsi:epsi,Epsilon:Epsilon,epsilon:epsilon,epsiv:epsiv,eqcirc:eqcirc,eqcolon:eqcolon,eqsim:eqsim,eqslantgtr:eqslantgtr,eqslantless:eqslantless,Equal:Equal,equals:equals,EqualTilde:EqualTilde,equest:equest,Equilibrium:Equilibrium,equiv:equiv,equivDD:equivDD,eqvparsl:eqvparsl,erarr:erarr,erDot:erDot,escr:escr,Escr:Escr,esdot:esdot,Esim:Esim,esim:esim,Eta:Eta,eta:eta,ETH:ETH,eth:eth,Euml:Euml,euml:euml,euro:euro,excl:excl,exist:exist,Exists:Exists,expectation:expectation,exponentiale:exponentiale,ExponentialE:ExponentialE,fallingdotseq:fallingdotseq,Fcy:Fcy,fcy:fcy,female:female,ffilig:ffilig,fflig:fflig,ffllig:ffllig,Ffr:Ffr,ffr:ffr,filig:filig,FilledSmallSquare:FilledSmallSquare,FilledVerySmallSquare:FilledVerySmallSquare,fjlig:fjlig,flat:flat,fllig:fllig,fltns:fltns,fnof:fnof,Fopf:Fopf,fopf:fopf,forall:forall,ForAll:ForAll,fork:fork,forkv:forkv,Fouriertrf:Fouriertrf,fpartint:fpartint,frac12:frac12,frac13:frac13,frac14:frac14,frac15:frac15,frac16:frac16,frac18:frac18,frac23:frac23,frac25:frac25,frac34:frac34,frac35:frac35,frac38:frac38,frac45:frac45,frac56:frac56,frac58:frac58,frac78:frac78,frasl:frasl,frown:frown,fscr:fscr,Fscr:Fscr,gacute:gacute,Gamma:Gamma,gamma:gamma,Gammad:Gammad,gammad:gammad,gap:gap,Gbreve:Gbreve,gbreve:gbreve,Gcedil:Gcedil,Gcirc:Gcirc,gcirc:gcirc,Gcy:Gcy,gcy:gcy,Gdot:Gdot,gdot:gdot,ge:ge,gE:gE,gEl:gEl,gel:gel,geq:geq,geqq:geqq,geqslant:geqslant,gescc:gescc,ges:ges,gesdot:gesdot,gesdoto:gesdoto,gesdotol:gesdotol,gesl:gesl,gesles:gesles,Gfr:Gfr,gfr:gfr,gg:gg,Gg:Gg,ggg:ggg,gimel:gimel,GJcy:GJcy,gjcy:gjcy,gla:gla,gl:gl,glE:glE,glj:glj,gnap:gnap,gnapprox:gnapprox,gne:gne,gnE:gnE,gneq:gneq,gneqq:gneqq,gnsim:gnsim,Gopf:Gopf,gopf:gopf,grave:grave,GreaterEqual:GreaterEqual,GreaterEqualLess:GreaterEqualLess,GreaterFullEqual:GreaterFullEqual,GreaterGreater:GreaterGreater,GreaterLess:GreaterLess,GreaterSlantEqual:GreaterSlantEqual,GreaterTilde:GreaterTilde,Gscr:Gscr,gscr:gscr,gsim:gsim,gsime:gsime,gsiml:gsiml,gtcc:gtcc,gtcir:gtcir,gt:gt,GT:GT,Gt:Gt,gtdot:gtdot,gtlPar:gtlPar,gtquest:gtquest,gtrapprox:gtrapprox,gtrarr:gtrarr,gtrdot:gtrdot,gtreqless:gtreqless,gtreqqless:gtreqqless,gtrless:gtrless,gtrsim:gtrsim,gvertneqq:gvertneqq,gvnE:gvnE,Hacek:Hacek,hairsp:hairsp,half:half,hamilt:hamilt,HARDcy:HARDcy,hardcy:hardcy,harrcir:harrcir,harr:harr,hArr:hArr,harrw:harrw,Hat:Hat,hbar:hbar,Hcirc:Hcirc,hcirc:hcirc,hearts:hearts,heartsuit:heartsuit,hellip:hellip,hercon:hercon,hfr:hfr,Hfr:Hfr,HilbertSpace:HilbertSpace,hksearow:hksearow,hkswarow:hkswarow,hoarr:hoarr,homtht:homtht,hookleftarrow:hookleftarrow,hookrightarrow:hookrightarrow,hopf:hopf,Hopf:Hopf,horbar:horbar,HorizontalLine:HorizontalLine,hscr:hscr,Hscr:Hscr,hslash:hslash,Hstrok:Hstrok,hstrok:hstrok,HumpDownHump:HumpDownHump,HumpEqual:HumpEqual,hybull:hybull,hyphen:hyphen,Iacute:Iacute,iacute:iacute,ic:ic,Icirc:Icirc,icirc:icirc,Icy:Icy,icy:icy,Idot:Idot,IEcy:IEcy,iecy:iecy,iexcl:iexcl,iff:iff,ifr:ifr,Ifr:Ifr,Igrave:Igrave,igrave:igrave,ii:ii,iiiint:iiiint,iiint:iiint,iinfin:iinfin,iiota:iiota,IJlig:IJlig,ijlig:ijlig,Imacr:Imacr,imacr:imacr,image:image,ImaginaryI:ImaginaryI,imagline:imagline,imagpart:imagpart,imath:imath,Im:Im,imof:imof,imped:imped,Implies:Implies,incare:incare,in:"∈",infin:infin,infintie:infintie,inodot:inodot,intcal:intcal,int:int,Int:Int,integers:integers,Integral:Integral,intercal:intercal,Intersection:Intersection,intlarhk:intlarhk,intprod:intprod,InvisibleComma:InvisibleComma,InvisibleTimes:InvisibleTimes,IOcy:IOcy,iocy:iocy,Iogon:Iogon,iogon:iogon,Iopf:Iopf,iopf:iopf,Iota:Iota,iota:iota,iprod:iprod,iquest:iquest,iscr:iscr,Iscr:Iscr,isin:isin,isindot:isindot,isinE:isinE,isins:isins,isinsv:isinsv,isinv:isinv,it:it,Itilde:Itilde,itilde:itilde,Iukcy:Iukcy,iukcy:iukcy,Iuml:Iuml,iuml:iuml,Jcirc:Jcirc,jcirc:jcirc,Jcy:Jcy,jcy:jcy,Jfr:Jfr,jfr:jfr,jmath:jmath,Jopf:Jopf,jopf:jopf,Jscr:Jscr,jscr:jscr,Jsercy:Jsercy,jsercy:jsercy,Jukcy:Jukcy,jukcy:jukcy,Kappa:Kappa,kappa:kappa,kappav:kappav,Kcedil:Kcedil,kcedil:kcedil,Kcy:Kcy,kcy:kcy,Kfr:Kfr,kfr:kfr,kgreen:kgreen,KHcy:KHcy,khcy:khcy,KJcy:KJcy,kjcy:kjcy,Kopf:Kopf,kopf:kopf,Kscr:Kscr,kscr:kscr,lAarr:lAarr,Lacute:Lacute,lacute:lacute,laemptyv:laemptyv,lagran:lagran,Lambda:Lambda,lambda:lambda,lang:lang,Lang:Lang,langd:langd,langle:langle,lap:lap,Laplacetrf:Laplacetrf,laquo:laquo,larrb:larrb,larrbfs:larrbfs,larr:larr,Larr:Larr,lArr:lArr,larrfs:larrfs,larrhk:larrhk,larrlp:larrlp,larrpl:larrpl,larrsim:larrsim,larrtl:larrtl,latail:latail,lAtail:lAtail,lat:lat,late:late,lates:lates,lbarr:lbarr,lBarr:lBarr,lbbrk:lbbrk,lbrace:lbrace,lbrack:lbrack,lbrke:lbrke,lbrksld:lbrksld,lbrkslu:lbrkslu,Lcaron:Lcaron,lcaron:lcaron,Lcedil:Lcedil,lcedil:lcedil,lceil:lceil,lcub:lcub,Lcy:Lcy,lcy:lcy,ldca:ldca,ldquo:ldquo,ldquor:ldquor,ldrdhar:ldrdhar,ldrushar:ldrushar,ldsh:ldsh,le:le,lE:lE,LeftAngleBracket:LeftAngleBracket,LeftArrowBar:LeftArrowBar,leftarrow:leftarrow,LeftArrow:LeftArrow,Leftarrow:Leftarrow,LeftArrowRightArrow:LeftArrowRightArrow,leftarrowtail:leftarrowtail,LeftCeiling:LeftCeiling,LeftDoubleBracket:LeftDoubleBracket,LeftDownTeeVector:LeftDownTeeVector,LeftDownVectorBar:LeftDownVectorBar,LeftDownVector:LeftDownVector,LeftFloor:LeftFloor,leftharpoondown:leftharpoondown,leftharpoonup:leftharpoonup,leftleftarrows:leftleftarrows,leftrightarrow:leftrightarrow,LeftRightArrow:LeftRightArrow,Leftrightarrow:Leftrightarrow,leftrightarrows:leftrightarrows,leftrightharpoons:leftrightharpoons,leftrightsquigarrow:leftrightsquigarrow,LeftRightVector:LeftRightVector,LeftTeeArrow:LeftTeeArrow,LeftTee:LeftTee,LeftTeeVector:LeftTeeVector,leftthreetimes:leftthreetimes,LeftTriangleBar:LeftTriangleBar,LeftTriangle:LeftTriangle,LeftTriangleEqual:LeftTriangleEqual,LeftUpDownVector:LeftUpDownVector,LeftUpTeeVector:LeftUpTeeVector,LeftUpVectorBar:LeftUpVectorBar,LeftUpVector:LeftUpVector,LeftVectorBar:LeftVectorBar,LeftVector:LeftVector,lEg:lEg,leg:leg,leq:leq,leqq:leqq,leqslant:leqslant,lescc:lescc,les:les,lesdot:lesdot,lesdoto:lesdoto,lesdotor:lesdotor,lesg:lesg,lesges:lesges,lessapprox:lessapprox,lessdot:lessdot,lesseqgtr:lesseqgtr,lesseqqgtr:lesseqqgtr,LessEqualGreater:LessEqualGreater,LessFullEqual:LessFullEqual,LessGreater:LessGreater,lessgtr:lessgtr,LessLess:LessLess,lesssim:lesssim,LessSlantEqual:LessSlantEqual,LessTilde:LessTilde,lfisht:lfisht,lfloor:lfloor,Lfr:Lfr,lfr:lfr,lg:lg,lgE:lgE,lHar:lHar,lhard:lhard,lharu:lharu,lharul:lharul,lhblk:lhblk,LJcy:LJcy,ljcy:ljcy,llarr:llarr,ll:ll,Ll:Ll,llcorner:llcorner,Lleftarrow:Lleftarrow,llhard:llhard,lltri:lltri,Lmidot:Lmidot,lmidot:lmidot,lmoustache:lmoustache,lmoust:lmoust,lnap:lnap,lnapprox:lnapprox,lne:lne,lnE:lnE,lneq:lneq,lneqq:lneqq,lnsim:lnsim,loang:loang,loarr:loarr,lobrk:lobrk,longleftarrow:longleftarrow,LongLeftArrow:LongLeftArrow,Longleftarrow:Longleftarrow,longleftrightarrow:longleftrightarrow,LongLeftRightArrow:LongLeftRightArrow,Longleftrightarrow:Longleftrightarrow,longmapsto:longmapsto,longrightarrow:longrightarrow,LongRightArrow:LongRightArrow,Longrightarrow:Longrightarrow,looparrowleft:looparrowleft,looparrowright:looparrowright,lopar:lopar,Lopf:Lopf,lopf:lopf,loplus:loplus,lotimes:lotimes,lowast:lowast,lowbar:lowbar,LowerLeftArrow:LowerLeftArrow,LowerRightArrow:LowerRightArrow,loz:loz,lozenge:lozenge,lozf:lozf,lpar:lpar,lparlt:lparlt,lrarr:lrarr,lrcorner:lrcorner,lrhar:lrhar,lrhard:lrhard,lrm:lrm,lrtri:lrtri,lsaquo:lsaquo,lscr:lscr,Lscr:Lscr,lsh:lsh,Lsh:Lsh,lsim:lsim,lsime:lsime,lsimg:lsimg,lsqb:lsqb,lsquo:lsquo,lsquor:lsquor,Lstrok:Lstrok,lstrok:lstrok,ltcc:ltcc,ltcir:ltcir,lt:lt,LT:LT,Lt:Lt,ltdot:ltdot,lthree:lthree,ltimes:ltimes,ltlarr:ltlarr,ltquest:ltquest,ltri:ltri,ltrie:ltrie,ltrif:ltrif,ltrPar:ltrPar,lurdshar:lurdshar,luruhar:luruhar,lvertneqq:lvertneqq,lvnE:lvnE,macr:macr,male:male,malt:malt,maltese:maltese,Map:"⤅",map:map,mapsto:mapsto,mapstodown:mapstodown,mapstoleft:mapstoleft,mapstoup:mapstoup,marker:marker,mcomma:mcomma,Mcy:Mcy,mcy:mcy,mdash:mdash,mDDot:mDDot,measuredangle:measuredangle,MediumSpace:MediumSpace,Mellintrf:Mellintrf,Mfr:Mfr,mfr:mfr,mho:mho,micro:micro,midast:midast,midcir:midcir,mid:mid,middot:middot,minusb:minusb,minus:minus,minusd:minusd,minusdu:minusdu,MinusPlus:MinusPlus,mlcp:mlcp,mldr:mldr,mnplus:mnplus,models:models,Mopf:Mopf,mopf:mopf,mp:mp,mscr:mscr,Mscr:Mscr,mstpos:mstpos,Mu:Mu,mu:mu,multimap:multimap,mumap:mumap,nabla:nabla,Nacute:Nacute,nacute:nacute,nang:nang,nap:nap,napE:napE,napid:napid,napos:napos,napprox:napprox,natural:natural,naturals:naturals,natur:natur,nbsp:nbsp,nbump:nbump,nbumpe:nbumpe,ncap:ncap,Ncaron:Ncaron,ncaron:ncaron,Ncedil:Ncedil,ncedil:ncedil,ncong:ncong,ncongdot:ncongdot,ncup:ncup,Ncy:Ncy,ncy:ncy,ndash:ndash,nearhk:nearhk,nearr:nearr,neArr:neArr,nearrow:nearrow,ne:ne,nedot:nedot,NegativeMediumSpace:NegativeMediumSpace,NegativeThickSpace:NegativeThickSpace,NegativeThinSpace:NegativeThinSpace,NegativeVeryThinSpace:NegativeVeryThinSpace,nequiv:nequiv,nesear:nesear,nesim:nesim,NestedGreaterGreater:NestedGreaterGreater,NestedLessLess:NestedLessLess,NewLine:NewLine,nexist:nexist,nexists:nexists,Nfr:Nfr,nfr:nfr,ngE:ngE,nge:nge,ngeq:ngeq,ngeqq:ngeqq,ngeqslant:ngeqslant,nges:nges,nGg:nGg,ngsim:ngsim,nGt:nGt,ngt:ngt,ngtr:ngtr,nGtv:nGtv,nharr:nharr,nhArr:nhArr,nhpar:nhpar,ni:ni,nis:nis,nisd:nisd,niv:niv,NJcy:NJcy,njcy:njcy,nlarr:nlarr,nlArr:nlArr,nldr:nldr,nlE:nlE,nle:nle,nleftarrow:nleftarrow,nLeftarrow:nLeftarrow,nleftrightarrow:nleftrightarrow,nLeftrightarrow:nLeftrightarrow,nleq:nleq,nleqq:nleqq,nleqslant:nleqslant,nles:nles,nless:nless,nLl:nLl,nlsim:nlsim,nLt:nLt,nlt:nlt,nltri:nltri,nltrie:nltrie,nLtv:nLtv,nmid:nmid,NoBreak:NoBreak,NonBreakingSpace:NonBreakingSpace,nopf:nopf,Nopf:Nopf,Not:Not,not:not,NotCongruent:NotCongruent,NotCupCap:NotCupCap,NotDoubleVerticalBar:NotDoubleVerticalBar,NotElement:NotElement,NotEqual:NotEqual,NotEqualTilde:NotEqualTilde,NotExists:NotExists,NotGreater:NotGreater,NotGreaterEqual:NotGreaterEqual,NotGreaterFullEqual:NotGreaterFullEqual,NotGreaterGreater:NotGreaterGreater,NotGreaterLess:NotGreaterLess,NotGreaterSlantEqual:NotGreaterSlantEqual,NotGreaterTilde:NotGreaterTilde,NotHumpDownHump:NotHumpDownHump,NotHumpEqual:NotHumpEqual,notin:notin,notindot:notindot,notinE:notinE,notinva:notinva,notinvb:notinvb,notinvc:notinvc,NotLeftTriangleBar:NotLeftTriangleBar,NotLeftTriangle:NotLeftTriangle,NotLeftTriangleEqual:NotLeftTriangleEqual,NotLess:NotLess,NotLessEqual:NotLessEqual,NotLessGreater:NotLessGreater,NotLessLess:NotLessLess,NotLessSlantEqual:NotLessSlantEqual,NotLessTilde:NotLessTilde,NotNestedGreaterGreater:NotNestedGreaterGreater,NotNestedLessLess:NotNestedLessLess,notni:notni,notniva:notniva,notnivb:notnivb,notnivc:notnivc,NotPrecedes:NotPrecedes,NotPrecedesEqual:NotPrecedesEqual,NotPrecedesSlantEqual:NotPrecedesSlantEqual,NotReverseElement:NotReverseElement,NotRightTriangleBar:NotRightTriangleBar,NotRightTriangle:NotRightTriangle,NotRightTriangleEqual:NotRightTriangleEqual,NotSquareSubset:NotSquareSubset,NotSquareSubsetEqual:NotSquareSubsetEqual,NotSquareSuperset:NotSquareSuperset,NotSquareSupersetEqual:NotSquareSupersetEqual,NotSubset:NotSubset,NotSubsetEqual:NotSubsetEqual,NotSucceeds:NotSucceeds,NotSucceedsEqual:NotSucceedsEqual,NotSucceedsSlantEqual:NotSucceedsSlantEqual,NotSucceedsTilde:NotSucceedsTilde,NotSuperset:NotSuperset,NotSupersetEqual:NotSupersetEqual,NotTilde:NotTilde,NotTildeEqual:NotTildeEqual,NotTildeFullEqual:NotTildeFullEqual,NotTildeTilde:NotTildeTilde,NotVerticalBar:NotVerticalBar,nparallel:nparallel,npar:npar,nparsl:nparsl,npart:npart,npolint:npolint,npr:npr,nprcue:nprcue,nprec:nprec,npreceq:npreceq,npre:npre,nrarrc:nrarrc,nrarr:nrarr,nrArr:nrArr,nrarrw:nrarrw,nrightarrow:nrightarrow,nRightarrow:nRightarrow,nrtri:nrtri,nrtrie:nrtrie,nsc:nsc,nsccue:nsccue,nsce:nsce,Nscr:Nscr,nscr:nscr,nshortmid:nshortmid,nshortparallel:nshortparallel,nsim:nsim,nsime:nsime,nsimeq:nsimeq,nsmid:nsmid,nspar:nspar,nsqsube:nsqsube,nsqsupe:nsqsupe,nsub:nsub,nsubE:nsubE,nsube:nsube,nsubset:nsubset,nsubseteq:nsubseteq,nsubseteqq:nsubseteqq,nsucc:nsucc,nsucceq:nsucceq,nsup:nsup,nsupE:nsupE,nsupe:nsupe,nsupset:nsupset,nsupseteq:nsupseteq,nsupseteqq:nsupseteqq,ntgl:ntgl,Ntilde:Ntilde,ntilde:ntilde,ntlg:ntlg,ntriangleleft:ntriangleleft,ntrianglelefteq:ntrianglelefteq,ntriangleright:ntriangleright,ntrianglerighteq:ntrianglerighteq,Nu:Nu,nu:nu,num:num,numero:numero,numsp:numsp,nvap:nvap,nvdash:nvdash,nvDash:nvDash,nVdash:nVdash,nVDash:nVDash,nvge:nvge,nvgt:nvgt,nvHarr:nvHarr,nvinfin:nvinfin,nvlArr:nvlArr,nvle:nvle,nvlt:nvlt,nvltrie:nvltrie,nvrArr:nvrArr,nvrtrie:nvrtrie,nvsim:nvsim,nwarhk:nwarhk,nwarr:nwarr,nwArr:nwArr,nwarrow:nwarrow,nwnear:nwnear,Oacute:Oacute,oacute:oacute,oast:oast,Ocirc:Ocirc,ocirc:ocirc,ocir:ocir,Ocy:Ocy,ocy:ocy,odash:odash,Odblac:Odblac,odblac:odblac,odiv:odiv,odot:odot,odsold:odsold,OElig:OElig,oelig:oelig,ofcir:ofcir,Ofr:Ofr,ofr:ofr,ogon:ogon,Ograve:Ograve,ograve:ograve,ogt:ogt,ohbar:ohbar,ohm:ohm,oint:oint,olarr:olarr,olcir:olcir,olcross:olcross,oline:oline,olt:olt,Omacr:Omacr,omacr:omacr,Omega:Omega,omega:omega,Omicron:Omicron,omicron:omicron,omid:omid,ominus:ominus,Oopf:Oopf,oopf:oopf,opar:opar,OpenCurlyDoubleQuote:OpenCurlyDoubleQuote,OpenCurlyQuote:OpenCurlyQuote,operp:operp,oplus:oplus,orarr:orarr,Or:Or,or:or,ord:ord,order:order,orderof:orderof,ordf:ordf,ordm:ordm,origof:origof,oror:oror,orslope:orslope,orv:orv,oS:oS,Oscr:Oscr,oscr:oscr,Oslash:Oslash,oslash:oslash,osol:osol,Otilde:Otilde,otilde:otilde,otimesas:otimesas,Otimes:Otimes,otimes:otimes,Ouml:Ouml,ouml:ouml,ovbar:ovbar,OverBar:OverBar,OverBrace:OverBrace,OverBracket:OverBracket,OverParenthesis:OverParenthesis,para:para,parallel:parallel,par:par,parsim:parsim,parsl:parsl,part:part,PartialD:PartialD,Pcy:Pcy,pcy:pcy,percnt:percnt,period:period,permil:permil,perp:perp,pertenk:pertenk,Pfr:Pfr,pfr:pfr,Phi:Phi,phi:phi,phiv:phiv,phmmat:phmmat,phone:phone,Pi:Pi,pi:pi,pitchfork:pitchfork,piv:piv,planck:planck,planckh:planckh,plankv:plankv,plusacir:plusacir,plusb:plusb,pluscir:pluscir,plus:plus,plusdo:plusdo,plusdu:plusdu,pluse:pluse,PlusMinus:PlusMinus,plusmn:plusmn,plussim:plussim,plustwo:plustwo,pm:pm,Poincareplane:Poincareplane,pointint:pointint,popf:popf,Popf:Popf,pound:pound,prap:prap,Pr:Pr,pr:pr,prcue:prcue,precapprox:precapprox,prec:prec,preccurlyeq:preccurlyeq,Precedes:Precedes,PrecedesEqual:PrecedesEqual,PrecedesSlantEqual:PrecedesSlantEqual,PrecedesTilde:PrecedesTilde,preceq:preceq,precnapprox:precnapprox,precneqq:precneqq,precnsim:precnsim,pre:pre,prE:prE,precsim:precsim,prime:prime,Prime:Prime,primes:primes,prnap:prnap,prnE:prnE,prnsim:prnsim,prod:prod,Product:Product,profalar:profalar,profline:profline,profsurf:profsurf,prop:prop,Proportional:Proportional,Proportion:Proportion,propto:propto,prsim:prsim,prurel:prurel,Pscr:Pscr,pscr:pscr,Psi:Psi,psi:psi,puncsp:puncsp,Qfr:Qfr,qfr:qfr,qint:qint,qopf:qopf,Qopf:Qopf,qprime:qprime,Qscr:Qscr,qscr:qscr,quaternions:quaternions,quatint:quatint,quest:quest,questeq:questeq,quot:quot,QUOT:QUOT,rAarr:rAarr,race:race,Racute:Racute,racute:racute,radic:radic,raemptyv:raemptyv,rang:rang,Rang:Rang,rangd:rangd,range:range,rangle:rangle,raquo:raquo,rarrap:rarrap,rarrb:rarrb,rarrbfs:rarrbfs,rarrc:rarrc,rarr:rarr,Rarr:Rarr,rArr:rArr,rarrfs:rarrfs,rarrhk:rarrhk,rarrlp:rarrlp,rarrpl:rarrpl,rarrsim:rarrsim,Rarrtl:Rarrtl,rarrtl:rarrtl,rarrw:rarrw,ratail:ratail,rAtail:rAtail,ratio:ratio,rationals:rationals,rbarr:rbarr,rBarr:rBarr,RBarr:RBarr,rbbrk:rbbrk,rbrace:rbrace,rbrack:rbrack,rbrke:rbrke,rbrksld:rbrksld,rbrkslu:rbrkslu,Rcaron:Rcaron,rcaron:rcaron,Rcedil:Rcedil,rcedil:rcedil,rceil:rceil,rcub:rcub,Rcy:Rcy,rcy:rcy,rdca:rdca,rdldhar:rdldhar,rdquo:rdquo,rdquor:rdquor,rdsh:rdsh,real:real,realine:realine,realpart:realpart,reals:reals,Re:Re,rect:rect,reg:reg,REG:REG,ReverseElement:ReverseElement,ReverseEquilibrium:ReverseEquilibrium,ReverseUpEquilibrium:ReverseUpEquilibrium,rfisht:rfisht,rfloor:rfloor,rfr:rfr,Rfr:Rfr,rHar:rHar,rhard:rhard,rharu:rharu,rharul:rharul,Rho:Rho,rho:rho,rhov:rhov,RightAngleBracket:RightAngleBracket,RightArrowBar:RightArrowBar,rightarrow:rightarrow,RightArrow:RightArrow,Rightarrow:Rightarrow,RightArrowLeftArrow:RightArrowLeftArrow,rightarrowtail:rightarrowtail,RightCeiling:RightCeiling,RightDoubleBracket:RightDoubleBracket,RightDownTeeVector:RightDownTeeVector,RightDownVectorBar:RightDownVectorBar,RightDownVector:RightDownVector,RightFloor:RightFloor,rightharpoondown:rightharpoondown,rightharpoonup:rightharpoonup,rightleftarrows:rightleftarrows,rightleftharpoons:rightleftharpoons,rightrightarrows:rightrightarrows,rightsquigarrow:rightsquigarrow,RightTeeArrow:RightTeeArrow,RightTee:RightTee,RightTeeVector:RightTeeVector,rightthreetimes:rightthreetimes,RightTriangleBar:RightTriangleBar,RightTriangle:RightTriangle,RightTriangleEqual:RightTriangleEqual,RightUpDownVector:RightUpDownVector,RightUpTeeVector:RightUpTeeVector,RightUpVectorBar:RightUpVectorBar,RightUpVector:RightUpVector,RightVectorBar:RightVectorBar,RightVector:RightVector,ring:ring,risingdotseq:risingdotseq,rlarr:rlarr,rlhar:rlhar,rlm:rlm,rmoustache:rmoustache,rmoust:rmoust,rnmid:rnmid,roang:roang,roarr:roarr,robrk:robrk,ropar:ropar,ropf:ropf,Ropf:Ropf,roplus:roplus,rotimes:rotimes,RoundImplies:RoundImplies,rpar:rpar,rpargt:rpargt,rppolint:rppolint,rrarr:rrarr,Rrightarrow:Rrightarrow,rsaquo:rsaquo,rscr:rscr,Rscr:Rscr,rsh:rsh,Rsh:Rsh,rsqb:rsqb,rsquo:rsquo,rsquor:rsquor,rthree:rthree,rtimes:rtimes,rtri:rtri,rtrie:rtrie,rtrif:rtrif,rtriltri:rtriltri,RuleDelayed:RuleDelayed,ruluhar:ruluhar,rx:rx,Sacute:Sacute,sacute:sacute,sbquo:sbquo,scap:scap,Scaron:Scaron,scaron:scaron,Sc:Sc,sc:sc,sccue:sccue,sce:sce,scE:scE,Scedil:Scedil,scedil:scedil,Scirc:Scirc,scirc:scirc,scnap:scnap,scnE:scnE,scnsim:scnsim,scpolint:scpolint,scsim:scsim,Scy:Scy,scy:scy,sdotb:sdotb,sdot:sdot,sdote:sdote,searhk:searhk,searr:searr,seArr:seArr,searrow:searrow,sect:sect,semi:semi,seswar:seswar,setminus:setminus,setmn:setmn,sext:sext,Sfr:Sfr,sfr:sfr,sfrown:sfrown,sharp:sharp,SHCHcy:SHCHcy,shchcy:shchcy,SHcy:SHcy,shcy:shcy,ShortDownArrow:ShortDownArrow,ShortLeftArrow:ShortLeftArrow,shortmid:shortmid,shortparallel:shortparallel,ShortRightArrow:ShortRightArrow,ShortUpArrow:ShortUpArrow,shy:shy,Sigma:Sigma,sigma:sigma,sigmaf:sigmaf,sigmav:sigmav,sim:sim,simdot:simdot,sime:sime,simeq:simeq,simg:simg,simgE:simgE,siml:siml,simlE:simlE,simne:simne,simplus:simplus,simrarr:simrarr,slarr:slarr,SmallCircle:SmallCircle,smallsetminus:smallsetminus,smashp:smashp,smeparsl:smeparsl,smid:smid,smile:smile,smt:smt,smte:smte,smtes:smtes,SOFTcy:SOFTcy,softcy:softcy,solbar:solbar,solb:solb,sol:sol,Sopf:Sopf,sopf:sopf,spades:spades,spadesuit:spadesuit,spar:spar,sqcap:sqcap,sqcaps:sqcaps,sqcup:sqcup,sqcups:sqcups,Sqrt:Sqrt,sqsub:sqsub,sqsube:sqsube,sqsubset:sqsubset,sqsubseteq:sqsubseteq,sqsup:sqsup,sqsupe:sqsupe,sqsupset:sqsupset,sqsupseteq:sqsupseteq,square:square,Square:Square,SquareIntersection:SquareIntersection,SquareSubset:SquareSubset,SquareSubsetEqual:SquareSubsetEqual,SquareSuperset:SquareSuperset,SquareSupersetEqual:SquareSupersetEqual,SquareUnion:SquareUnion,squarf:squarf,squ:squ,squf:squf,srarr:srarr,Sscr:Sscr,sscr:sscr,ssetmn:ssetmn,ssmile:ssmile,sstarf:sstarf,Star:Star,star:star,starf:starf,straightepsilon:straightepsilon,straightphi:straightphi,strns:strns,sub:sub,Sub:Sub,subdot:subdot,subE:subE,sube:sube,subedot:subedot,submult:submult,subnE:subnE,subne:subne,subplus:subplus,subrarr:subrarr,subset:subset,Subset:Subset,subseteq:subseteq,subseteqq:subseteqq,SubsetEqual:SubsetEqual,subsetneq:subsetneq,subsetneqq:subsetneqq,subsim:subsim,subsub:subsub,subsup:subsup,succapprox:succapprox,succ:succ,succcurlyeq:succcurlyeq,Succeeds:Succeeds,SucceedsEqual:SucceedsEqual,SucceedsSlantEqual:SucceedsSlantEqual,SucceedsTilde:SucceedsTilde,succeq:succeq,succnapprox:succnapprox,succneqq:succneqq,succnsim:succnsim,succsim:succsim,SuchThat:SuchThat,sum:sum,Sum:Sum,sung:sung,sup1:sup1,sup2:sup2,sup3:sup3,sup:sup,Sup:Sup,supdot:supdot,supdsub:supdsub,supE:supE,supe:supe,supedot:supedot,Superset:Superset,SupersetEqual:SupersetEqual,suphsol:suphsol,suphsub:suphsub,suplarr:suplarr,supmult:supmult,supnE:supnE,supne:supne,supplus:supplus,supset:supset,Supset:Supset,supseteq:supseteq,supseteqq:supseteqq,supsetneq:supsetneq,supsetneqq:supsetneqq,supsim:supsim,supsub:supsub,supsup:supsup,swarhk:swarhk,swarr:swarr,swArr:swArr,swarrow:swarrow,swnwar:swnwar,szlig:szlig,Tab:Tab,target:target,Tau:Tau,tau:tau,tbrk:tbrk,Tcaron:Tcaron,tcaron:tcaron,Tcedil:Tcedil,tcedil:tcedil,Tcy:Tcy,tcy:tcy,tdot:tdot,telrec:telrec,Tfr:Tfr,tfr:tfr,there4:there4,therefore:therefore,Therefore:Therefore,Theta:Theta,theta:theta,thetasym:thetasym,thetav:thetav,thickapprox:thickapprox,thicksim:thicksim,ThickSpace:ThickSpace,ThinSpace:ThinSpace,thinsp:thinsp,thkap:thkap,thksim:thksim,THORN:THORN,thorn:thorn,tilde:tilde,Tilde:Tilde,TildeEqual:TildeEqual,TildeFullEqual:TildeFullEqual,TildeTilde:TildeTilde,timesbar:timesbar,timesb:timesb,times:times,timesd:timesd,tint:tint,toea:toea,topbot:topbot,topcir:topcir,top:top,Topf:Topf,topf:topf,topfork:topfork,tosa:tosa,tprime:tprime,trade:trade,TRADE:TRADE,triangle:triangle,triangledown:triangledown,triangleleft:triangleleft,trianglelefteq:trianglelefteq,triangleq:triangleq,triangleright:triangleright,trianglerighteq:trianglerighteq,tridot:tridot,trie:trie,triminus:triminus,TripleDot:TripleDot,triplus:triplus,trisb:trisb,tritime:tritime,trpezium:trpezium,Tscr:Tscr,tscr:tscr,TScy:TScy,tscy:tscy,TSHcy:TSHcy,tshcy:tshcy,Tstrok:Tstrok,tstrok:tstrok,twixt:twixt,twoheadleftarrow:twoheadleftarrow,twoheadrightarrow:twoheadrightarrow,Uacute:Uacute,uacute:uacute,uarr:uarr,Uarr:Uarr,uArr:uArr,Uarrocir:Uarrocir,Ubrcy:Ubrcy,ubrcy:ubrcy,Ubreve:Ubreve,ubreve:ubreve,Ucirc:Ucirc,ucirc:ucirc,Ucy:Ucy,ucy:ucy,udarr:udarr,Udblac:Udblac,udblac:udblac,udhar:udhar,ufisht:ufisht,Ufr:Ufr,ufr:ufr,Ugrave:Ugrave,ugrave:ugrave,uHar:uHar,uharl:uharl,uharr:uharr,uhblk:uhblk,ulcorn:ulcorn,ulcorner:ulcorner,ulcrop:ulcrop,ultri:ultri,Umacr:Umacr,umacr:umacr,uml:uml,UnderBar:UnderBar,UnderBrace:UnderBrace,UnderBracket:UnderBracket,UnderParenthesis:UnderParenthesis,Union:Union,UnionPlus:UnionPlus,Uogon:Uogon,uogon:uogon,Uopf:Uopf,uopf:uopf,UpArrowBar:UpArrowBar,uparrow:uparrow,UpArrow:UpArrow,Uparrow:Uparrow,UpArrowDownArrow:UpArrowDownArrow,updownarrow:updownarrow,UpDownArrow:UpDownArrow,Updownarrow:Updownarrow,UpEquilibrium:UpEquilibrium,upharpoonleft:upharpoonleft,upharpoonright:upharpoonright,uplus:uplus,UpperLeftArrow:UpperLeftArrow,UpperRightArrow:UpperRightArrow,upsi:upsi,Upsi:Upsi,upsih:upsih,Upsilon:Upsilon,upsilon:upsilon,UpTeeArrow:UpTeeArrow,UpTee:UpTee,upuparrows:upuparrows,urcorn:urcorn,urcorner:urcorner,urcrop:urcrop,Uring:Uring,uring:uring,urtri:urtri,Uscr:Uscr,uscr:uscr,utdot:utdot,Utilde:Utilde,utilde:utilde,utri:utri,utrif:utrif,uuarr:uuarr,Uuml:Uuml,uuml:uuml,uwangle:uwangle,vangrt:vangrt,varepsilon:varepsilon,varkappa:varkappa,varnothing:varnothing,varphi:varphi,varpi:varpi,varpropto:varpropto,varr:varr,vArr:vArr,varrho:varrho,varsigma:varsigma,varsubsetneq:varsubsetneq,varsubsetneqq:varsubsetneqq,varsupsetneq:varsupsetneq,varsupsetneqq:varsupsetneqq,vartheta:vartheta,vartriangleleft:vartriangleleft,vartriangleright:vartriangleright,vBar:vBar,Vbar:Vbar,vBarv:vBarv,Vcy:Vcy,vcy:vcy,vdash:vdash,vDash:vDash,Vdash:Vdash,VDash:VDash,Vdashl:Vdashl,veebar:veebar,vee:vee,Vee:Vee,veeeq:veeeq,vellip:vellip,verbar:verbar,Verbar:Verbar,vert:vert,Vert:Vert,VerticalBar:VerticalBar,VerticalLine:VerticalLine,VerticalSeparator:VerticalSeparator,VerticalTilde:VerticalTilde,VeryThinSpace:VeryThinSpace,Vfr:Vfr,vfr:vfr,vltri:vltri,vnsub:vnsub,vnsup:vnsup,Vopf:Vopf,vopf:vopf,vprop:vprop,vrtri:vrtri,Vscr:Vscr,vscr:vscr,vsubnE:vsubnE,vsubne:vsubne,vsupnE:vsupnE,vsupne:vsupne,Vvdash:Vvdash,vzigzag:vzigzag,Wcirc:Wcirc,wcirc:wcirc,wedbar:wedbar,wedge:wedge,Wedge:Wedge,wedgeq:wedgeq,weierp:weierp,Wfr:Wfr,wfr:wfr,Wopf:Wopf,wopf:wopf,wp:wp,wr:wr,wreath:wreath,Wscr:Wscr,wscr:wscr,xcap:xcap,xcirc:xcirc,xcup:xcup,xdtri:xdtri,Xfr:Xfr,xfr:xfr,xharr:xharr,xhArr:xhArr,Xi:Xi,xi:xi,xlarr:xlarr,xlArr:xlArr,xmap:xmap,xnis:xnis,xodot:xodot,Xopf:Xopf,xopf:xopf,xoplus:xoplus,xotime:xotime,xrarr:xrarr,xrArr:xrArr,Xscr:Xscr,xscr:xscr,xsqcup:xsqcup,xuplus:xuplus,xutri:xutri,xvee:xvee,xwedge:xwedge,Yacute:Yacute,yacute:yacute,YAcy:YAcy,yacy:yacy,Ycirc:Ycirc,ycirc:ycirc,Ycy:Ycy,ycy:ycy,yen:yen,Yfr:Yfr,yfr:yfr,YIcy:YIcy,yicy:yicy,Yopf:Yopf,yopf:yopf,Yscr:Yscr,yscr:yscr,YUcy:YUcy,yucy:yucy,yuml:yuml,Yuml:Yuml,Zacute:Zacute,zacute:zacute,Zcaron:Zcaron,zcaron:zcaron,Zcy:Zcy,zcy:zcy,Zdot:Zdot,zdot:zdot,zeetrf:zeetrf,ZeroWidthSpace:ZeroWidthSpace,Zeta:Zeta,zeta:zeta,zfr:zfr,Zfr:Zfr,ZHcy:ZHcy,zhcy:zhcy,zigrarr:zigrarr,zopf:zopf,Zopf:Zopf,Zscr:Zscr,zscr:zscr,zwj:zwj,zwnj:zwnj},entities$1=Object.freeze({Aacute:Aacute,aacute:aacute,Abreve:Abreve,abreve:abreve,ac:ac,acd:acd,acE:acE,Acirc:Acirc,acirc:acirc,acute:acute,Acy:Acy,acy:acy,AElig:AElig,aelig:aelig,af:af,Afr:Afr,afr:afr,Agrave:Agrave,agrave:agrave,alefsym:alefsym,aleph:aleph,Alpha:Alpha,alpha:alpha,Amacr:Amacr,amacr:amacr,amalg:amalg,amp:amp,AMP:AMP,andand:andand,And:And,and:and,andd:andd,andslope:andslope,andv:andv,ang:ang,ange:ange,angle:angle,angmsdaa:angmsdaa,angmsdab:angmsdab,angmsdac:angmsdac,angmsdad:angmsdad,angmsdae:angmsdae,angmsdaf:angmsdaf,angmsdag:angmsdag,angmsdah:angmsdah,angmsd:angmsd,angrt:angrt,angrtvb:angrtvb,angrtvbd:angrtvbd,angsph:angsph,angst:angst,angzarr:angzarr,Aogon:Aogon,aogon:aogon,Aopf:Aopf,aopf:aopf,apacir:apacir,ap:ap,apE:apE,ape:ape,apid:apid,apos:apos,ApplyFunction:ApplyFunction,approx:approx,approxeq:approxeq,Aring:Aring,aring:aring,Ascr:Ascr,ascr:ascr,Assign:Assign,ast:ast,asymp:asymp,asympeq:asympeq,Atilde:Atilde,atilde:atilde,Auml:Auml,auml:auml,awconint:awconint,awint:awint,backcong:backcong,backepsilon:backepsilon,backprime:backprime,backsim:backsim,backsimeq:backsimeq,Backslash:Backslash,Barv:Barv,barvee:barvee,barwed:barwed,Barwed:Barwed,barwedge:barwedge,bbrk:bbrk,bbrktbrk:bbrktbrk,bcong:bcong,Bcy:Bcy,bcy:bcy,bdquo:bdquo,becaus:becaus,because:because,Because:Because,bemptyv:bemptyv,bepsi:bepsi,bernou:bernou,Bernoullis:Bernoullis,Beta:Beta,beta:beta,beth:beth,between:between,Bfr:Bfr,bfr:bfr,bigcap:bigcap,bigcirc:bigcirc,bigcup:bigcup,bigodot:bigodot,bigoplus:bigoplus,bigotimes:bigotimes,bigsqcup:bigsqcup,bigstar:bigstar,bigtriangledown:bigtriangledown,bigtriangleup:bigtriangleup,biguplus:biguplus,bigvee:bigvee,bigwedge:bigwedge,bkarow:bkarow,blacklozenge:blacklozenge,blacksquare:blacksquare,blacktriangle:blacktriangle,blacktriangledown:blacktriangledown,blacktriangleleft:blacktriangleleft,blacktriangleright:blacktriangleright,blank:blank,blk12:blk12,blk14:blk14,blk34:blk34,block:block,bne:bne,bnequiv:bnequiv,bNot:bNot,bnot:bnot,Bopf:Bopf,bopf:bopf,bot:bot,bottom:bottom,bowtie:bowtie,boxbox:boxbox,boxdl:boxdl,boxdL:boxdL,boxDl:boxDl,boxDL:boxDL,boxdr:boxdr,boxdR:boxdR,boxDr:boxDr,boxDR:boxDR,boxh:boxh,boxH:boxH,boxhd:boxhd,boxHd:boxHd,boxhD:boxhD,boxHD:boxHD,boxhu:boxhu,boxHu:boxHu,boxhU:boxhU,boxHU:boxHU,boxminus:boxminus,boxplus:boxplus,boxtimes:boxtimes,boxul:boxul,boxuL:boxuL,boxUl:boxUl,boxUL:boxUL,boxur:boxur,boxuR:boxuR,boxUr:boxUr,boxUR:boxUR,boxv:boxv,boxV:boxV,boxvh:boxvh,boxvH:boxvH,boxVh:boxVh,boxVH:boxVH,boxvl:boxvl,boxvL:boxvL,boxVl:boxVl,boxVL:boxVL,boxvr:boxvr,boxvR:boxvR,boxVr:boxVr,boxVR:boxVR,bprime:bprime,breve:breve,Breve:Breve,brvbar:brvbar,bscr:bscr,Bscr:Bscr,bsemi:bsemi,bsim:bsim,bsime:bsime,bsolb:bsolb,bsol:bsol,bsolhsub:bsolhsub,bull:bull,bullet:bullet,bump:bump,bumpE:bumpE,bumpe:bumpe,Bumpeq:Bumpeq,bumpeq:bumpeq,Cacute:Cacute,cacute:cacute,capand:capand,capbrcup:capbrcup,capcap:capcap,cap:cap,Cap:Cap,capcup:capcup,capdot:capdot,CapitalDifferentialD:CapitalDifferentialD,caps:caps,caret:caret,caron:caron,Cayleys:Cayleys,ccaps:ccaps,Ccaron:Ccaron,ccaron:ccaron,Ccedil:Ccedil,ccedil:ccedil,Ccirc:Ccirc,ccirc:ccirc,Cconint:Cconint,ccups:ccups,ccupssm:ccupssm,Cdot:Cdot,cdot:cdot,cedil:cedil,Cedilla:Cedilla,cemptyv:cemptyv,cent:cent,centerdot:centerdot,CenterDot:CenterDot,cfr:cfr,Cfr:Cfr,CHcy:CHcy,chcy:chcy,check:check,checkmark:checkmark,Chi:Chi,chi:chi,circ:circ,circeq:circeq,circlearrowleft:circlearrowleft,circlearrowright:circlearrowright,circledast:circledast,circledcirc:circledcirc,circleddash:circleddash,CircleDot:CircleDot,circledR:circledR,circledS:circledS,CircleMinus:CircleMinus,CirclePlus:CirclePlus,CircleTimes:CircleTimes,cir:cir,cirE:cirE,cire:cire,cirfnint:cirfnint,cirmid:cirmid,cirscir:cirscir,ClockwiseContourIntegral:ClockwiseContourIntegral,CloseCurlyDoubleQuote:CloseCurlyDoubleQuote,CloseCurlyQuote:CloseCurlyQuote,clubs:clubs,clubsuit:clubsuit,colon:colon,Colon:Colon,Colone:Colone,colone:colone,coloneq:coloneq,comma:comma,commat:commat,comp:comp,compfn:compfn,complement:complement,complexes:complexes,cong:cong,congdot:congdot,Congruent:Congruent,conint:conint,Conint:Conint,ContourIntegral:ContourIntegral,copf:copf,Copf:Copf,coprod:coprod,Coproduct:Coproduct,copy:copy,COPY:COPY,copysr:copysr,CounterClockwiseContourIntegral:CounterClockwiseContourIntegral,crarr:crarr,cross:cross,Cross:Cross,Cscr:Cscr,cscr:cscr,csub:csub,csube:csube,csup:csup,csupe:csupe,ctdot:ctdot,cudarrl:cudarrl,cudarrr:cudarrr,cuepr:cuepr,cuesc:cuesc,cularr:cularr,cularrp:cularrp,cupbrcap:cupbrcap,cupcap:cupcap,CupCap:CupCap,cup:cup,Cup:Cup,cupcup:cupcup,cupdot:cupdot,cupor:cupor,cups:cups,curarr:curarr,curarrm:curarrm,curlyeqprec:curlyeqprec,curlyeqsucc:curlyeqsucc,curlyvee:curlyvee,curlywedge:curlywedge,curren:curren,curvearrowleft:curvearrowleft,curvearrowright:curvearrowright,cuvee:cuvee,cuwed:cuwed,cwconint:cwconint,cwint:cwint,cylcty:cylcty,dagger:dagger,Dagger:Dagger,daleth:daleth,darr:darr,Darr:Darr,dArr:dArr,dash:dash,Dashv:Dashv,dashv:dashv,dbkarow:dbkarow,dblac:dblac,Dcaron:Dcaron,dcaron:dcaron,Dcy:Dcy,dcy:dcy,ddagger:ddagger,ddarr:ddarr,DD:DD,dd:dd,DDotrahd:DDotrahd,ddotseq:ddotseq,deg:deg,Del:Del,Delta:Delta,delta:delta,demptyv:demptyv,dfisht:dfisht,Dfr:Dfr,dfr:dfr,dHar:dHar,dharl:dharl,dharr:dharr,DiacriticalAcute:DiacriticalAcute,DiacriticalDot:DiacriticalDot,DiacriticalDoubleAcute:DiacriticalDoubleAcute,DiacriticalGrave:DiacriticalGrave,DiacriticalTilde:DiacriticalTilde,diam:diam,diamond:diamond,Diamond:Diamond,diamondsuit:diamondsuit,diams:diams,die:die,DifferentialD:DifferentialD,digamma:digamma,disin:disin,div:div,divide:divide,divideontimes:divideontimes,divonx:divonx,DJcy:DJcy,djcy:djcy,dlcorn:dlcorn,dlcrop:dlcrop,dollar:dollar,Dopf:Dopf,dopf:dopf,Dot:Dot,dot:dot,DotDot:DotDot,doteq:doteq,doteqdot:doteqdot,DotEqual:DotEqual,dotminus:dotminus,dotplus:dotplus,dotsquare:dotsquare,doublebarwedge:doublebarwedge,DoubleContourIntegral:DoubleContourIntegral,DoubleDot:DoubleDot,DoubleDownArrow:DoubleDownArrow,DoubleLeftArrow:DoubleLeftArrow,DoubleLeftRightArrow:DoubleLeftRightArrow,DoubleLeftTee:DoubleLeftTee,DoubleLongLeftArrow:DoubleLongLeftArrow,DoubleLongLeftRightArrow:DoubleLongLeftRightArrow,DoubleLongRightArrow:DoubleLongRightArrow,DoubleRightArrow:DoubleRightArrow,DoubleRightTee:DoubleRightTee,DoubleUpArrow:DoubleUpArrow,DoubleUpDownArrow:DoubleUpDownArrow,DoubleVerticalBar:DoubleVerticalBar,DownArrowBar:DownArrowBar,downarrow:downarrow,DownArrow:DownArrow,Downarrow:Downarrow,DownArrowUpArrow:DownArrowUpArrow,DownBreve:DownBreve,downdownarrows:downdownarrows,downharpoonleft:downharpoonleft,downharpoonright:downharpoonright,DownLeftRightVector:DownLeftRightVector,DownLeftTeeVector:DownLeftTeeVector,DownLeftVectorBar:DownLeftVectorBar,DownLeftVector:DownLeftVector,DownRightTeeVector:DownRightTeeVector,DownRightVectorBar:DownRightVectorBar,DownRightVector:DownRightVector,DownTeeArrow:DownTeeArrow,DownTee:DownTee,drbkarow:drbkarow,drcorn:drcorn,drcrop:drcrop,Dscr:Dscr,dscr:dscr,DScy:DScy,dscy:dscy,dsol:dsol,Dstrok:Dstrok,dstrok:dstrok,dtdot:dtdot,dtri:dtri,dtrif:dtrif,duarr:duarr,duhar:duhar,dwangle:dwangle,DZcy:DZcy,dzcy:dzcy,dzigrarr:dzigrarr,Eacute:Eacute,eacute:eacute,easter:easter,Ecaron:Ecaron,ecaron:ecaron,Ecirc:Ecirc,ecirc:ecirc,ecir:ecir,ecolon:ecolon,Ecy:Ecy,ecy:ecy,eDDot:eDDot,Edot:Edot,edot:edot,eDot:eDot,ee:ee,efDot:efDot,Efr:Efr,efr:efr,eg:eg,Egrave:Egrave,egrave:egrave,egs:egs,egsdot:egsdot,el:el,Element:Element,elinters:elinters,ell:ell,els:els,elsdot:elsdot,Emacr:Emacr,emacr:emacr,empty:empty,emptyset:emptyset,EmptySmallSquare:EmptySmallSquare,emptyv:emptyv,EmptyVerySmallSquare:EmptyVerySmallSquare,emsp13:emsp13,emsp14:emsp14,emsp:emsp,ENG:ENG,eng:eng,ensp:ensp,Eogon:Eogon,eogon:eogon,Eopf:Eopf,eopf:eopf,epar:epar,eparsl:eparsl,eplus:eplus,epsi:epsi,Epsilon:Epsilon,epsilon:epsilon,epsiv:epsiv,eqcirc:eqcirc,eqcolon:eqcolon,eqsim:eqsim,eqslantgtr:eqslantgtr,eqslantless:eqslantless,Equal:Equal,equals:equals,EqualTilde:EqualTilde,equest:equest,Equilibrium:Equilibrium,equiv:equiv,equivDD:equivDD,eqvparsl:eqvparsl,erarr:erarr,erDot:erDot,escr:escr,Escr:Escr,esdot:esdot,Esim:Esim,esim:esim,Eta:Eta,eta:eta,ETH:ETH,eth:eth,Euml:Euml,euml:euml,euro:euro,excl:excl,exist:exist,Exists:Exists,expectation:expectation,exponentiale:exponentiale,ExponentialE:ExponentialE,fallingdotseq:fallingdotseq,Fcy:Fcy,fcy:fcy,female:female,ffilig:ffilig,fflig:fflig,ffllig:ffllig,Ffr:Ffr,ffr:ffr,filig:filig,FilledSmallSquare:FilledSmallSquare,FilledVerySmallSquare:FilledVerySmallSquare,fjlig:fjlig,flat:flat,fllig:fllig,fltns:fltns,fnof:fnof,Fopf:Fopf,fopf:fopf,forall:forall,ForAll:ForAll,fork:fork,forkv:forkv,Fouriertrf:Fouriertrf,fpartint:fpartint,frac12:frac12,frac13:frac13,frac14:frac14,frac15:frac15,frac16:frac16,frac18:frac18,frac23:frac23,frac25:frac25,frac34:frac34,frac35:frac35,frac38:frac38,frac45:frac45,frac56:frac56,frac58:frac58,frac78:frac78,frasl:frasl,frown:frown,fscr:fscr,Fscr:Fscr,gacute:gacute,Gamma:Gamma,gamma:gamma,Gammad:Gammad,gammad:gammad,gap:gap,Gbreve:Gbreve,gbreve:gbreve,Gcedil:Gcedil,Gcirc:Gcirc,gcirc:gcirc,Gcy:Gcy,gcy:gcy,Gdot:Gdot,gdot:gdot,ge:ge,gE:gE,gEl:gEl,gel:gel,geq:geq,geqq:geqq,geqslant:geqslant,gescc:gescc,ges:ges,gesdot:gesdot,gesdoto:gesdoto,gesdotol:gesdotol,gesl:gesl,gesles:gesles,Gfr:Gfr,gfr:gfr,gg:gg,Gg:Gg,ggg:ggg,gimel:gimel,GJcy:GJcy,gjcy:gjcy,gla:gla,gl:gl,glE:glE,glj:glj,gnap:gnap,gnapprox:gnapprox,gne:gne,gnE:gnE,gneq:gneq,gneqq:gneqq,gnsim:gnsim,Gopf:Gopf,gopf:gopf,grave:grave,GreaterEqual:GreaterEqual,GreaterEqualLess:GreaterEqualLess,GreaterFullEqual:GreaterFullEqual,GreaterGreater:GreaterGreater,GreaterLess:GreaterLess,GreaterSlantEqual:GreaterSlantEqual,GreaterTilde:GreaterTilde,Gscr:Gscr,gscr:gscr,gsim:gsim,gsime:gsime,gsiml:gsiml,gtcc:gtcc,gtcir:gtcir,gt:gt,GT:GT,Gt:Gt,gtdot:gtdot,gtlPar:gtlPar,gtquest:gtquest,gtrapprox:gtrapprox,gtrarr:gtrarr,gtrdot:gtrdot,gtreqless:gtreqless,gtreqqless:gtreqqless,gtrless:gtrless,gtrsim:gtrsim,gvertneqq:gvertneqq,gvnE:gvnE,Hacek:Hacek,hairsp:hairsp,half:half,hamilt:hamilt,HARDcy:HARDcy,hardcy:hardcy,harrcir:harrcir,harr:harr,hArr:hArr,harrw:harrw,Hat:Hat,hbar:hbar,Hcirc:Hcirc,hcirc:hcirc,hearts:hearts,heartsuit:heartsuit,hellip:hellip,hercon:hercon,hfr:hfr,Hfr:Hfr,HilbertSpace:HilbertSpace,hksearow:hksearow,hkswarow:hkswarow,hoarr:hoarr,homtht:homtht,hookleftarrow:hookleftarrow,hookrightarrow:hookrightarrow,hopf:hopf,Hopf:Hopf,horbar:horbar,HorizontalLine:HorizontalLine,hscr:hscr,Hscr:Hscr,hslash:hslash,Hstrok:Hstrok,hstrok:hstrok,HumpDownHump:HumpDownHump,HumpEqual:HumpEqual,hybull:hybull,hyphen:hyphen,Iacute:Iacute,iacute:iacute,ic:ic,Icirc:Icirc,icirc:icirc,Icy:Icy,icy:icy,Idot:Idot,IEcy:IEcy,iecy:iecy,iexcl:iexcl,iff:iff,ifr:ifr,Ifr:Ifr,Igrave:Igrave,igrave:igrave,ii:ii,iiiint:iiiint,iiint:iiint,iinfin:iinfin,iiota:iiota,IJlig:IJlig,ijlig:ijlig,Imacr:Imacr,imacr:imacr,image:image,ImaginaryI:ImaginaryI,imagline:imagline,imagpart:imagpart,imath:imath,Im:Im,imof:imof,imped:imped,Implies:Implies,incare:incare,infin:infin,infintie:infintie,inodot:inodot,intcal:intcal,int:int,Int:Int,integers:integers,Integral:Integral,intercal:intercal,Intersection:Intersection,intlarhk:intlarhk,intprod:intprod,InvisibleComma:InvisibleComma,InvisibleTimes:InvisibleTimes,IOcy:IOcy,iocy:iocy,Iogon:Iogon,iogon:iogon,Iopf:Iopf,iopf:iopf,Iota:Iota,iota:iota,iprod:iprod,iquest:iquest,iscr:iscr,Iscr:Iscr,isin:isin,isindot:isindot,isinE:isinE,isins:isins,isinsv:isinsv,isinv:isinv,it:it,Itilde:Itilde,itilde:itilde,Iukcy:Iukcy,iukcy:iukcy,Iuml:Iuml,iuml:iuml,Jcirc:Jcirc,jcirc:jcirc,Jcy:Jcy,jcy:jcy,Jfr:Jfr,jfr:jfr,jmath:jmath,Jopf:Jopf,jopf:jopf,Jscr:Jscr,jscr:jscr,Jsercy:Jsercy,jsercy:jsercy,Jukcy:Jukcy,jukcy:jukcy,Kappa:Kappa,kappa:kappa,kappav:kappav,Kcedil:Kcedil,kcedil:kcedil,Kcy:Kcy,kcy:kcy,Kfr:Kfr,kfr:kfr,kgreen:kgreen,KHcy:KHcy,khcy:khcy,KJcy:KJcy,kjcy:kjcy,Kopf:Kopf,kopf:kopf,Kscr:Kscr,kscr:kscr,lAarr:lAarr,Lacute:Lacute,lacute:lacute,laemptyv:laemptyv,lagran:lagran,Lambda:Lambda,lambda:lambda,lang:lang,Lang:Lang,langd:langd,langle:langle,lap:lap,Laplacetrf:Laplacetrf,laquo:laquo,larrb:larrb,larrbfs:larrbfs,larr:larr,Larr:Larr,lArr:lArr,larrfs:larrfs,larrhk:larrhk,larrlp:larrlp,larrpl:larrpl,larrsim:larrsim,larrtl:larrtl,latail:latail,lAtail:lAtail,lat:lat,late:late,lates:lates,lbarr:lbarr,lBarr:lBarr,lbbrk:lbbrk,lbrace:lbrace,lbrack:lbrack,lbrke:lbrke,lbrksld:lbrksld,lbrkslu:lbrkslu,Lcaron:Lcaron,lcaron:lcaron,Lcedil:Lcedil,lcedil:lcedil,lceil:lceil,lcub:lcub,Lcy:Lcy,lcy:lcy,ldca:ldca,ldquo:ldquo,ldquor:ldquor,ldrdhar:ldrdhar,ldrushar:ldrushar,ldsh:ldsh,le:le,lE:lE,LeftAngleBracket:LeftAngleBracket,LeftArrowBar:LeftArrowBar,leftarrow:leftarrow,LeftArrow:LeftArrow,Leftarrow:Leftarrow,LeftArrowRightArrow:LeftArrowRightArrow,leftarrowtail:leftarrowtail,LeftCeiling:LeftCeiling,LeftDoubleBracket:LeftDoubleBracket,LeftDownTeeVector:LeftDownTeeVector,LeftDownVectorBar:LeftDownVectorBar,LeftDownVector:LeftDownVector,LeftFloor:LeftFloor,leftharpoondown:leftharpoondown,leftharpoonup:leftharpoonup,leftleftarrows:leftleftarrows,leftrightarrow:leftrightarrow,LeftRightArrow:LeftRightArrow,Leftrightarrow:Leftrightarrow,leftrightarrows:leftrightarrows,leftrightharpoons:leftrightharpoons,leftrightsquigarrow:leftrightsquigarrow,LeftRightVector:LeftRightVector,LeftTeeArrow:LeftTeeArrow,LeftTee:LeftTee,LeftTeeVector:LeftTeeVector,leftthreetimes:leftthreetimes,LeftTriangleBar:LeftTriangleBar,LeftTriangle:LeftTriangle,LeftTriangleEqual:LeftTriangleEqual,LeftUpDownVector:LeftUpDownVector,LeftUpTeeVector:LeftUpTeeVector,LeftUpVectorBar:LeftUpVectorBar,LeftUpVector:LeftUpVector,LeftVectorBar:LeftVectorBar,LeftVector:LeftVector,lEg:lEg,leg:leg,leq:leq,leqq:leqq,leqslant:leqslant,lescc:lescc,les:les,lesdot:lesdot,lesdoto:lesdoto,lesdotor:lesdotor,lesg:lesg,lesges:lesges,lessapprox:lessapprox,lessdot:lessdot,lesseqgtr:lesseqgtr,lesseqqgtr:lesseqqgtr,LessEqualGreater:LessEqualGreater,LessFullEqual:LessFullEqual,LessGreater:LessGreater,lessgtr:lessgtr,LessLess:LessLess,lesssim:lesssim,LessSlantEqual:LessSlantEqual,LessTilde:LessTilde,lfisht:lfisht,lfloor:lfloor,Lfr:Lfr,lfr:lfr,lg:lg,lgE:lgE,lHar:lHar,lhard:lhard,lharu:lharu,lharul:lharul,lhblk:lhblk,LJcy:LJcy,ljcy:ljcy,llarr:llarr,ll:ll,Ll:Ll,llcorner:llcorner,Lleftarrow:Lleftarrow,llhard:llhard,lltri:lltri,Lmidot:Lmidot,lmidot:lmidot,lmoustache:lmoustache,lmoust:lmoust,lnap:lnap,lnapprox:lnapprox,lne:lne,lnE:lnE,lneq:lneq,lneqq:lneqq,lnsim:lnsim,loang:loang,loarr:loarr,lobrk:lobrk,longleftarrow:longleftarrow,LongLeftArrow:LongLeftArrow,Longleftarrow:Longleftarrow,longleftrightarrow:longleftrightarrow,LongLeftRightArrow:LongLeftRightArrow,Longleftrightarrow:Longleftrightarrow,longmapsto:longmapsto,longrightarrow:longrightarrow,LongRightArrow:LongRightArrow,Longrightarrow:Longrightarrow,looparrowleft:looparrowleft,looparrowright:looparrowright,lopar:lopar,Lopf:Lopf,lopf:lopf,loplus:loplus,lotimes:lotimes,lowast:lowast,lowbar:lowbar,LowerLeftArrow:LowerLeftArrow,LowerRightArrow:LowerRightArrow,loz:loz,lozenge:lozenge,lozf:lozf,lpar:lpar,lparlt:lparlt,lrarr:lrarr,lrcorner:lrcorner,lrhar:lrhar,lrhard:lrhard,lrm:lrm,lrtri:lrtri,lsaquo:lsaquo,lscr:lscr,Lscr:Lscr,lsh:lsh,Lsh:Lsh,lsim:lsim,lsime:lsime,lsimg:lsimg,lsqb:lsqb,lsquo:lsquo,lsquor:lsquor,Lstrok:Lstrok,lstrok:lstrok,ltcc:ltcc,ltcir:ltcir,lt:lt,LT:LT,Lt:Lt,ltdot:ltdot,lthree:lthree,ltimes:ltimes,ltlarr:ltlarr,ltquest:ltquest,ltri:ltri,ltrie:ltrie,ltrif:ltrif,ltrPar:ltrPar,lurdshar:lurdshar,luruhar:luruhar,lvertneqq:lvertneqq,lvnE:lvnE,macr:macr,male:male,malt:malt,maltese:maltese,map:map,mapsto:mapsto,mapstodown:mapstodown,mapstoleft:mapstoleft,mapstoup:mapstoup,marker:marker,mcomma:mcomma,Mcy:Mcy,mcy:mcy,mdash:mdash,mDDot:mDDot,measuredangle:measuredangle,MediumSpace:MediumSpace,Mellintrf:Mellintrf,Mfr:Mfr,mfr:mfr,mho:mho,micro:micro,midast:midast,midcir:midcir,mid:mid,middot:middot,minusb:minusb,minus:minus,minusd:minusd,minusdu:minusdu,MinusPlus:MinusPlus,mlcp:mlcp,mldr:mldr,mnplus:mnplus,models:models,Mopf:Mopf,mopf:mopf,mp:mp,mscr:mscr,Mscr:Mscr,mstpos:mstpos,Mu:Mu,mu:mu,multimap:multimap,mumap:mumap,nabla:nabla,Nacute:Nacute,nacute:nacute,nang:nang,nap:nap,napE:napE,napid:napid,napos:napos,napprox:napprox,natural:natural,naturals:naturals,natur:natur,nbsp:nbsp,nbump:nbump,nbumpe:nbumpe,ncap:ncap,Ncaron:Ncaron,ncaron:ncaron,Ncedil:Ncedil,ncedil:ncedil,ncong:ncong,ncongdot:ncongdot,ncup:ncup,Ncy:Ncy,ncy:ncy,ndash:ndash,nearhk:nearhk,nearr:nearr,neArr:neArr,nearrow:nearrow,ne:ne,nedot:nedot,NegativeMediumSpace:NegativeMediumSpace,NegativeThickSpace:NegativeThickSpace,NegativeThinSpace:NegativeThinSpace,NegativeVeryThinSpace:NegativeVeryThinSpace,nequiv:nequiv,nesear:nesear,nesim:nesim,NestedGreaterGreater:NestedGreaterGreater,NestedLessLess:NestedLessLess,NewLine:NewLine,nexist:nexist,nexists:nexists,Nfr:Nfr,nfr:nfr,ngE:ngE,nge:nge,ngeq:ngeq,ngeqq:ngeqq,ngeqslant:ngeqslant,nges:nges,nGg:nGg,ngsim:ngsim,nGt:nGt,ngt:ngt,ngtr:ngtr,nGtv:nGtv,nharr:nharr,nhArr:nhArr,nhpar:nhpar,ni:ni,nis:nis,nisd:nisd,niv:niv,NJcy:NJcy,njcy:njcy,nlarr:nlarr,nlArr:nlArr,nldr:nldr,nlE:nlE,nle:nle,nleftarrow:nleftarrow,nLeftarrow:nLeftarrow,nleftrightarrow:nleftrightarrow,nLeftrightarrow:nLeftrightarrow,nleq:nleq,nleqq:nleqq,nleqslant:nleqslant,nles:nles,nless:nless,nLl:nLl,nlsim:nlsim,nLt:nLt,nlt:nlt,nltri:nltri,nltrie:nltrie,nLtv:nLtv,nmid:nmid,NoBreak:NoBreak,NonBreakingSpace:NonBreakingSpace,nopf:nopf,Nopf:Nopf,Not:Not,not:not,NotCongruent:NotCongruent,NotCupCap:NotCupCap,NotDoubleVerticalBar:NotDoubleVerticalBar,NotElement:NotElement,NotEqual:NotEqual,NotEqualTilde:NotEqualTilde,NotExists:NotExists,NotGreater:NotGreater,NotGreaterEqual:NotGreaterEqual,NotGreaterFullEqual:NotGreaterFullEqual,NotGreaterGreater:NotGreaterGreater,NotGreaterLess:NotGreaterLess,NotGreaterSlantEqual:NotGreaterSlantEqual,NotGreaterTilde:NotGreaterTilde,NotHumpDownHump:NotHumpDownHump,NotHumpEqual:NotHumpEqual,notin:notin,notindot:notindot,notinE:notinE,notinva:notinva,notinvb:notinvb,notinvc:notinvc,NotLeftTriangleBar:NotLeftTriangleBar,NotLeftTriangle:NotLeftTriangle,NotLeftTriangleEqual:NotLeftTriangleEqual,NotLess:NotLess,NotLessEqual:NotLessEqual,NotLessGreater:NotLessGreater,NotLessLess:NotLessLess,NotLessSlantEqual:NotLessSlantEqual,NotLessTilde:NotLessTilde,NotNestedGreaterGreater:NotNestedGreaterGreater,NotNestedLessLess:NotNestedLessLess,notni:notni,notniva:notniva,notnivb:notnivb,notnivc:notnivc,NotPrecedes:NotPrecedes,NotPrecedesEqual:NotPrecedesEqual,NotPrecedesSlantEqual:NotPrecedesSlantEqual,NotReverseElement:NotReverseElement,NotRightTriangleBar:NotRightTriangleBar,NotRightTriangle:NotRightTriangle,NotRightTriangleEqual:NotRightTriangleEqual,NotSquareSubset:NotSquareSubset,NotSquareSubsetEqual:NotSquareSubsetEqual,NotSquareSuperset:NotSquareSuperset,NotSquareSupersetEqual:NotSquareSupersetEqual,NotSubset:NotSubset,NotSubsetEqual:NotSubsetEqual,NotSucceeds:NotSucceeds,NotSucceedsEqual:NotSucceedsEqual,NotSucceedsSlantEqual:NotSucceedsSlantEqual,NotSucceedsTilde:NotSucceedsTilde,NotSuperset:NotSuperset,NotSupersetEqual:NotSupersetEqual,NotTilde:NotTilde,NotTildeEqual:NotTildeEqual,NotTildeFullEqual:NotTildeFullEqual,NotTildeTilde:NotTildeTilde,NotVerticalBar:NotVerticalBar,nparallel:nparallel,npar:npar,nparsl:nparsl,npart:npart,npolint:npolint,npr:npr,nprcue:nprcue,nprec:nprec,npreceq:npreceq,npre:npre,nrarrc:nrarrc,nrarr:nrarr,nrArr:nrArr,nrarrw:nrarrw,nrightarrow:nrightarrow,nRightarrow:nRightarrow,nrtri:nrtri,nrtrie:nrtrie,nsc:nsc,nsccue:nsccue,nsce:nsce,Nscr:Nscr,nscr:nscr,nshortmid:nshortmid,nshortparallel:nshortparallel,nsim:nsim,nsime:nsime,nsimeq:nsimeq,nsmid:nsmid,nspar:nspar,nsqsube:nsqsube,nsqsupe:nsqsupe,nsub:nsub,nsubE:nsubE,nsube:nsube,nsubset:nsubset,nsubseteq:nsubseteq,nsubseteqq:nsubseteqq,nsucc:nsucc,nsucceq:nsucceq,nsup:nsup,nsupE:nsupE,nsupe:nsupe,nsupset:nsupset,nsupseteq:nsupseteq,nsupseteqq:nsupseteqq,ntgl:ntgl,Ntilde:Ntilde,ntilde:ntilde,ntlg:ntlg,ntriangleleft:ntriangleleft,ntrianglelefteq:ntrianglelefteq,ntriangleright:ntriangleright,ntrianglerighteq:ntrianglerighteq,Nu:Nu,nu:nu,num:num,numero:numero,numsp:numsp,nvap:nvap,nvdash:nvdash,nvDash:nvDash,nVdash:nVdash,nVDash:nVDash,nvge:nvge,nvgt:nvgt,nvHarr:nvHarr,nvinfin:nvinfin,nvlArr:nvlArr,nvle:nvle,nvlt:nvlt,nvltrie:nvltrie,nvrArr:nvrArr,nvrtrie:nvrtrie,nvsim:nvsim,nwarhk:nwarhk,nwarr:nwarr,nwArr:nwArr,nwarrow:nwarrow,nwnear:nwnear,Oacute:Oacute,oacute:oacute,oast:oast,Ocirc:Ocirc,ocirc:ocirc,ocir:ocir,Ocy:Ocy,ocy:ocy,odash:odash,Odblac:Odblac,odblac:odblac,odiv:odiv,odot:odot,odsold:odsold,OElig:OElig,oelig:oelig,ofcir:ofcir,Ofr:Ofr,ofr:ofr,ogon:ogon,Ograve:Ograve,ograve:ograve,ogt:ogt,ohbar:ohbar,ohm:ohm,oint:oint,olarr:olarr,olcir:olcir,olcross:olcross,oline:oline,olt:olt,Omacr:Omacr,omacr:omacr,Omega:Omega,omega:omega,Omicron:Omicron,omicron:omicron,omid:omid,ominus:ominus,Oopf:Oopf,oopf:oopf,opar:opar,OpenCurlyDoubleQuote:OpenCurlyDoubleQuote,OpenCurlyQuote:OpenCurlyQuote,operp:operp,oplus:oplus,orarr:orarr,Or:Or,or:or,ord:ord,order:order,orderof:orderof,ordf:ordf,ordm:ordm,origof:origof,oror:oror,orslope:orslope,orv:orv,oS:oS,Oscr:Oscr,oscr:oscr,Oslash:Oslash,oslash:oslash,osol:osol,Otilde:Otilde,otilde:otilde,otimesas:otimesas,Otimes:Otimes,otimes:otimes,Ouml:Ouml,ouml:ouml,ovbar:ovbar,OverBar:OverBar,OverBrace:OverBrace,OverBracket:OverBracket,OverParenthesis:OverParenthesis,para:para,parallel:parallel,par:par,parsim:parsim,parsl:parsl,part:part,PartialD:PartialD,Pcy:Pcy,pcy:pcy,percnt:percnt,period:period,permil:permil,perp:perp,pertenk:pertenk,Pfr:Pfr,pfr:pfr,Phi:Phi,phi:phi,phiv:phiv,phmmat:phmmat,phone:phone,Pi:Pi,pi:pi,pitchfork:pitchfork,piv:piv,planck:planck,planckh:planckh,plankv:plankv,plusacir:plusacir,plusb:plusb,pluscir:pluscir,plus:plus,plusdo:plusdo,plusdu:plusdu,pluse:pluse,PlusMinus:PlusMinus,plusmn:plusmn,plussim:plussim,plustwo:plustwo,pm:pm,Poincareplane:Poincareplane,pointint:pointint,popf:popf,Popf:Popf,pound:pound,prap:prap,Pr:Pr,pr:pr,prcue:prcue,precapprox:precapprox,prec:prec,preccurlyeq:preccurlyeq,Precedes:Precedes,PrecedesEqual:PrecedesEqual,PrecedesSlantEqual:PrecedesSlantEqual,PrecedesTilde:PrecedesTilde,preceq:preceq,precnapprox:precnapprox,precneqq:precneqq,precnsim:precnsim,pre:pre,prE:prE,precsim:precsim,prime:prime,Prime:Prime,primes:primes,prnap:prnap,prnE:prnE,prnsim:prnsim,prod:prod,Product:Product,profalar:profalar,profline:profline,profsurf:profsurf,prop:prop,Proportional:Proportional,Proportion:Proportion,propto:propto,prsim:prsim,prurel:prurel,Pscr:Pscr,pscr:pscr,Psi:Psi,psi:psi,puncsp:puncsp,Qfr:Qfr,qfr:qfr,qint:qint,qopf:qopf,Qopf:Qopf,qprime:qprime,Qscr:Qscr,qscr:qscr,quaternions:quaternions,quatint:quatint,quest:quest,questeq:questeq,quot:quot,QUOT:QUOT,rAarr:rAarr,race:race,Racute:Racute,racute:racute,radic:radic,raemptyv:raemptyv,rang:rang,Rang:Rang,rangd:rangd,range:range,rangle:rangle,raquo:raquo,rarrap:rarrap,rarrb:rarrb,rarrbfs:rarrbfs,rarrc:rarrc,rarr:rarr,Rarr:Rarr,rArr:rArr,rarrfs:rarrfs,rarrhk:rarrhk,rarrlp:rarrlp,rarrpl:rarrpl,rarrsim:rarrsim,Rarrtl:Rarrtl,rarrtl:rarrtl,rarrw:rarrw,ratail:ratail,rAtail:rAtail,ratio:ratio,rationals:rationals,rbarr:rbarr,rBarr:rBarr,RBarr:RBarr,rbbrk:rbbrk,rbrace:rbrace,rbrack:rbrack,rbrke:rbrke,rbrksld:rbrksld,rbrkslu:rbrkslu,Rcaron:Rcaron,rcaron:rcaron,Rcedil:Rcedil,rcedil:rcedil,rceil:rceil,rcub:rcub,Rcy:Rcy,rcy:rcy,rdca:rdca,rdldhar:rdldhar,rdquo:rdquo,rdquor:rdquor,rdsh:rdsh,real:real,realine:realine,realpart:realpart,reals:reals,Re:Re,rect:rect,reg:reg,REG:REG,ReverseElement:ReverseElement,ReverseEquilibrium:ReverseEquilibrium,ReverseUpEquilibrium:ReverseUpEquilibrium,rfisht:rfisht,rfloor:rfloor,rfr:rfr,Rfr:Rfr,rHar:rHar,rhard:rhard,rharu:rharu,rharul:rharul,Rho:Rho,rho:rho,rhov:rhov,RightAngleBracket:RightAngleBracket,RightArrowBar:RightArrowBar,rightarrow:rightarrow,RightArrow:RightArrow,Rightarrow:Rightarrow,RightArrowLeftArrow:RightArrowLeftArrow,rightarrowtail:rightarrowtail,RightCeiling:RightCeiling,RightDoubleBracket:RightDoubleBracket,RightDownTeeVector:RightDownTeeVector,RightDownVectorBar:RightDownVectorBar,RightDownVector:RightDownVector,RightFloor:RightFloor,rightharpoondown:rightharpoondown,rightharpoonup:rightharpoonup,rightleftarrows:rightleftarrows,rightleftharpoons:rightleftharpoons,rightrightarrows:rightrightarrows,rightsquigarrow:rightsquigarrow,RightTeeArrow:RightTeeArrow,RightTee:RightTee,RightTeeVector:RightTeeVector,rightthreetimes:rightthreetimes,RightTriangleBar:RightTriangleBar,RightTriangle:RightTriangle,RightTriangleEqual:RightTriangleEqual,RightUpDownVector:RightUpDownVector,RightUpTeeVector:RightUpTeeVector,RightUpVectorBar:RightUpVectorBar,RightUpVector:RightUpVector,RightVectorBar:RightVectorBar,RightVector:RightVector,ring:ring,risingdotseq:risingdotseq,rlarr:rlarr,rlhar:rlhar,rlm:rlm,rmoustache:rmoustache,rmoust:rmoust,rnmid:rnmid,roang:roang,roarr:roarr,robrk:robrk,ropar:ropar,ropf:ropf,Ropf:Ropf,roplus:roplus,rotimes:rotimes,RoundImplies:RoundImplies,rpar:rpar,rpargt:rpargt,rppolint:rppolint,rrarr:rrarr,Rrightarrow:Rrightarrow,rsaquo:rsaquo,rscr:rscr,Rscr:Rscr,rsh:rsh,Rsh:Rsh,rsqb:rsqb,rsquo:rsquo,rsquor:rsquor,rthree:rthree,rtimes:rtimes,rtri:rtri,rtrie:rtrie,rtrif:rtrif,rtriltri:rtriltri,RuleDelayed:RuleDelayed,ruluhar:ruluhar,rx:rx,Sacute:Sacute,sacute:sacute,sbquo:sbquo,scap:scap,Scaron:Scaron,scaron:scaron,Sc:Sc,sc:sc,sccue:sccue,sce:sce,scE:scE,Scedil:Scedil,scedil:scedil,Scirc:Scirc,scirc:scirc,scnap:scnap,scnE:scnE,scnsim:scnsim,scpolint:scpolint,scsim:scsim,Scy:Scy,scy:scy,sdotb:sdotb,sdot:sdot,sdote:sdote,searhk:searhk,searr:searr,seArr:seArr,searrow:searrow,sect:sect,semi:semi,seswar:seswar,setminus:setminus,setmn:setmn,sext:sext,Sfr:Sfr,sfr:sfr,sfrown:sfrown,sharp:sharp,SHCHcy:SHCHcy,shchcy:shchcy,SHcy:SHcy,shcy:shcy,ShortDownArrow:ShortDownArrow,ShortLeftArrow:ShortLeftArrow,shortmid:shortmid,shortparallel:shortparallel,ShortRightArrow:ShortRightArrow,ShortUpArrow:ShortUpArrow,shy:shy,Sigma:Sigma,sigma:sigma,sigmaf:sigmaf,sigmav:sigmav,sim:sim,simdot:simdot,sime:sime,simeq:simeq,simg:simg,simgE:simgE,siml:siml,simlE:simlE,simne:simne,simplus:simplus,simrarr:simrarr,slarr:slarr,SmallCircle:SmallCircle,smallsetminus:smallsetminus,smashp:smashp,smeparsl:smeparsl,smid:smid,smile:smile,smt:smt,smte:smte,smtes:smtes,SOFTcy:SOFTcy,softcy:softcy,solbar:solbar,solb:solb,sol:sol,Sopf:Sopf,sopf:sopf,spades:spades,spadesuit:spadesuit,spar:spar,sqcap:sqcap,sqcaps:sqcaps,sqcup:sqcup,sqcups:sqcups,Sqrt:Sqrt,sqsub:sqsub,sqsube:sqsube,sqsubset:sqsubset,sqsubseteq:sqsubseteq,sqsup:sqsup,sqsupe:sqsupe,sqsupset:sqsupset,sqsupseteq:sqsupseteq,square:square,Square:Square,SquareIntersection:SquareIntersection,SquareSubset:SquareSubset,SquareSubsetEqual:SquareSubsetEqual,SquareSuperset:SquareSuperset,SquareSupersetEqual:SquareSupersetEqual,SquareUnion:SquareUnion,squarf:squarf,squ:squ,squf:squf,srarr:srarr,Sscr:Sscr,sscr:sscr,ssetmn:ssetmn,ssmile:ssmile,sstarf:sstarf,Star:Star,star:star,starf:starf,straightepsilon:straightepsilon,straightphi:straightphi,strns:strns,sub:sub,Sub:Sub,subdot:subdot,subE:subE,sube:sube,subedot:subedot,submult:submult,subnE:subnE,subne:subne,subplus:subplus,subrarr:subrarr,subset:subset,Subset:Subset,subseteq:subseteq,subseteqq:subseteqq,SubsetEqual:SubsetEqual,subsetneq:subsetneq,subsetneqq:subsetneqq,subsim:subsim,subsub:subsub,subsup:subsup,succapprox:succapprox,succ:succ,succcurlyeq:succcurlyeq,Succeeds:Succeeds,SucceedsEqual:SucceedsEqual,SucceedsSlantEqual:SucceedsSlantEqual,SucceedsTilde:SucceedsTilde,succeq:succeq,succnapprox:succnapprox,succneqq:succneqq,succnsim:succnsim,succsim:succsim,SuchThat:SuchThat,sum:sum,Sum:Sum,sung:sung,sup1:sup1,sup2:sup2,sup3:sup3,sup:sup,Sup:Sup,supdot:supdot,supdsub:supdsub,supE:supE,supe:supe,supedot:supedot,Superset:Superset,SupersetEqual:SupersetEqual,suphsol:suphsol,suphsub:suphsub,suplarr:suplarr,supmult:supmult,supnE:supnE,supne:supne,supplus:supplus,supset:supset,Supset:Supset,supseteq:supseteq,supseteqq:supseteqq,supsetneq:supsetneq,supsetneqq:supsetneqq,supsim:supsim,supsub:supsub,supsup:supsup,swarhk:swarhk,swarr:swarr,swArr:swArr,swarrow:swarrow,swnwar:swnwar,szlig:szlig,Tab:Tab,target:target,Tau:Tau,tau:tau,tbrk:tbrk,Tcaron:Tcaron,tcaron:tcaron,Tcedil:Tcedil,tcedil:tcedil,Tcy:Tcy,tcy:tcy,tdot:tdot,telrec:telrec,Tfr:Tfr,tfr:tfr,there4:there4,therefore:therefore,Therefore:Therefore,Theta:Theta,theta:theta,thetasym:thetasym,thetav:thetav,thickapprox:thickapprox,thicksim:thicksim,ThickSpace:ThickSpace,ThinSpace:ThinSpace,thinsp:thinsp,thkap:thkap,thksim:thksim,THORN:THORN,thorn:thorn,tilde:tilde,Tilde:Tilde,TildeEqual:TildeEqual,TildeFullEqual:TildeFullEqual,TildeTilde:TildeTilde,timesbar:timesbar,timesb:timesb,times:times,timesd:timesd,tint:tint,toea:toea,topbot:topbot,topcir:topcir,top:top,Topf:Topf,topf:topf,topfork:topfork,tosa:tosa,tprime:tprime,trade:trade,TRADE:TRADE,triangle:triangle,triangledown:triangledown,triangleleft:triangleleft,trianglelefteq:trianglelefteq,triangleq:triangleq,triangleright:triangleright,trianglerighteq:trianglerighteq,tridot:tridot,trie:trie,triminus:triminus,TripleDot:TripleDot,triplus:triplus,trisb:trisb,tritime:tritime,trpezium:trpezium,Tscr:Tscr,tscr:tscr,TScy:TScy,tscy:tscy,TSHcy:TSHcy,tshcy:tshcy,Tstrok:Tstrok,tstrok:tstrok,twixt:twixt,twoheadleftarrow:twoheadleftarrow,twoheadrightarrow:twoheadrightarrow,Uacute:Uacute,uacute:uacute,uarr:uarr,Uarr:Uarr,uArr:uArr,Uarrocir:Uarrocir,Ubrcy:Ubrcy,ubrcy:ubrcy,Ubreve:Ubreve,ubreve:ubreve,Ucirc:Ucirc,ucirc:ucirc,Ucy:Ucy,ucy:ucy,udarr:udarr,Udblac:Udblac,udblac:udblac,udhar:udhar,ufisht:ufisht,Ufr:Ufr,ufr:ufr,Ugrave:Ugrave,ugrave:ugrave,uHar:uHar,uharl:uharl,uharr:uharr,uhblk:uhblk,ulcorn:ulcorn,ulcorner:ulcorner,ulcrop:ulcrop,ultri:ultri,Umacr:Umacr,umacr:umacr,uml:uml,UnderBar:UnderBar,UnderBrace:UnderBrace,UnderBracket:UnderBracket,UnderParenthesis:UnderParenthesis,Union:Union,UnionPlus:UnionPlus,Uogon:Uogon,uogon:uogon,Uopf:Uopf,uopf:uopf,UpArrowBar:UpArrowBar,uparrow:uparrow,UpArrow:UpArrow,Uparrow:Uparrow,UpArrowDownArrow:UpArrowDownArrow,updownarrow:updownarrow,UpDownArrow:UpDownArrow,Updownarrow:Updownarrow,UpEquilibrium:UpEquilibrium,upharpoonleft:upharpoonleft,upharpoonright:upharpoonright,uplus:uplus,UpperLeftArrow:UpperLeftArrow,UpperRightArrow:UpperRightArrow,upsi:upsi,Upsi:Upsi,upsih:upsih,Upsilon:Upsilon,upsilon:upsilon,UpTeeArrow:UpTeeArrow,UpTee:UpTee,upuparrows:upuparrows,urcorn:urcorn,urcorner:urcorner,urcrop:urcrop,Uring:Uring,uring:uring,urtri:urtri,Uscr:Uscr,uscr:uscr,utdot:utdot,Utilde:Utilde,utilde:utilde,utri:utri,utrif:utrif,uuarr:uuarr,Uuml:Uuml,uuml:uuml,uwangle:uwangle,vangrt:vangrt,varepsilon:varepsilon,varkappa:varkappa,varnothing:varnothing,varphi:varphi,varpi:varpi,varpropto:varpropto,varr:varr,vArr:vArr,varrho:varrho,varsigma:varsigma,varsubsetneq:varsubsetneq,varsubsetneqq:varsubsetneqq,varsupsetneq:varsupsetneq,varsupsetneqq:varsupsetneqq,vartheta:vartheta,vartriangleleft:vartriangleleft,vartriangleright:vartriangleright,vBar:vBar,Vbar:Vbar,vBarv:vBarv,Vcy:Vcy,vcy:vcy,vdash:vdash,vDash:vDash,Vdash:Vdash,VDash:VDash,Vdashl:Vdashl,veebar:veebar,vee:vee,Vee:Vee,veeeq:veeeq,vellip:vellip,verbar:verbar,Verbar:Verbar,vert:vert,Vert:Vert,VerticalBar:VerticalBar,VerticalLine:VerticalLine,VerticalSeparator:VerticalSeparator,VerticalTilde:VerticalTilde,VeryThinSpace:VeryThinSpace,Vfr:Vfr,vfr:vfr,vltri:vltri,vnsub:vnsub,vnsup:vnsup,Vopf:Vopf,vopf:vopf,vprop:vprop,vrtri:vrtri,Vscr:Vscr,vscr:vscr,vsubnE:vsubnE,vsubne:vsubne,vsupnE:vsupnE,vsupne:vsupne,Vvdash:Vvdash,vzigzag:vzigzag,Wcirc:Wcirc,wcirc:wcirc,wedbar:wedbar,wedge:wedge,Wedge:Wedge,wedgeq:wedgeq,weierp:weierp,Wfr:Wfr,wfr:wfr,Wopf:Wopf,wopf:wopf,wp:wp,wr:wr,wreath:wreath,Wscr:Wscr,wscr:wscr,xcap:xcap,xcirc:xcirc,xcup:xcup,xdtri:xdtri,Xfr:Xfr,xfr:xfr,xharr:xharr,xhArr:xhArr,Xi:Xi,xi:xi,xlarr:xlarr,xlArr:xlArr,xmap:xmap,xnis:xnis,xodot:xodot,Xopf:Xopf,xopf:xopf,xoplus:xoplus,xotime:xotime,xrarr:xrarr,xrArr:xrArr,Xscr:Xscr,xscr:xscr,xsqcup:xsqcup,xuplus:xuplus,xutri:xutri,xvee:xvee,xwedge:xwedge,Yacute:Yacute,yacute:yacute,YAcy:YAcy,yacy:yacy,Ycirc:Ycirc,ycirc:ycirc,Ycy:Ycy,ycy:ycy,yen:yen,Yfr:Yfr,yfr:yfr,YIcy:YIcy,yicy:yicy,Yopf:Yopf,yopf:yopf,Yscr:Yscr,yscr:yscr,YUcy:YUcy,yucy:yucy,yuml:yuml,Yuml:Yuml,Zacute:Zacute,zacute:zacute,Zcaron:Zcaron,zcaron:zcaron,Zcy:Zcy,zcy:zcy,Zdot:Zdot,zdot:zdot,zeetrf:zeetrf,ZeroWidthSpace:ZeroWidthSpace,Zeta:Zeta,zeta:zeta,zfr:zfr,Zfr:Zfr,ZHcy:ZHcy,zhcy:zhcy,zigrarr:zigrarr,zopf:zopf,Zopf:Zopf,Zscr:Zscr,zscr:zscr,zwj:zwj,zwnj:zwnj,default:entities}),require$$0=getCjsExportFromNamespace(entities$1),entities$2=require$$0,regex=/[!-#%-\*,-\/:;\?@\[-\]_\{\}\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0AF0\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E49\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]|\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC9\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDF3C-\uDF3E]|\uD806[\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2]|\uD807[\uDC41-\uDC45\uDC70\uDC71]|\uD809[\uDC70-\uDC74]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD82F\uDC9F|\uD836[\uDE87-\uDE8B]|\uD83A[\uDD5E\uDD5F]/,encodeCache={};function getEncodeCache(r){var e,t,a=encodeCache[r];if(a)return a;for(a=encodeCache[r]=[],e=0;e<128;e++)t=String.fromCharCode(e),/^[0-9a-z]$/i.test(t)?a.push(t):a.push("%"+("0"+e.toString(16).toUpperCase()).slice(-2));for(e=0;e<r.length;e++)a[r.charCodeAt(e)]=r[e];return a}function encode(r,e,t){var a,s,o,i,n,l="";for("string"!=typeof e&&(t=e,e=encode.defaultChars),void 0===t&&(t=!0),n=getEncodeCache(e),a=0,s=r.length;a<s;a++)if(o=r.charCodeAt(a),t&&37===o&&a+2<s&&/^[0-9a-f]{2}$/i.test(r.slice(a+1,a+3)))l+=r.slice(a,a+3),a+=2;else if(o<128)l+=n[o];else if(o>=55296&&o<=57343){if(o>=55296&&o<=56319&&a+1<s&&(i=r.charCodeAt(a+1))>=56320&&i<=57343){l+=encodeURIComponent(r[a]+r[a+1]),a++;continue}l+="%EF%BF%BD"}else l+=encodeURIComponent(r[a]);return l}encode.defaultChars=";/?:@&=+$,-_.!~*'()#",encode.componentChars="-_.!~*'()";var encode_1=encode,decodeCache={};function getDecodeCache(r){var e,t,a=decodeCache[r];if(a)return a;for(a=decodeCache[r]=[],e=0;e<128;e++)t=String.fromCharCode(e),a.push(t);for(e=0;e<r.length;e++)a[t=r.charCodeAt(e)]="%"+("0"+t.toString(16).toUpperCase()).slice(-2);return a}function decode(r,e){var t;return"string"!=typeof e&&(e=decode.defaultChars),t=getDecodeCache(e),r.replace(/(%[a-f0-9]{2})+/gi,function(r){var e,a,s,o,i,n,l,c="";for(e=0,a=r.length;e<a;e+=3)(s=parseInt(r.slice(e+1,e+3),16))<128?c+=t[s]:192==(224&s)&&e+3<a&&128==(192&(o=parseInt(r.slice(e+4,e+6),16)))?(c+=(l=s<<6&1984|63&o)<128?"��":String.fromCharCode(l),e+=3):224==(240&s)&&e+6<a&&(o=parseInt(r.slice(e+4,e+6),16),i=parseInt(r.slice(e+7,e+9),16),128==(192&o)&&128==(192&i))?(c+=(l=s<<12&61440|o<<6&4032|63&i)<2048||l>=55296&&l<=57343?"���":String.fromCharCode(l),e+=6):240==(248&s)&&e+9<a&&(o=parseInt(r.slice(e+4,e+6),16),i=parseInt(r.slice(e+7,e+9),16),n=parseInt(r.slice(e+10,e+12),16),128==(192&o)&&128==(192&i)&&128==(192&n))?((l=s<<18&1835008|o<<12&258048|i<<6&4032|63&n)<65536||l>1114111?c+="����":(l-=65536,c+=String.fromCharCode(55296+(l>>10),56320+(1023&l))),e+=9):c+="�";return c})}decode.defaultChars=";/?:@&=+$,#",decode.componentChars="";var decode_1=decode,format=function(r){var e="";return e+=r.protocol||"",e+=r.slashes?"//":"",e+=r.auth?r.auth+"@":"",r.hostname&&-1!==r.hostname.indexOf(":")?e+="["+r.hostname+"]":e+=r.hostname||"",e+=r.port?":"+r.port:"",e+=r.pathname||"",e+=r.search||"",e+=r.hash||""};function Url(){this.protocol=null,this.slashes=null,this.auth=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.pathname=null}var protocolPattern=/^([a-z0-9.+-]+:)/i,portPattern=/:[0-9]*$/,simplePathPattern=/^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,delims=["<",">",'"',"`"," ","\r","\n","\t"],unwise=["{","}","|","\\","^","`"].concat(delims),autoEscape=["'"].concat(unwise),nonHostChars=["%","/","?",";","#"].concat(autoEscape),hostEndingChars=["/","?","#"],hostnameMaxLen=255,hostnamePartPattern=/^[+a-z0-9A-Z_-]{0,63}$/,hostnamePartStart=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,hostlessProtocol={javascript:!0,"javascript:":!0},slashedProtocol={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,"http:":!0,"https:":!0,"ftp:":!0,"gopher:":!0,"file:":!0};function urlParse(r,e){if(r&&r instanceof Url)return r;var t=new Url;return t.parse(r,e),t}Url.prototype.parse=function(r,e){var t,a,s,o,i,n=r;if(n=n.trim(),!e&&1===r.split("#").length){var l=simplePathPattern.exec(n);if(l)return this.pathname=l[1],l[2]&&(this.search=l[2]),this}var c=protocolPattern.exec(n);if(c&&(s=(c=c[0]).toLowerCase(),this.protocol=c,n=n.substr(c.length)),(e||c||n.match(/^\/\/[^@\/]+@[^@\/]+/))&&(!(i="//"===n.substr(0,2))||c&&hostlessProtocol[c]||(n=n.substr(2),this.slashes=!0)),!hostlessProtocol[c]&&(i||c&&!slashedProtocol[c])){var u,p,h=-1;for(t=0;t<hostEndingChars.length;t++)-1!==(o=n.indexOf(hostEndingChars[t]))&&(-1===h||o<h)&&(h=o);for(-1!==(p=-1===h?n.lastIndexOf("@"):n.lastIndexOf("@",h))&&(u=n.slice(0,p),n=n.slice(p+1),this.auth=u),h=-1,t=0;t<nonHostChars.length;t++)-1!==(o=n.indexOf(nonHostChars[t]))&&(-1===h||o<h)&&(h=o);-1===h&&(h=n.length),":"===n[h-1]&&h--;var d=n.slice(0,h);n=n.slice(h),this.parseHost(d),this.hostname=this.hostname||"";var g="["===this.hostname[0]&&"]"===this.hostname[this.hostname.length-1];if(!g){var f=this.hostname.split(/\./);for(t=0,a=f.length;t<a;t++){var m=f[t];if(m&&!m.match(hostnamePartPattern)){for(var b="",q=0,w=m.length;q<w;q++)m.charCodeAt(q)>127?b+="x":b+=m[q];if(!b.match(hostnamePartPattern)){var k=f.slice(0,t),v=f.slice(t+1),y=m.match(hostnamePartStart);y&&(k.push(y[1]),v.unshift(y[2])),v.length&&(n=v.join(".")+n),this.hostname=k.join(".");break}}}}this.hostname.length>hostnameMaxLen&&(this.hostname=""),g&&(this.hostname=this.hostname.substr(1,this.hostname.length-2))}var _=n.indexOf("#");-1!==_&&(this.hash=n.substr(_),n=n.slice(0,_));var E=n.indexOf("?");return-1!==E&&(this.search=n.substr(E),n=n.slice(0,E)),n&&(this.pathname=n),slashedProtocol[s]&&this.hostname&&!this.pathname&&(this.pathname=""),this},Url.prototype.parseHost=function(r){var e=portPattern.exec(r);e&&(":"!==(e=e[0])&&(this.port=e.substr(1)),r=r.substr(0,r.length-e.length)),r&&(this.hostname=r)};var parse=urlParse,encode$1=encode_1,decode$1=decode_1,format$1=format,parse$1=parse,mdurl={encode:encode$1,decode:decode$1,format:format$1,parse:parse$1},regex$1=/[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,regex$2=/[\0-\x1F\x7F-\x9F]/,regex$3=/[\xAD\u0600-\u0605\u061C\u06DD\u070F\u08E2\u180E\u200B-\u200F\u202A-\u202E\u2060-\u2064\u2066-\u206F\uFEFF\uFFF9-\uFFFB]|\uD804\uDCBD|\uD82F[\uDCA0-\uDCA3]|\uD834[\uDD73-\uDD7A]|\uDB40[\uDC01\uDC20-\uDC7F]/,regex$4=/[ \xA0\u1680\u2000-\u200A\u202F\u205F\u3000]/,Any=regex$1,Cc=regex$2,Cf=regex$3,P=regex,Z=regex$4,uc_micro={Any:Any,Cc:Cc,Cf:Cf,P:P,Z:Z},utils=createCommonjsModule(function(r,e){var t=Object.prototype.hasOwnProperty;function a(r,e){return t.call(r,e)}function s(r){return!(r>=55296&&r<=57343)&&(!(r>=64976&&r<=65007)&&(65535!=(65535&r)&&65534!=(65535&r)&&(!(r>=0&&r<=8)&&(11!==r&&(!(r>=14&&r<=31)&&(!(r>=127&&r<=159)&&!(r>1114111)))))))}function o(r){if(r>65535){var e=55296+((r-=65536)>>10),t=56320+(1023&r);return String.fromCharCode(e,t)}return String.fromCharCode(r)}var i=/\\([!"#$%&'()*+,\-.\/:;<=>?@[\\\]^_`{|}~])/g,n=new RegExp(i.source+"|"+/&([a-z#][a-z0-9]{1,31});/gi.source,"gi"),l=/^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;var c=/[&<>"]/,u=/[&<>"]/g,p={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;"};function h(r){return p[r]}var d=/[.?*+^$[\]\\(){}|-]/g;e.lib={},e.lib.mdurl=mdurl,e.lib.ucmicro=uc_micro,e.assign=function(r){return Array.prototype.slice.call(arguments,1).forEach(function(e){if(e){if("object"!=typeof e)throw new TypeError(e+"must be object");Object.keys(e).forEach(function(t){r[t]=e[t]})}}),r},e.isString=function(r){return"[object String]"===function(r){return Object.prototype.toString.call(r)}(r)},e.has=a,e.unescapeMd=function(r){return r.indexOf("\\")<0?r:r.replace(i,"$1")},e.unescapeAll=function(r){return r.indexOf("\\")<0&&r.indexOf("&")<0?r:r.replace(n,function(r,e,t){return e||function(r,e){var t=0;return a(entities$2,e)?entities$2[e]:35===e.charCodeAt(0)&&l.test(e)&&s(t="x"===e[1].toLowerCase()?parseInt(e.slice(2),16):parseInt(e.slice(1),10))?o(t):r}(r,t)})},e.isValidEntityCode=s,e.fromCodePoint=o,e.escapeHtml=function(r){return c.test(r)?r.replace(u,h):r},e.arrayReplaceAt=function(r,e,t){return[].concat(r.slice(0,e),t,r.slice(e+1))},e.isSpace=function(r){switch(r){case 9:case 32:return!0}return!1},e.isWhiteSpace=function(r){if(r>=8192&&r<=8202)return!0;switch(r){case 9:case 10:case 11:case 12:case 13:case 32:case 160:case 5760:case 8239:case 8287:case 12288:return!0}return!1},e.isMdAsciiPunct=function(r){switch(r){case 33:case 34:case 35:case 36:case 37:case 38:case 39:case 40:case 41:case 42:case 43:case 44:case 45:case 46:case 47:case 58:case 59:case 60:case 61:case 62:case 63:case 64:case 91:case 92:case 93:case 94:case 95:case 96:case 123:case 124:case 125:case 126:return!0;default:return!1}},e.isPunctChar=function(r){return regex.test(r)},e.escapeRE=function(r){return r.replace(d,"\\$&")},e.normalizeReference=function(r){return r.trim().replace(/\s+/g," ").toUpperCase()}}),utils_1=utils.lib,utils_2=utils.assign,utils_3=utils.isString,utils_4=utils.has,utils_5=utils.unescapeMd,utils_6=utils.unescapeAll,utils_7=utils.isValidEntityCode,utils_8=utils.fromCodePoint,utils_9=utils.escapeHtml,utils_10=utils.arrayReplaceAt,utils_11=utils.isSpace,utils_12=utils.isWhiteSpace,utils_13=utils.isMdAsciiPunct,utils_14=utils.isPunctChar,utils_15=utils.escapeRE,utils_16=utils.normalizeReference,parse_link_label=function(r,e,t){var a,s,o,i,n=-1,l=r.posMax,c=r.pos;for(r.pos=e+1,a=1;r.pos<l;){if(93===(o=r.src.charCodeAt(r.pos))&&0===--a){s=!0;break}if(i=r.pos,r.md.inline.skipToken(r),91===o)if(i===r.pos-1)a++;else if(t)return r.pos=c,-1}return s&&(n=r.pos),r.pos=c,n},isSpace=utils.isSpace,unescapeAll=utils.unescapeAll,parse_link_destination=function(r,e,t){var a,s,o=e,i={ok:!1,pos:0,lines:0,str:""};if(60===r.charCodeAt(e)){for(e++;e<t;){if(10===(a=r.charCodeAt(e))||isSpace(a))return i;if(62===a)return i.pos=e+1,i.str=unescapeAll(r.slice(o+1,e)),i.ok=!0,i;92===a&&e+1<t?e+=2:e++}return i}for(s=0;e<t&&32!==(a=r.charCodeAt(e))&&!(a<32||127===a);)if(92===a&&e+1<t)e+=2;else{if(40===a&&s++,41===a){if(0===s)break;s--}e++}return o===e?i:0!==s?i:(i.str=unescapeAll(r.slice(o,e)),i.lines=0,i.pos=e,i.ok=!0,i)},unescapeAll$1=utils.unescapeAll,parse_link_title=function(r,e,t){var a,s,o=0,i=e,n={ok:!1,pos:0,lines:0,str:""};if(e>=t)return n;if(34!==(s=r.charCodeAt(e))&&39!==s&&40!==s)return n;for(e++,40===s&&(s=41);e<t;){if((a=r.charCodeAt(e))===s)return n.pos=e+1,n.lines=o,n.str=unescapeAll$1(r.slice(i+1,e)),n.ok=!0,n;10===a?o++:92===a&&e+1<t&&(e++,10===r.charCodeAt(e)&&o++),e++}return n},parseLinkLabel=parse_link_label,parseLinkDestination=parse_link_destination,parseLinkTitle=parse_link_title,helpers={parseLinkLabel:parseLinkLabel,parseLinkDestination:parseLinkDestination,parseLinkTitle:parseLinkTitle},assign=utils.assign,unescapeAll$2=utils.unescapeAll,escapeHtml=utils.escapeHtml,default_rules={};function Renderer(){this.rules=assign({},default_rules)}default_rules.code_inline=function(r,e,t,a,s){var o=r[e];return"<code"+s.renderAttrs(o)+">"+escapeHtml(r[e].content)+"</code>"},default_rules.code_block=function(r,e,t,a,s){var o=r[e];return"<pre"+s.renderAttrs(o)+"><code>"+escapeHtml(r[e].content)+"</code></pre>\n"},default_rules.fence=function(r,e,t,a,s){var o,i,n,l,c=r[e],u=c.info?unescapeAll$2(c.info).trim():"",p="";return u&&(p=u.split(/\s+/g)[0]),0===(o=t.highlight&&t.highlight(c.content,p)||escapeHtml(c.content)).indexOf("<pre")?o+"\n":u?(i=c.attrIndex("class"),n=c.attrs?c.attrs.slice():[],i<0?n.push(["class",t.langPrefix+p]):n[i][1]+=" "+t.langPrefix+p,l={attrs:n},"<pre><code"+s.renderAttrs(l)+">"+o+"</code></pre>\n"):"<pre><code"+s.renderAttrs(c)+">"+o+"</code></pre>\n"},default_rules.image=function(r,e,t,a,s){var o=r[e];return o.attrs[o.attrIndex("alt")][1]=s.renderInlineAsText(o.children,t,a),s.renderToken(r,e,t)},default_rules.hardbreak=function(r,e,t){return t.xhtmlOut?"<br />\n":"<br>\n"},default_rules.softbreak=function(r,e,t){return t.breaks?t.xhtmlOut?"<br />\n":"<br>\n":"\n"},default_rules.text=function(r,e){return escapeHtml(r[e].content)},default_rules.html_block=function(r,e){return r[e].content},default_rules.html_inline=function(r,e){return r[e].content},Renderer.prototype.renderAttrs=function(r){var e,t,a;if(!r.attrs)return"";for(a="",e=0,t=r.attrs.length;e<t;e++)a+=" "+escapeHtml(r.attrs[e][0])+'="'+escapeHtml(r.attrs[e][1])+'"';return a},Renderer.prototype.renderToken=function(r,e,t){var a,s="",o=!1,i=r[e];return i.hidden?"":(i.block&&-1!==i.nesting&&e&&r[e-1].hidden&&(s+="\n"),s+=(-1===i.nesting?"</":"<")+i.tag,s+=this.renderAttrs(i),0===i.nesting&&t.xhtmlOut&&(s+=" /"),i.block&&(o=!0,1===i.nesting&&e+1<r.length&&("inline"===(a=r[e+1]).type||a.hidden?o=!1:-1===a.nesting&&a.tag===i.tag&&(o=!1))),s+=o?">\n":">")},Renderer.prototype.renderInline=function(r,e,t){for(var a,s="",o=this.rules,i=0,n=r.length;i<n;i++)void 0!==o[a=r[i].type]?s+=o[a](r,i,e,t,this):s+=this.renderToken(r,i,e);return s},Renderer.prototype.renderInlineAsText=function(r,e,t){for(var a="",s=0,o=r.length;s<o;s++)"text"===r[s].type?a+=r[s].content:"image"===r[s].type&&(a+=this.renderInlineAsText(r[s].children,e,t));return a},Renderer.prototype.render=function(r,e,t){var a,s,o,i="",n=this.rules;for(a=0,s=r.length;a<s;a++)"inline"===(o=r[a].type)?i+=this.renderInline(r[a].children,e,t):void 0!==n[o]?i+=n[r[a].type](r,a,e,t,this):i+=this.renderToken(r,a,e,t);return i};var renderer=Renderer;function Ruler(){this.__rules__=[],this.__cache__=null}Ruler.prototype.__find__=function(r){for(var e=0;e<this.__rules__.length;e++)if(this.__rules__[e].name===r)return e;return-1},Ruler.prototype.__compile__=function(){var r=this,e=[""];r.__rules__.forEach(function(r){r.enabled&&r.alt.forEach(function(r){e.indexOf(r)<0&&e.push(r)})}),r.__cache__={},e.forEach(function(e){r.__cache__[e]=[],r.__rules__.forEach(function(t){t.enabled&&(e&&t.alt.indexOf(e)<0||r.__cache__[e].push(t.fn))})})},Ruler.prototype.at=function(r,e,t){var a=this.__find__(r),s=t||{};if(-1===a)throw new Error("Parser rule not found: "+r);this.__rules__[a].fn=e,this.__rules__[a].alt=s.alt||[],this.__cache__=null},Ruler.prototype.before=function(r,e,t,a){var s=this.__find__(r),o=a||{};if(-1===s)throw new Error("Parser rule not found: "+r);this.__rules__.splice(s,0,{name:e,enabled:!0,fn:t,alt:o.alt||[]}),this.__cache__=null},Ruler.prototype.after=function(r,e,t,a){var s=this.__find__(r),o=a||{};if(-1===s)throw new Error("Parser rule not found: "+r);this.__rules__.splice(s+1,0,{name:e,enabled:!0,fn:t,alt:o.alt||[]}),this.__cache__=null},Ruler.prototype.push=function(r,e,t){var a=t||{};this.__rules__.push({name:r,enabled:!0,fn:e,alt:a.alt||[]}),this.__cache__=null},Ruler.prototype.enable=function(r,e){Array.isArray(r)||(r=[r]);var t=[];return r.forEach(function(r){var a=this.__find__(r);if(a<0){if(e)return;throw new Error("Rules manager: invalid rule name "+r)}this.__rules__[a].enabled=!0,t.push(r)},this),this.__cache__=null,t},Ruler.prototype.enableOnly=function(r,e){Array.isArray(r)||(r=[r]),this.__rules__.forEach(function(r){r.enabled=!1}),this.enable(r,e)},Ruler.prototype.disable=function(r,e){Array.isArray(r)||(r=[r]);var t=[];return r.forEach(function(r){var a=this.__find__(r);if(a<0){if(e)return;throw new Error("Rules manager: invalid rule name "+r)}this.__rules__[a].enabled=!1,t.push(r)},this),this.__cache__=null,t},Ruler.prototype.getRules=function(r){return null===this.__cache__&&this.__compile__(),this.__cache__[r]||[]};var ruler=Ruler,NEWLINES_RE=/\r[\n\u0085]?|[\u2424\u2028\u0085]/g,NULL_RE=/\u0000/g,normalize=function(r){var e;e=(e=r.src.replace(NEWLINES_RE,"\n")).replace(NULL_RE,"�"),r.src=e},block$1=function(r){var e;r.inlineMode?((e=new r.Token("inline","",0)).content=r.src,e.map=[0,1],e.children=[],r.tokens.push(e)):r.md.block.parse(r.src,r.md,r.env,r.tokens)},inline=function(r){var e,t,a,s=r.tokens;for(t=0,a=s.length;t<a;t++)"inline"===(e=s[t]).type&&r.md.inline.parse(e.content,r.md,r.env,e.children)},arrayReplaceAt=utils.arrayReplaceAt;function isLinkOpen(r){return/^<a[>\s]/i.test(r)}function isLinkClose(r){return/^<\/a\s*>/i.test(r)}var linkify=function(r){var e,t,a,s,o,i,n,l,c,u,p,h,d,g,f,m,b,q=r.tokens;if(r.md.options.linkify)for(t=0,a=q.length;t<a;t++)if("inline"===q[t].type&&r.md.linkify.pretest(q[t].content))for(d=0,e=(s=q[t].children).length-1;e>=0;e--)if("link_close"!==(i=s[e]).type){if("html_inline"===i.type&&(isLinkOpen(i.content)&&d>0&&d--,isLinkClose(i.content)&&d++),!(d>0)&&"text"===i.type&&r.md.linkify.test(i.content)){for(c=i.content,b=r.md.linkify.match(c),n=[],h=i.level,p=0,l=0;l<b.length;l++)g=b[l].url,f=r.md.normalizeLink(g),r.md.validateLink(f)&&(m=b[l].text,m=b[l].schema?"mailto:"!==b[l].schema||/^mailto:/i.test(m)?r.md.normalizeLinkText(m):r.md.normalizeLinkText("mailto:"+m).replace(/^mailto:/,""):r.md.normalizeLinkText("http://"+m).replace(/^http:\/\//,""),(u=b[l].index)>p&&((o=new r.Token("text","",0)).content=c.slice(p,u),o.level=h,n.push(o)),(o=new r.Token("link_open","a",1)).attrs=[["href",f]],o.level=h++,o.markup="linkify",o.info="auto",n.push(o),(o=new r.Token("text","",0)).content=m,o.level=h,n.push(o),(o=new r.Token("link_close","a",-1)).level=--h,o.markup="linkify",o.info="auto",n.push(o),p=b[l].lastIndex);p<c.length&&((o=new r.Token("text","",0)).content=c.slice(p),o.level=h,n.push(o)),q[t].children=s=arrayReplaceAt(s,e,n)}}else for(e--;s[e].level!==i.level&&"link_open"!==s[e].type;)e--},RARE_RE=/\+-|\.\.|\?\?\?\?|!!!!|,,|--/,SCOPED_ABBR_TEST_RE=/\((c|tm|r|p)\)/i,SCOPED_ABBR_RE=/\((c|tm|r|p)\)/gi,SCOPED_ABBR={c:"©",r:"®",p:"§",tm:"™"};function replaceFn(r,e){return SCOPED_ABBR[e.toLowerCase()]}function replace_scoped(r){var e,t,a=0;for(e=r.length-1;e>=0;e--)"text"!==(t=r[e]).type||a||(t.content=t.content.replace(SCOPED_ABBR_RE,replaceFn)),"link_open"===t.type&&"auto"===t.info&&a--,"link_close"===t.type&&"auto"===t.info&&a++}function replace_rare(r){var e,t,a=0;for(e=r.length-1;e>=0;e--)"text"!==(t=r[e]).type||a||RARE_RE.test(t.content)&&(t.content=t.content.replace(/\+-/g,"±").replace(/\.{2,}/g,"…").replace(/([?!])…/g,"$1..").replace(/([?!]){4,}/g,"$1$1$1").replace(/,{2,}/g,",").replace(/(^|[^-])---([^-]|$)/gm,"$1—$2").replace(/(^|\s)--(\s|$)/gm,"$1–$2").replace(/(^|[^-\s])--([^-\s]|$)/gm,"$1–$2")),"link_open"===t.type&&"auto"===t.info&&a--,"link_close"===t.type&&"auto"===t.info&&a++}var replacements=function(r){var e;if(r.md.options.typographer)for(e=r.tokens.length-1;e>=0;e--)"inline"===r.tokens[e].type&&(SCOPED_ABBR_TEST_RE.test(r.tokens[e].content)&&replace_scoped(r.tokens[e].children),RARE_RE.test(r.tokens[e].content)&&replace_rare(r.tokens[e].children))},isWhiteSpace=utils.isWhiteSpace,isPunctChar=utils.isPunctChar,isMdAsciiPunct=utils.isMdAsciiPunct,QUOTE_TEST_RE=/['"]/,QUOTE_RE=/['"]/g,APOSTROPHE="’";function replaceAt(r,e,t){return r.substr(0,e)+t+r.substr(e+1)}function process_inlines(r,e){var t,a,s,o,i,n,l,c,u,p,h,d,g,f,m,b,q,w,k,v,y;for(k=[],t=0;t<r.length;t++){for(a=r[t],l=r[t].level,q=k.length-1;q>=0&&!(k[q].level<=l);q--);if(k.length=q+1,"text"===a.type){i=0,n=(s=a.content).length;r:for(;i<n&&(QUOTE_RE.lastIndex=i,o=QUOTE_RE.exec(s));){if(m=b=!0,i=o.index+1,w="'"===o[0],u=32,o.index-1>=0)u=s.charCodeAt(o.index-1);else for(q=t-1;q>=0&&("softbreak"!==r[q].type&&"hardbreak"!==r[q].type);q--)if("text"===r[q].type){u=r[q].content.charCodeAt(r[q].content.length-1);break}if(p=32,i<n)p=s.charCodeAt(i);else for(q=t+1;q<r.length&&("softbreak"!==r[q].type&&"hardbreak"!==r[q].type);q++)if("text"===r[q].type){p=r[q].content.charCodeAt(0);break}if(h=isMdAsciiPunct(u)||isPunctChar(String.fromCharCode(u)),d=isMdAsciiPunct(p)||isPunctChar(String.fromCharCode(p)),g=isWhiteSpace(u),(f=isWhiteSpace(p))?m=!1:d&&(g||h||(m=!1)),g?b=!1:h&&(f||d||(b=!1)),34===p&&'"'===o[0]&&u>=48&&u<=57&&(b=m=!1),m&&b&&(m=!1,b=d),m||b){if(b)for(q=k.length-1;q>=0&&(c=k[q],!(k[q].level<l));q--)if(c.single===w&&k[q].level===l){c=k[q],w?(v=e.md.options.quotes[2],y=e.md.options.quotes[3]):(v=e.md.options.quotes[0],y=e.md.options.quotes[1]),a.content=replaceAt(a.content,o.index,y),r[c.token].content=replaceAt(r[c.token].content,c.pos,v),i+=y.length-1,c.token===t&&(i+=v.length-1),n=(s=a.content).length,k.length=q;continue r}m?k.push({token:t,pos:o.index,single:w,level:l}):b&&w&&(a.content=replaceAt(a.content,o.index,APOSTROPHE))}else w&&(a.content=replaceAt(a.content,o.index,APOSTROPHE))}}}}var smartquotes=function(r){var e;if(r.md.options.typographer)for(e=r.tokens.length-1;e>=0;e--)"inline"===r.tokens[e].type&&QUOTE_TEST_RE.test(r.tokens[e].content)&&process_inlines(r.tokens[e].children,r)};function Token(r,e,t){this.type=r,this.tag=e,this.attrs=null,this.map=null,this.nesting=t,this.level=0,this.children=null,this.content="",this.markup="",this.info="",this.meta=null,this.block=!1,this.hidden=!1}Token.prototype.attrIndex=function(r){var e,t,a;if(!this.attrs)return-1;for(t=0,a=(e=this.attrs).length;t<a;t++)if(e[t][0]===r)return t;return-1},Token.prototype.attrPush=function(r){this.attrs?this.attrs.push(r):this.attrs=[r]},Token.prototype.attrSet=function(r,e){var t=this.attrIndex(r),a=[r,e];t<0?this.attrPush(a):this.attrs[t]=a},Token.prototype.attrGet=function(r){var e=this.attrIndex(r),t=null;return e>=0&&(t=this.attrs[e][1]),t},Token.prototype.attrJoin=function(r,e){var t=this.attrIndex(r);t<0?this.attrPush([r,e]):this.attrs[t][1]=this.attrs[t][1]+" "+e};var token=Token;function StateCore(r,e,t){this.src=r,this.env=t,this.tokens=[],this.inlineMode=!1,this.md=e}StateCore.prototype.Token=token;var state_core=StateCore,_rules=[["normalize",normalize],["block",block$1],["inline",inline],["linkify",linkify],["replacements",replacements],["smartquotes",smartquotes]];function Core(){this.ruler=new ruler;for(var r=0;r<_rules.length;r++)this.ruler.push(_rules[r][0],_rules[r][1])}Core.prototype.process=function(r){var e,t,a;for(e=0,t=(a=this.ruler.getRules("")).length;e<t;e++)a[e](r)},Core.prototype.State=state_core;var parser_core=Core,isSpace$1=utils.isSpace;function getLine(r,e){var t=r.bMarks[e]+r.blkIndent,a=r.eMarks[e];return r.src.substr(t,a-t)}function escapedSplit(r){var e,t=[],a=0,s=r.length,o=0,i=0,n=!1,l=0;for(e=r.charCodeAt(a);a<s;)96===e?n?(n=!1,l=a):o%2==0&&(n=!0,l=a):124!==e||o%2!=0||n||(t.push(r.substring(i,a)),i=a+1),92===e?o++:o=0,++a===s&&n&&(n=!1,a=l+1),e=r.charCodeAt(a);return t.push(r.substring(i)),t}var table=function(r,e,t,a){var s,o,i,n,l,c,u,p,h,d,g,f;if(e+2>t)return!1;if(l=e+1,r.sCount[l]<r.blkIndent)return!1;if(r.sCount[l]-r.blkIndent>=4)return!1;if((i=r.bMarks[l]+r.tShift[l])>=r.eMarks[l])return!1;if(124!==(s=r.src.charCodeAt(i++))&&45!==s&&58!==s)return!1;for(;i<r.eMarks[l];){if(124!==(s=r.src.charCodeAt(i))&&45!==s&&58!==s&&!isSpace$1(s))return!1;i++}for(c=(o=getLine(r,e+1)).split("|"),h=[],n=0;n<c.length;n++){if(!(d=c[n].trim())){if(0===n||n===c.length-1)continue;return!1}if(!/^:?-+:?$/.test(d))return!1;58===d.charCodeAt(d.length-1)?h.push(58===d.charCodeAt(0)?"center":"right"):58===d.charCodeAt(0)?h.push("left"):h.push("")}if(-1===(o=getLine(r,e).trim()).indexOf("|"))return!1;if(r.sCount[e]-r.blkIndent>=4)return!1;if((u=(c=escapedSplit(o.replace(/^\||\|$/g,""))).length)>h.length)return!1;if(a)return!0;for((p=r.push("table_open","table",1)).map=g=[e,0],(p=r.push("thead_open","thead",1)).map=[e,e+1],(p=r.push("tr_open","tr",1)).map=[e,e+1],n=0;n<c.length;n++)(p=r.push("th_open","th",1)).map=[e,e+1],h[n]&&(p.attrs=[["style","text-align:"+h[n]]]),(p=r.push("inline","",0)).content=c[n].trim(),p.map=[e,e+1],p.children=[],p=r.push("th_close","th",-1);for(p=r.push("tr_close","tr",-1),p=r.push("thead_close","thead",-1),(p=r.push("tbody_open","tbody",1)).map=f=[e+2,0],l=e+2;l<t&&!(r.sCount[l]<r.blkIndent)&&-1!==(o=getLine(r,l).trim()).indexOf("|")&&!(r.sCount[l]-r.blkIndent>=4);l++){for(c=escapedSplit(o.replace(/^\||\|$/g,"")),p=r.push("tr_open","tr",1),n=0;n<u;n++)p=r.push("td_open","td",1),h[n]&&(p.attrs=[["style","text-align:"+h[n]]]),(p=r.push("inline","",0)).content=c[n]?c[n].trim():"",p.children=[],p=r.push("td_close","td",-1);p=r.push("tr_close","tr",-1)}return p=r.push("tbody_close","tbody",-1),p=r.push("table_close","table",-1),g[1]=f[1]=l,r.line=l,!0},code=function(r,e,t){var a,s,o;if(r.sCount[e]-r.blkIndent<4)return!1;for(s=a=e+1;a<t;)if(r.isEmpty(a))a++;else{if(!(r.sCount[a]-r.blkIndent>=4))break;s=++a}return r.line=s,(o=r.push("code_block","code",0)).content=r.getLines(e,s,4+r.blkIndent,!0),o.map=[e,r.line],!0},fence=function(r,e,t,a){var s,o,i,n,l,c,u,p=!1,h=r.bMarks[e]+r.tShift[e],d=r.eMarks[e];if(r.sCount[e]-r.blkIndent>=4)return!1;if(h+3>d)return!1;if(126!==(s=r.src.charCodeAt(h))&&96!==s)return!1;if(l=h,(o=(h=r.skipChars(h,s))-l)<3)return!1;if(u=r.src.slice(l,h),(i=r.src.slice(h,d)).indexOf(String.fromCharCode(s))>=0)return!1;if(a)return!0;for(n=e;!(++n>=t)&&!((h=l=r.bMarks[n]+r.tShift[n])<(d=r.eMarks[n])&&r.sCount[n]<r.blkIndent);)if(r.src.charCodeAt(h)===s&&!(r.sCount[n]-r.blkIndent>=4||(h=r.skipChars(h,s))-l<o||(h=r.skipSpaces(h))<d)){p=!0;break}return o=r.sCount[e],r.line=n+(p?1:0),(c=r.push("fence","code",0)).info=i,c.content=r.getLines(e+1,n,o,!0),c.markup=u,c.map=[e,r.line],!0},isSpace$2=utils.isSpace,blockquote=function(r,e,t,a){var s,o,i,n,l,c,u,p,h,d,g,f,m,b,q,w,k,v,y,_,E=r.lineMax,A=r.bMarks[e]+r.tShift[e],D=r.eMarks[e];if(r.sCount[e]-r.blkIndent>=4)return!1;if(62!==r.src.charCodeAt(A++))return!1;if(a)return!0;for(n=h=r.sCount[e]+A-(r.bMarks[e]+r.tShift[e]),32===r.src.charCodeAt(A)?(A++,n++,h++,s=!1,w=!0):9===r.src.charCodeAt(A)?(w=!0,(r.bsCount[e]+h)%4==3?(A++,n++,h++,s=!1):s=!0):w=!1,d=[r.bMarks[e]],r.bMarks[e]=A;A<D&&(o=r.src.charCodeAt(A),isSpace$2(o));)9===o?h+=4-(h+r.bsCount[e]+(s?1:0))%4:h++,A++;for(g=[r.bsCount[e]],r.bsCount[e]=r.sCount[e]+1+(w?1:0),c=A>=D,b=[r.sCount[e]],r.sCount[e]=h-n,q=[r.tShift[e]],r.tShift[e]=A-r.bMarks[e],v=r.md.block.ruler.getRules("blockquote"),m=r.parentType,r.parentType="blockquote",_=!1,p=e+1;p<t&&(r.sCount[p]<r.blkIndent&&(_=!0),!((A=r.bMarks[p]+r.tShift[p])>=(D=r.eMarks[p])));p++)if(62!==r.src.charCodeAt(A++)||_){if(c)break;for(k=!1,i=0,l=v.length;i<l;i++)if(v[i](r,p,t,!0)){k=!0;break}if(k){r.lineMax=p,0!==r.blkIndent&&(d.push(r.bMarks[p]),g.push(r.bsCount[p]),q.push(r.tShift[p]),b.push(r.sCount[p]),r.sCount[p]-=r.blkIndent);break}d.push(r.bMarks[p]),g.push(r.bsCount[p]),q.push(r.tShift[p]),b.push(r.sCount[p]),r.sCount[p]=-1}else{for(n=h=r.sCount[p]+A-(r.bMarks[p]+r.tShift[p]),32===r.src.charCodeAt(A)?(A++,n++,h++,s=!1,w=!0):9===r.src.charCodeAt(A)?(w=!0,(r.bsCount[p]+h)%4==3?(A++,n++,h++,s=!1):s=!0):w=!1,d.push(r.bMarks[p]),r.bMarks[p]=A;A<D&&(o=r.src.charCodeAt(A),isSpace$2(o));)9===o?h+=4-(h+r.bsCount[p]+(s?1:0))%4:h++,A++;c=A>=D,g.push(r.bsCount[p]),r.bsCount[p]=r.sCount[p]+1+(w?1:0),b.push(r.sCount[p]),r.sCount[p]=h-n,q.push(r.tShift[p]),r.tShift[p]=A-r.bMarks[p]}for(f=r.blkIndent,r.blkIndent=0,(y=r.push("blockquote_open","blockquote",1)).markup=">",y.map=u=[e,0],r.md.block.tokenize(r,e,p),(y=r.push("blockquote_close","blockquote",-1)).markup=">",r.lineMax=E,r.parentType=m,u[1]=r.line,i=0;i<q.length;i++)r.bMarks[i+e]=d[i],r.tShift[i+e]=q[i],r.sCount[i+e]=b[i],r.bsCount[i+e]=g[i];return r.blkIndent=f,!0},isSpace$3=utils.isSpace,hr=function(r,e,t,a){var s,o,i,n,l=r.bMarks[e]+r.tShift[e],c=r.eMarks[e];if(r.sCount[e]-r.blkIndent>=4)return!1;if(42!==(s=r.src.charCodeAt(l++))&&45!==s&&95!==s)return!1;for(o=1;l<c;){if((i=r.src.charCodeAt(l++))!==s&&!isSpace$3(i))return!1;i===s&&o++}return!(o<3)&&(!!a||(r.line=e+1,(n=r.push("hr","hr",0)).map=[e,r.line],n.markup=Array(o+1).join(String.fromCharCode(s)),!0))},isSpace$4=utils.isSpace;function skipBulletListMarker(r,e){var t,a,s,o;return a=r.bMarks[e]+r.tShift[e],s=r.eMarks[e],42!==(t=r.src.charCodeAt(a++))&&45!==t&&43!==t?-1:a<s&&(o=r.src.charCodeAt(a),!isSpace$4(o))?-1:a}function skipOrderedListMarker(r,e){var t,a=r.bMarks[e]+r.tShift[e],s=a,o=r.eMarks[e];if(s+1>=o)return-1;if((t=r.src.charCodeAt(s++))<48||t>57)return-1;for(;;){if(s>=o)return-1;if(!((t=r.src.charCodeAt(s++))>=48&&t<=57)){if(41===t||46===t)break;return-1}if(s-a>=10)return-1}return s<o&&(t=r.src.charCodeAt(s),!isSpace$4(t))?-1:s}function markTightParagraphs(r,e){var t,a,s=r.level+2;for(t=e+2,a=r.tokens.length-2;t<a;t++)r.tokens[t].level===s&&"paragraph_open"===r.tokens[t].type&&(r.tokens[t+2].hidden=!0,r.tokens[t].hidden=!0,t+=2)}var list=function(r,e,t,a){var s,o,i,n,l,c,u,p,h,d,g,f,m,b,q,w,k,v,y,_,E,A,D,x,L,S,C,T,R=!1,N=!0;if(r.sCount[e]-r.blkIndent>=4)return!1;if(a&&"paragraph"===r.parentType&&r.tShift[e]>=r.blkIndent&&(R=!0),(D=skipOrderedListMarker(r,e))>=0){if(u=!0,L=r.bMarks[e]+r.tShift[e],m=Number(r.src.substr(L,D-L-1)),R&&1!==m)return!1}else{if(!((D=skipBulletListMarker(r,e))>=0))return!1;u=!1}if(R&&r.skipSpaces(D)>=r.eMarks[e])return!1;if(f=r.src.charCodeAt(D-1),a)return!0;for(g=r.tokens.length,u?(T=r.push("ordered_list_open","ol",1),1!==m&&(T.attrs=[["start",m]])):T=r.push("bullet_list_open","ul",1),T.map=d=[e,0],T.markup=String.fromCharCode(f),q=e,x=!1,C=r.md.block.ruler.getRules("list"),y=r.parentType,r.parentType="list";q<t;){for(A=D,b=r.eMarks[q],c=w=r.sCount[q]+D-(r.bMarks[e]+r.tShift[e]);A<b;){if(9===(s=r.src.charCodeAt(A)))w+=4-(w+r.bsCount[q])%4;else{if(32!==s)break;w++}A++}if((l=(o=A)>=b?1:w-c)>4&&(l=1),n=c+l,(T=r.push("list_item_open","li",1)).markup=String.fromCharCode(f),T.map=p=[e,0],k=r.blkIndent,E=r.tight,_=r.tShift[e],v=r.sCount[e],r.blkIndent=n,r.tight=!0,r.tShift[e]=o-r.bMarks[e],r.sCount[e]=w,o>=b&&r.isEmpty(e+1)?r.line=Math.min(r.line+2,t):r.md.block.tokenize(r,e,t,!0),r.tight&&!x||(N=!1),x=r.line-e>1&&r.isEmpty(r.line-1),r.blkIndent=k,r.tShift[e]=_,r.sCount[e]=v,r.tight=E,(T=r.push("list_item_close","li",-1)).markup=String.fromCharCode(f),q=e=r.line,p[1]=q,o=r.bMarks[e],q>=t)break;if(r.sCount[q]<r.blkIndent)break;for(S=!1,i=0,h=C.length;i<h;i++)if(C[i](r,q,t,!0)){S=!0;break}if(S)break;if(u){if((D=skipOrderedListMarker(r,q))<0)break}else if((D=skipBulletListMarker(r,q))<0)break;if(f!==r.src.charCodeAt(D-1))break}return(T=u?r.push("ordered_list_close","ol",-1):r.push("bullet_list_close","ul",-1)).markup=String.fromCharCode(f),d[1]=q,r.line=q,r.parentType=y,N&&markTightParagraphs(r,g),!0},normalizeReference=utils.normalizeReference,isSpace$5=utils.isSpace,reference=function(r,e,t,a){var s,o,i,n,l,c,u,p,h,d,g,f,m,b,q,w,k=0,v=r.bMarks[e]+r.tShift[e],y=r.eMarks[e],_=e+1;if(r.sCount[e]-r.blkIndent>=4)return!1;if(91!==r.src.charCodeAt(v))return!1;for(;++v<y;)if(93===r.src.charCodeAt(v)&&92!==r.src.charCodeAt(v-1)){if(v+1===y)return!1;if(58!==r.src.charCodeAt(v+1))return!1;break}for(n=r.lineMax,q=r.md.block.ruler.getRules("reference"),d=r.parentType,r.parentType="reference";_<n&&!r.isEmpty(_);_++)if(!(r.sCount[_]-r.blkIndent>3||r.sCount[_]<0)){for(b=!1,c=0,u=q.length;c<u;c++)if(q[c](r,_,n,!0)){b=!0;break}if(b)break}for(y=(m=r.getLines(e,_,r.blkIndent,!1).trim()).length,v=1;v<y;v++){if(91===(s=m.charCodeAt(v)))return!1;if(93===s){h=v;break}10===s?k++:92===s&&++v<y&&10===m.charCodeAt(v)&&k++}if(h<0||58!==m.charCodeAt(h+1))return!1;for(v=h+2;v<y;v++)if(10===(s=m.charCodeAt(v)))k++;else if(!isSpace$5(s))break;if(!(g=r.md.helpers.parseLinkDestination(m,v,y)).ok)return!1;if(l=r.md.normalizeLink(g.str),!r.md.validateLink(l))return!1;for(o=v=g.pos,i=k+=g.lines,f=v;v<y;v++)if(10===(s=m.charCodeAt(v)))k++;else if(!isSpace$5(s))break;for(g=r.md.helpers.parseLinkTitle(m,v,y),v<y&&f!==v&&g.ok?(w=g.str,v=g.pos,k+=g.lines):(w="",v=o,k=i);v<y&&(s=m.charCodeAt(v),isSpace$5(s));)v++;if(v<y&&10!==m.charCodeAt(v)&&w)for(w="",v=o,k=i;v<y&&(s=m.charCodeAt(v),isSpace$5(s));)v++;return!(v<y&&10!==m.charCodeAt(v))&&(!!(p=normalizeReference(m.slice(1,h)))&&(!!a||(void 0===r.env.references&&(r.env.references={}),void 0===r.env.references[p]&&(r.env.references[p]={title:w,href:l}),r.parentType=d,r.line=e+k+1,!0)))},isSpace$6=utils.isSpace,heading=function(r,e,t,a){var s,o,i,n,l=r.bMarks[e]+r.tShift[e],c=r.eMarks[e];if(r.sCount[e]-r.blkIndent>=4)return!1;if(35!==(s=r.src.charCodeAt(l))||l>=c)return!1;for(o=1,s=r.src.charCodeAt(++l);35===s&&l<c&&o<=6;)o++,s=r.src.charCodeAt(++l);return!(o>6||l<c&&!isSpace$6(s))&&(!!a||(c=r.skipSpacesBack(c,l),(i=r.skipCharsBack(c,35,l))>l&&isSpace$6(r.src.charCodeAt(i-1))&&(c=i),r.line=e+1,(n=r.push("heading_open","h"+String(o),1)).markup="########".slice(0,o),n.map=[e,r.line],(n=r.push("inline","",0)).content=r.src.slice(l,c).trim(),n.map=[e,r.line],n.children=[],(n=r.push("heading_close","h"+String(o),-1)).markup="########".slice(0,o),!0))},lheading=function(r,e,t){var a,s,o,i,n,l,c,u,p,h,d=e+1,g=r.md.block.ruler.getRules("paragraph");if(r.sCount[e]-r.blkIndent>=4)return!1;for(h=r.parentType,r.parentType="paragraph";d<t&&!r.isEmpty(d);d++)if(!(r.sCount[d]-r.blkIndent>3)){if(r.sCount[d]>=r.blkIndent&&(l=r.bMarks[d]+r.tShift[d])<(c=r.eMarks[d])&&(45===(p=r.src.charCodeAt(l))||61===p)&&(l=r.skipChars(l,p),(l=r.skipSpaces(l))>=c)){u=61===p?1:2;break}if(!(r.sCount[d]<0)){for(s=!1,o=0,i=g.length;o<i;o++)if(g[o](r,d,t,!0)){s=!0;break}if(s)break}}return!!u&&(a=r.getLines(e,d,r.blkIndent,!1).trim(),r.line=d+1,(n=r.push("heading_open","h"+String(u),1)).markup=String.fromCharCode(p),n.map=[e,r.line],(n=r.push("inline","",0)).content=a,n.map=[e,r.line-1],n.children=[],(n=r.push("heading_close","h"+String(u),-1)).markup=String.fromCharCode(p),r.parentType=h,!0)},html_blocks=["address","article","aside","base","basefont","blockquote","body","caption","center","col","colgroup","dd","details","dialog","dir","div","dl","dt","fieldset","figcaption","figure","footer","form","frame","frameset","h1","h2","h3","h4","h5","h6","head","header","hr","html","iframe","legend","li","link","main","menu","menuitem","meta","nav","noframes","ol","optgroup","option","p","param","section","source","summary","table","tbody","td","tfoot","th","thead","title","tr","track","ul"],attr_name="[a-zA-Z@_:][a-zA-Z0-9:._-]*",unquoted="[^\"'=<>`\\x00-\\x20]+",single_quoted="'[^']*'",double_quoted='"[^"]*"',attr_value="(?:"+unquoted+"|"+single_quoted+"|"+double_quoted+")",attribute="(?:\\s+"+attr_name+"(?:\\s*=\\s*"+attr_value+")?)",open_tag="<[A-Za-z][A-Za-z0-9\\-]*"+attribute+"*\\s*\\/?>",close_tag="<\\/[A-Za-z][A-Za-z0-9\\-]*\\s*>",comment="\x3c!----\x3e|\x3c!--(?:-?[^>-])(?:-?[^-])*--\x3e",processing="<[?].*?[?]>",declaration="<![A-Z]+\\s+[^>]*>",cdata="<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",HTML_TAG_RE=new RegExp("^(?:"+open_tag+"|"+close_tag+"|"+comment+"|"+processing+"|"+declaration+"|"+cdata+")"),HTML_OPEN_CLOSE_TAG_RE=new RegExp("^(?:"+open_tag+"|"+close_tag+")"),HTML_TAG_RE_1=HTML_TAG_RE,HTML_OPEN_CLOSE_TAG_RE_1=HTML_OPEN_CLOSE_TAG_RE,html_re={HTML_TAG_RE:HTML_TAG_RE_1,HTML_OPEN_CLOSE_TAG_RE:HTML_OPEN_CLOSE_TAG_RE_1},HTML_OPEN_CLOSE_TAG_RE$1=html_re.HTML_OPEN_CLOSE_TAG_RE,HTML_SEQUENCES=[[/^<(script|pre|style)(?=(\s|>|$))/i,/<\/(script|pre|style)>/i,!0],[/^<!--/,/-->/,!0],[/^<\?/,/\?>/,!0],[/^<![A-Z]/,/>/,!0],[/^<!\[CDATA\[/,/\]\]>/,!0],[/^<[A-Z]/,/>/,!0],[/^<\w+\-/,/>/,!0],[new RegExp("^</?("+html_blocks.join("|")+")(?=(\\s|/?>|$))","i"),/^$/,!0],[new RegExp(HTML_OPEN_CLOSE_TAG_RE$1.source+"\\s*$"),/^$/,!1]],html_block=function(r,e,t,a){var s,o,i,n,l=r.bMarks[e]+r.tShift[e],c=r.eMarks[e];if(r.sCount[e]-r.blkIndent>=4)return!1;if(!r.md.options.html)return!1;if(60!==r.src.charCodeAt(l))return!1;for(n=r.src.slice(l,c),s=0;s<HTML_SEQUENCES.length&&!HTML_SEQUENCES[s][0].test(n);s++);if(s===HTML_SEQUENCES.length)return!1;if(a)return HTML_SEQUENCES[s][2];if(o=e+1,!HTML_SEQUENCES[s][1].test(n))for(;o<t&&!(r.sCount[o]<r.blkIndent);o++)if(l=r.bMarks[o]+r.tShift[o],c=r.eMarks[o],n=r.src.slice(l,c),HTML_SEQUENCES[s][1].test(n)){0!==n.length&&o++;break}return r.line=o,(i=r.push("html_block","",0)).map=[e,o],i.content=r.getLines(e,o,r.blkIndent,!0),!0},paragraph=function(r,e){var t,a,s,o,i,n,l=e+1,c=r.md.block.ruler.getRules("paragraph"),u=r.lineMax;for(n=r.parentType,r.parentType="paragraph";l<u&&!r.isEmpty(l);l++)if(!(r.sCount[l]-r.blkIndent>3||r.sCount[l]<0)){for(a=!1,s=0,o=c.length;s<o;s++)if(c[s](r,l,u,!0)){a=!0;break}if(a)break}return t=r.getLines(e,l,r.blkIndent,!1).trim(),r.line=l,(i=r.push("paragraph_open","p",1)).map=[e,r.line],(i=r.push("inline","",0)).content=t,i.map=[e,r.line],i.children=[],i=r.push("paragraph_close","p",-1),r.parentType=n,!0},isSpace$7=utils.isSpace;function StateBlock(r,e,t,a){var s,o,i,n,l,c,u,p;for(this.src=r,this.md=e,this.env=t,this.tokens=a,this.bMarks=[],this.eMarks=[],this.tShift=[],this.sCount=[],this.bsCount=[],this.blkIndent=0,this.line=0,this.lineMax=0,this.tight=!1,this.ddIndent=-1,this.parentType="root",this.level=0,this.result="",p=!1,i=n=c=u=0,l=(o=this.src).length;n<l;n++){if(s=o.charCodeAt(n),!p){if(isSpace$7(s)){c++,9===s?u+=4-u%4:u++;continue}p=!0}10!==s&&n!==l-1||(10!==s&&n++,this.bMarks.push(i),this.eMarks.push(n),this.tShift.push(c),this.sCount.push(u),this.bsCount.push(0),p=!1,c=0,u=0,i=n+1)}this.bMarks.push(o.length),this.eMarks.push(o.length),this.tShift.push(0),this.sCount.push(0),this.bsCount.push(0),this.lineMax=this.bMarks.length-1}StateBlock.prototype.push=function(r,e,t){var a=new token(r,e,t);return a.block=!0,t<0&&this.level--,a.level=this.level,t>0&&this.level++,this.tokens.push(a),a},StateBlock.prototype.isEmpty=function(r){return this.bMarks[r]+this.tShift[r]>=this.eMarks[r]},StateBlock.prototype.skipEmptyLines=function(r){for(var e=this.lineMax;r<e&&!(this.bMarks[r]+this.tShift[r]<this.eMarks[r]);r++);return r},StateBlock.prototype.skipSpaces=function(r){for(var e,t=this.src.length;r<t&&(e=this.src.charCodeAt(r),isSpace$7(e));r++);return r},StateBlock.prototype.skipSpacesBack=function(r,e){if(r<=e)return r;for(;r>e;)if(!isSpace$7(this.src.charCodeAt(--r)))return r+1;return r},StateBlock.prototype.skipChars=function(r,e){for(var t=this.src.length;r<t&&this.src.charCodeAt(r)===e;r++);return r},StateBlock.prototype.skipCharsBack=function(r,e,t){if(r<=t)return r;for(;r>t;)if(e!==this.src.charCodeAt(--r))return r+1;return r},StateBlock.prototype.getLines=function(r,e,t,a){var s,o,i,n,l,c,u,p=r;if(r>=e)return"";for(c=new Array(e-r),s=0;p<e;p++,s++){for(o=0,u=n=this.bMarks[p],l=p+1<e||a?this.eMarks[p]+1:this.eMarks[p];n<l&&o<t;){if(i=this.src.charCodeAt(n),isSpace$7(i))9===i?o+=4-(o+this.bsCount[p])%4:o++;else{if(!(n-u<this.tShift[p]))break;o++}n++}c[s]=o>t?new Array(o-t+1).join(" ")+this.src.slice(n,l):this.src.slice(n,l)}return c.join("")},StateBlock.prototype.Token=token;var state_block=StateBlock,_rules$1=[["table",table,["paragraph","reference"]],["code",code],["fence",fence,["paragraph","reference","blockquote","list"]],["blockquote",blockquote,["paragraph","reference","blockquote","list"]],["hr",hr,["paragraph","reference","blockquote","list"]],["list",list,["paragraph","reference","blockquote"]],["reference",reference],["heading",heading,["paragraph","reference","blockquote"]],["lheading",lheading],["html_block",html_block,["paragraph","reference","blockquote"]],["paragraph",paragraph]];function ParserBlock(){this.ruler=new ruler;for(var r=0;r<_rules$1.length;r++)this.ruler.push(_rules$1[r][0],_rules$1[r][1],{alt:(_rules$1[r][2]||[]).slice()})}ParserBlock.prototype.tokenize=function(r,e,t){for(var a,s=this.ruler.getRules(""),o=s.length,i=e,n=!1,l=r.md.options.maxNesting;i<t&&(r.line=i=r.skipEmptyLines(i),!(i>=t))&&!(r.sCount[i]<r.blkIndent);){if(r.level>=l){r.line=t;break}for(a=0;a<o&&!s[a](r,i,t,!1);a++);r.tight=!n,r.isEmpty(r.line-1)&&(n=!0),(i=r.line)<t&&r.isEmpty(i)&&(n=!0,i++,r.line=i)}},ParserBlock.prototype.parse=function(r,e,t,a){var s;r&&(s=new this.State(r,e,t,a),this.tokenize(s,s.line,s.lineMax))},ParserBlock.prototype.State=state_block;var parser_block=ParserBlock;function isTerminatorChar(r){switch(r){case 10:case 33:case 35:case 36:case 37:case 38:case 42:case 43:case 45:case 58:case 60:case 61:case 62:case 64:case 91:case 92:case 93:case 94:case 95:case 96:case 123:case 125:case 126:return!0;default:return!1}}for(var text=function(r,e){for(var t=r.pos;t<r.posMax&&!isTerminatorChar(r.src.charCodeAt(t));)t++;return t!==r.pos&&(e||(r.pending+=r.src.slice(r.pos,t)),r.pos=t,!0)},isSpace$8=utils.isSpace,newline=function(r,e){var t,a,s=r.pos;if(10!==r.src.charCodeAt(s))return!1;for(t=r.pending.length-1,a=r.posMax,e||(t>=0&&32===r.pending.charCodeAt(t)?t>=1&&32===r.pending.charCodeAt(t-1)?(r.pending=r.pending.replace(/ +$/,""),r.push("hardbreak","br",0)):(r.pending=r.pending.slice(0,-1),r.push("softbreak","br",0)):r.push("softbreak","br",0)),s++;s<a&&isSpace$8(r.src.charCodeAt(s));)s++;return r.pos=s,!0},isSpace$9=utils.isSpace,ESCAPED=[],i=0;i<256;i++)ESCAPED.push(0);"\\!\"#$%&'()*+,./:;<=>?@[]^_`{|}~-".split("").forEach(function(r){ESCAPED[r.charCodeAt(0)]=1});var _escape=function(r,e){var t,a=r.pos,s=r.posMax;if(92!==r.src.charCodeAt(a))return!1;if(++a<s){if((t=r.src.charCodeAt(a))<256&&0!==ESCAPED[t])return e||(r.pending+=r.src[a]),r.pos+=2,!0;if(10===t){for(e||r.push("hardbreak","br",0),a++;a<s&&(t=r.src.charCodeAt(a),isSpace$9(t));)a++;return r.pos=a,!0}}return e||(r.pending+="\\"),r.pos++,!0},backticks=function(r,e){var t,a,s,o,i,n,l=r.pos;if(96!==r.src.charCodeAt(l))return!1;for(t=l,l++,a=r.posMax;l<a&&96===r.src.charCodeAt(l);)l++;for(s=r.src.slice(t,l),o=i=l;-1!==(o=r.src.indexOf("`",i));){for(i=o+1;i<a&&96===r.src.charCodeAt(i);)i++;if(i-o===s.length)return e||((n=r.push("code_inline","code",0)).markup=s,n.content=r.src.slice(l,o).replace(/[ \n]+/g," ").trim()),r.pos=i,!0}return e||(r.pending+=s),r.pos+=s.length,!0},tokenize=function(r,e){var t,a,s,o,i=r.pos,n=r.src.charCodeAt(i);if(e)return!1;if(126!==n)return!1;if(s=(a=r.scanDelims(r.pos,!0)).length,o=String.fromCharCode(n),s<2)return!1;for(s%2&&(r.push("text","",0).content=o,s--),t=0;t<s;t+=2)r.push("text","",0).content=o+o,r.delimiters.push({marker:n,jump:t,token:r.tokens.length-1,level:r.level,end:-1,open:a.can_open,close:a.can_close});return r.pos+=a.length,!0},postProcess=function(r){var e,t,a,s,o,i=[],n=r.delimiters,l=r.delimiters.length;for(e=0;e<l;e++)126===(a=n[e]).marker&&-1!==a.end&&(s=n[a.end],(o=r.tokens[a.token]).type="s_open",o.tag="s",o.nesting=1,o.markup="~~",o.content="",(o=r.tokens[s.token]).type="s_close",o.tag="s",o.nesting=-1,o.markup="~~",o.content="","text"===r.tokens[s.token-1].type&&"~"===r.tokens[s.token-1].content&&i.push(s.token-1));for(;i.length;){for(t=(e=i.pop())+1;t<r.tokens.length&&"s_close"===r.tokens[t].type;)t++;e!==--t&&(o=r.tokens[t],r.tokens[t]=r.tokens[e],r.tokens[e]=o)}},strikethrough={tokenize:tokenize,postProcess:postProcess},tokenize$1=function(r,e){var t,a,s=r.pos,o=r.src.charCodeAt(s);if(e)return!1;if(95!==o&&42!==o)return!1;for(a=r.scanDelims(r.pos,42===o),t=0;t<a.length;t++)r.push("text","",0).content=String.fromCharCode(o),r.delimiters.push({marker:o,length:a.length,jump:t,token:r.tokens.length-1,level:r.level,end:-1,open:a.can_open,close:a.can_close});return r.pos+=a.length,!0},postProcess$1=function(r){var e,t,a,s,o,i,n=r.delimiters;for(e=r.delimiters.length-1;e>=0;e--)95!==(t=n[e]).marker&&42!==t.marker||-1!==t.end&&(a=n[t.end],i=e>0&&n[e-1].end===t.end+1&&n[e-1].token===t.token-1&&n[t.end+1].token===a.token+1&&n[e-1].marker===t.marker,o=String.fromCharCode(t.marker),(s=r.tokens[t.token]).type=i?"strong_open":"em_open",s.tag=i?"strong":"em",s.nesting=1,s.markup=i?o+o:o,s.content="",(s=r.tokens[a.token]).type=i?"strong_close":"em_close",s.tag=i?"strong":"em",s.nesting=-1,s.markup=i?o+o:o,s.content="",i&&(r.tokens[n[e-1].token].content="",r.tokens[n[t.end+1].token].content="",e--))},emphasis={tokenize:tokenize$1,postProcess:postProcess$1},normalizeReference$1=utils.normalizeReference,isSpace$a=utils.isSpace,link=function(r,e){var t,a,s,o,i,n,l,c,u,p="",h=r.pos,d=r.posMax,g=r.pos,f=!0;if(91!==r.src.charCodeAt(r.pos))return!1;if(i=r.pos+1,(o=r.md.helpers.parseLinkLabel(r,r.pos,!0))<0)return!1;if((n=o+1)<d&&40===r.src.charCodeAt(n)){for(f=!1,n++;n<d&&(a=r.src.charCodeAt(n),isSpace$a(a)||10===a);n++);if(n>=d)return!1;for(g=n,(l=r.md.helpers.parseLinkDestination(r.src,n,r.posMax)).ok&&(p=r.md.normalizeLink(l.str),r.md.validateLink(p)?n=l.pos:p=""),g=n;n<d&&(a=r.src.charCodeAt(n),isSpace$a(a)||10===a);n++);if(l=r.md.helpers.parseLinkTitle(r.src,n,r.posMax),n<d&&g!==n&&l.ok)for(u=l.str,n=l.pos;n<d&&(a=r.src.charCodeAt(n),isSpace$a(a)||10===a);n++);else u="";(n>=d||41!==r.src.charCodeAt(n))&&(f=!0),n++}if(f){if(void 0===r.env.references)return!1;if(n<d&&91===r.src.charCodeAt(n)?(g=n+1,(n=r.md.helpers.parseLinkLabel(r,n))>=0?s=r.src.slice(g,n++):n=o+1):n=o+1,s||(s=r.src.slice(i,o)),!(c=r.env.references[normalizeReference$1(s)]))return r.pos=h,!1;p=c.href,u=c.title}return e||(r.pos=i,r.posMax=o,r.push("link_open","a",1).attrs=t=[["href",p]],u&&t.push(["title",u]),r.md.inline.tokenize(r),r.push("link_close","a",-1)),r.pos=n,r.posMax=d,!0},normalizeReference$2=utils.normalizeReference,isSpace$b=utils.isSpace,image$1=function(r,e){var t,a,s,o,i,n,l,c,u,p,h,d,g,f="",m=r.pos,b=r.posMax;if(33!==r.src.charCodeAt(r.pos))return!1;if(91!==r.src.charCodeAt(r.pos+1))return!1;if(n=r.pos+2,(i=r.md.helpers.parseLinkLabel(r,r.pos+1,!1))<0)return!1;if((l=i+1)<b&&40===r.src.charCodeAt(l)){for(l++;l<b&&(a=r.src.charCodeAt(l),isSpace$b(a)||10===a);l++);if(l>=b)return!1;for(g=l,(u=r.md.helpers.parseLinkDestination(r.src,l,r.posMax)).ok&&(f=r.md.normalizeLink(u.str),r.md.validateLink(f)?l=u.pos:f=""),g=l;l<b&&(a=r.src.charCodeAt(l),isSpace$b(a)||10===a);l++);if(u=r.md.helpers.parseLinkTitle(r.src,l,r.posMax),l<b&&g!==l&&u.ok)for(p=u.str,l=u.pos;l<b&&(a=r.src.charCodeAt(l),isSpace$b(a)||10===a);l++);else p="";if(l>=b||41!==r.src.charCodeAt(l))return r.pos=m,!1;l++}else{if(void 0===r.env.references)return!1;if(l<b&&91===r.src.charCodeAt(l)?(g=l+1,(l=r.md.helpers.parseLinkLabel(r,l))>=0?o=r.src.slice(g,l++):l=i+1):l=i+1,o||(o=r.src.slice(n,i)),!(c=r.env.references[normalizeReference$2(o)]))return r.pos=m,!1;f=c.href,p=c.title}return e||(s=r.src.slice(n,i),r.md.inline.parse(s,r.md,r.env,d=[]),(h=r.push("image","img",0)).attrs=t=[["src",f],["alt",""]],h.children=d,h.content=s,p&&t.push(["title",p])),r.pos=l,r.posMax=b,!0},EMAIL_RE=/^<([a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/,AUTOLINK_RE=/^<([a-zA-Z][a-zA-Z0-9+.\-]{1,31}):([^<>\x00-\x20]*)>/,autolink=function(r,e){var t,a,s,o,i,n,l=r.pos;return 60===r.src.charCodeAt(l)&&(!((t=r.src.slice(l)).indexOf(">")<0)&&(AUTOLINK_RE.test(t)?(o=(a=t.match(AUTOLINK_RE))[0].slice(1,-1),i=r.md.normalizeLink(o),!!r.md.validateLink(i)&&(e||((n=r.push("link_open","a",1)).attrs=[["href",i]],n.markup="autolink",n.info="auto",(n=r.push("text","",0)).content=r.md.normalizeLinkText(o),(n=r.push("link_close","a",-1)).markup="autolink",n.info="auto"),r.pos+=a[0].length,!0)):!!EMAIL_RE.test(t)&&(o=(s=t.match(EMAIL_RE))[0].slice(1,-1),i=r.md.normalizeLink("mailto:"+o),!!r.md.validateLink(i)&&(e||((n=r.push("link_open","a",1)).attrs=[["href",i]],n.markup="autolink",n.info="auto",(n=r.push("text","",0)).content=r.md.normalizeLinkText(o),(n=r.push("link_close","a",-1)).markup="autolink",n.info="auto"),r.pos+=s[0].length,!0))))},HTML_TAG_RE$1=html_re.HTML_TAG_RE;function isLetter(r){var e=32|r;return e>=97&&e<=122}var html_inline=function(r,e){var t,a,s,o=r.pos;return!!r.md.options.html&&(s=r.posMax,!(60!==r.src.charCodeAt(o)||o+2>=s)&&(!(33!==(t=r.src.charCodeAt(o+1))&&63!==t&&47!==t&&!isLetter(t))&&(!!(a=r.src.slice(o).match(HTML_TAG_RE$1))&&(e||(r.push("html_inline","",0).content=r.src.slice(o,o+a[0].length)),r.pos+=a[0].length,!0))))},has=utils.has,isValidEntityCode=utils.isValidEntityCode,fromCodePoint=utils.fromCodePoint,DIGITAL_RE=/^&#((?:x[a-f0-9]{1,8}|[0-9]{1,8}));/i,NAMED_RE=/^&([a-z][a-z0-9]{1,31});/i,entity=function(r,e){var t,a,s=r.pos,o=r.posMax;if(38!==r.src.charCodeAt(s))return!1;if(s+1<o)if(35===r.src.charCodeAt(s+1)){if(a=r.src.slice(s).match(DIGITAL_RE))return e||(t="x"===a[1][0].toLowerCase()?parseInt(a[1].slice(1),16):parseInt(a[1],10),r.pending+=isValidEntityCode(t)?fromCodePoint(t):fromCodePoint(65533)),r.pos+=a[0].length,!0}else if((a=r.src.slice(s).match(NAMED_RE))&&has(entities$2,a[1]))return e||(r.pending+=entities$2[a[1]]),r.pos+=a[0].length,!0;return e||(r.pending+="&"),r.pos++,!0},balance_pairs=function(r){var e,t,a,s,o=r.delimiters,i=r.delimiters.length;for(e=0;e<i;e++)if((a=o[e]).close)for(t=e-a.jump-1;t>=0;){if((s=o[t]).open&&s.marker===a.marker&&s.end<0&&s.level===a.level)if(!((s.close||a.open)&&void 0!==s.length&&void 0!==a.length&&(s.length+a.length)%3==0)){a.jump=e-t,a.open=!1,s.end=e,s.jump=0;break}t-=s.jump+1}},text_collapse=function(r){var e,t,a=0,s=r.tokens,o=r.tokens.length;for(e=t=0;e<o;e++)a+=s[e].nesting,s[e].level=a,"text"===s[e].type&&e+1<o&&"text"===s[e+1].type?s[e+1].content=s[e].content+s[e+1].content:(e!==t&&(s[t]=s[e]),t++);e!==t&&(s.length=t)},isWhiteSpace$1=utils.isWhiteSpace,isPunctChar$1=utils.isPunctChar,isMdAsciiPunct$1=utils.isMdAsciiPunct;function StateInline(r,e,t,a){this.src=r,this.env=t,this.md=e,this.tokens=a,this.pos=0,this.posMax=this.src.length,this.level=0,this.pending="",this.pendingLevel=0,this.cache={},this.delimiters=[]}StateInline.prototype.pushPending=function(){var r=new token("text","",0);return r.content=this.pending,r.level=this.pendingLevel,this.tokens.push(r),this.pending="",r},StateInline.prototype.push=function(r,e,t){this.pending&&this.pushPending();var a=new token(r,e,t);return t<0&&this.level--,a.level=this.level,t>0&&this.level++,this.pendingLevel=this.level,this.tokens.push(a),a},StateInline.prototype.scanDelims=function(r,e){var t,a,s,o,i,n,l,c,u,p=r,h=!0,d=!0,g=this.posMax,f=this.src.charCodeAt(r);for(t=r>0?this.src.charCodeAt(r-1):32;p<g&&this.src.charCodeAt(p)===f;)p++;return s=p-r,a=p<g?this.src.charCodeAt(p):32,l=isMdAsciiPunct$1(t)||isPunctChar$1(String.fromCharCode(t)),u=isMdAsciiPunct$1(a)||isPunctChar$1(String.fromCharCode(a)),n=isWhiteSpace$1(t),(c=isWhiteSpace$1(a))?h=!1:u&&(n||l||(h=!1)),n?d=!1:l&&(c||u||(d=!1)),e?(o=h,i=d):(o=h&&(!d||l),i=d&&(!h||u)),{can_open:o,can_close:i,length:s}},StateInline.prototype.Token=token;var state_inline=StateInline,_rules$2=[["text",text],["newline",newline],["escape",_escape],["backticks",backticks],["strikethrough",strikethrough.tokenize],["emphasis",emphasis.tokenize],["link",link],["image",image$1],["autolink",autolink],["html_inline",html_inline],["entity",entity]],_rules2=[["balance_pairs",balance_pairs],["strikethrough",strikethrough.postProcess],["emphasis",emphasis.postProcess],["text_collapse",text_collapse]];function ParserInline(){var r;for(this.ruler=new ruler,r=0;r<_rules$2.length;r++)this.ruler.push(_rules$2[r][0],_rules$2[r][1]);for(this.ruler2=new ruler,r=0;r<_rules2.length;r++)this.ruler2.push(_rules2[r][0],_rules2[r][1])}ParserInline.prototype.skipToken=function(r){var e,t,a=r.pos,s=this.ruler.getRules(""),o=s.length,i=r.md.options.maxNesting,n=r.cache;if(void 0===n[a]){if(r.level<i)for(t=0;t<o&&(r.level++,e=s[t](r,!0),r.level--,!e);t++);else r.pos=r.posMax;e||r.pos++,n[a]=r.pos}else r.pos=n[a]},ParserInline.prototype.tokenize=function(r){for(var e,t,a=this.ruler.getRules(""),s=a.length,o=r.posMax,i=r.md.options.maxNesting;r.pos<o;){if(r.level<i)for(t=0;t<s&&!(e=a[t](r,!1));t++);if(e){if(r.pos>=o)break}else r.pending+=r.src[r.pos++]}r.pending&&r.pushPending()},ParserInline.prototype.parse=function(r,e,t,a){var s,o,i,n=new this.State(r,e,t,a);for(this.tokenize(n),i=(o=this.ruler2.getRules("")).length,s=0;s<i;s++)o[s](n)},ParserInline.prototype.State=state_inline;var parser_inline=ParserInline,re=function(r){var e={};e.src_Any=regex$1.source,e.src_Cc=regex$2.source,e.src_Z=regex$4.source,e.src_P=regex.source,e.src_ZPCc=[e.src_Z,e.src_P,e.src_Cc].join("|"),e.src_ZCc=[e.src_Z,e.src_Cc].join("|");return e.src_pseudo_letter="(?:(?![><｜]|"+e.src_ZPCc+")"+e.src_Any+")",e.src_ip4="(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)",e.src_auth="(?:(?:(?!"+e.src_ZCc+"|[@/\\[\\]()]).)+@)?",e.src_port="(?::(?:6(?:[0-4]\\d{3}|5(?:[0-4]\\d{2}|5(?:[0-2]\\d|3[0-5])))|[1-5]?\\d{1,4}))?",e.src_host_terminator="(?=$|[><｜]|"+e.src_ZPCc+")(?!-|_|:\\d|\\.-|\\.(?!$|"+e.src_ZPCc+"))",e.src_path="(?:[/?#](?:(?!"+e.src_ZCc+"|[><｜]|[()[\\]{}.,\"'?!\\-]).|\\[(?:(?!"+e.src_ZCc+"|\\]).)*\\]|\\((?:(?!"+e.src_ZCc+"|[)]).)*\\)|\\{(?:(?!"+e.src_ZCc+'|[}]).)*\\}|\\"(?:(?!'+e.src_ZCc+'|["]).)+\\"|\\\'(?:(?!'+e.src_ZCc+"|[']).)+\\'|\\'(?="+e.src_pseudo_letter+"|[-]).|\\.{2,3}[a-zA-Z0-9%/]|\\.(?!"+e.src_ZCc+"|[.]).|"+(r&&r["---"]?"\\-(?!--(?:[^-]|$))(?:-*)|":"\\-+|")+"\\,(?!"+e.src_ZCc+").|\\!(?!"+e.src_ZCc+"|[!]).|\\?(?!"+e.src_ZCc+"|[?]).)+|\\/)?",e.src_email_name='[\\-;:&=\\+\\$,\\"\\.a-zA-Z0-9_]+',e.src_xn="xn--[a-z0-9\\-]{1,59}",e.src_domain_root="(?:"+e.src_xn+"|"+e.src_pseudo_letter+"{1,63})",e.src_domain="(?:"+e.src_xn+"|(?:"+e.src_pseudo_letter+")|(?:"+e.src_pseudo_letter+"(?:-|"+e.src_pseudo_letter+"){0,61}"+e.src_pseudo_letter+"))",e.src_host="(?:(?:(?:(?:"+e.src_domain+")\\.)*"+e.src_domain+"))",e.tpl_host_fuzzy="(?:"+e.src_ip4+"|(?:(?:(?:"+e.src_domain+")\\.)+(?:%TLDS%)))",e.tpl_host_no_ip_fuzzy="(?:(?:(?:"+e.src_domain+")\\.)+(?:%TLDS%))",e.src_host_strict=e.src_host+e.src_host_terminator,e.tpl_host_fuzzy_strict=e.tpl_host_fuzzy+e.src_host_terminator,e.src_host_port_strict=e.src_host+e.src_port+e.src_host_terminator,e.tpl_host_port_fuzzy_strict=e.tpl_host_fuzzy+e.src_port+e.src_host_terminator,e.tpl_host_port_no_ip_fuzzy_strict=e.tpl_host_no_ip_fuzzy+e.src_port+e.src_host_terminator,e.tpl_host_fuzzy_test="localhost|www\\.|\\.\\d{1,3}\\.|(?:\\.(?:%TLDS%)(?:"+e.src_ZPCc+"|>|$))",e.tpl_email_fuzzy="(^|[><｜]|\\(|"+e.src_ZCc+")("+e.src_email_name+"@"+e.tpl_host_fuzzy_strict+")",e.tpl_link_fuzzy="(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|"+e.src_ZPCc+"))((?![$+<=>^`|｜])"+e.tpl_host_port_fuzzy_strict+e.src_path+")",e.tpl_link_no_ip_fuzzy="(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|"+e.src_ZPCc+"))((?![$+<=>^`|｜])"+e.tpl_host_port_no_ip_fuzzy_strict+e.src_path+")",e};function assign$1(r){return Array.prototype.slice.call(arguments,1).forEach(function(e){e&&Object.keys(e).forEach(function(t){r[t]=e[t]})}),r}function _class(r){return Object.prototype.toString.call(r)}function isString(r){return"[object String]"===_class(r)}function isObject(r){return"[object Object]"===_class(r)}function isRegExp(r){return"[object RegExp]"===_class(r)}function isFunction(r){return"[object Function]"===_class(r)}function escapeRE(r){return r.replace(/[.?*+^$[\]\\(){}|-]/g,"\\$&")}var defaultOptions={fuzzyLink:!0,fuzzyEmail:!0,fuzzyIP:!1};function isOptionsObj(r){return Object.keys(r||{}).reduce(function(r,e){return r||defaultOptions.hasOwnProperty(e)},!1)}var defaultSchemas={"http:":{validate:function(r,e,t){var a=r.slice(e);return t.re.http||(t.re.http=new RegExp("^\\/\\/"+t.re.src_auth+t.re.src_host_port_strict+t.re.src_path,"i")),t.re.http.test(a)?a.match(t.re.http)[0].length:0}},"https:":"http:","ftp:":"http:","//":{validate:function(r,e,t){var a=r.slice(e);return t.re.no_http||(t.re.no_http=new RegExp("^"+t.re.src_auth+"(?:localhost|(?:(?:"+t.re.src_domain+")\\.)+"+t.re.src_domain_root+")"+t.re.src_port+t.re.src_host_terminator+t.re.src_path,"i")),t.re.no_http.test(a)?e>=3&&":"===r[e-3]?0:e>=3&&"/"===r[e-3]?0:a.match(t.re.no_http)[0].length:0}},"mailto:":{validate:function(r,e,t){var a=r.slice(e);return t.re.mailto||(t.re.mailto=new RegExp("^"+t.re.src_email_name+"@"+t.re.src_host_strict,"i")),t.re.mailto.test(a)?a.match(t.re.mailto)[0].length:0}}},tlds_2ch_src_re="a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]",tlds_default="biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф".split("|");function resetScanCache(r){r.__index__=-1,r.__text_cache__=""}function createValidator(r){return function(e,t){var a=e.slice(t);return r.test(a)?a.match(r)[0].length:0}}function createNormalizer(){return function(r,e){e.normalize(r)}}function compile(r){var e=r.re=re(r.__opts__),t=r.__tlds__.slice();function a(r){return r.replace("%TLDS%",e.src_tlds)}r.onCompile(),r.__tlds_replaced__||t.push(tlds_2ch_src_re),t.push(e.src_xn),e.src_tlds=t.join("|"),e.email_fuzzy=RegExp(a(e.tpl_email_fuzzy),"i"),e.link_fuzzy=RegExp(a(e.tpl_link_fuzzy),"i"),e.link_no_ip_fuzzy=RegExp(a(e.tpl_link_no_ip_fuzzy),"i"),e.host_fuzzy_test=RegExp(a(e.tpl_host_fuzzy_test),"i");var s=[];function o(r,e){throw new Error('(LinkifyIt) Invalid schema "'+r+'": '+e)}r.__compiled__={},Object.keys(r.__schemas__).forEach(function(e){var t=r.__schemas__[e];if(null!==t){var a={validate:null,link:null};if(r.__compiled__[e]=a,isObject(t))return isRegExp(t.validate)?a.validate=createValidator(t.validate):isFunction(t.validate)?a.validate=t.validate:o(e,t),void(isFunction(t.normalize)?a.normalize=t.normalize:t.normalize?o(e,t):a.normalize=createNormalizer());isString(t)?s.push(e):o(e,t)}}),s.forEach(function(e){r.__compiled__[r.__schemas__[e]]&&(r.__compiled__[e].validate=r.__compiled__[r.__schemas__[e]].validate,r.__compiled__[e].normalize=r.__compiled__[r.__schemas__[e]].normalize)}),r.__compiled__[""]={validate:null,normalize:createNormalizer()};var i=Object.keys(r.__compiled__).filter(function(e){return e.length>0&&r.__compiled__[e]}).map(escapeRE).join("|");r.re.schema_test=RegExp("(^|(?!_)(?:[><｜]|"+e.src_ZPCc+"))("+i+")","i"),r.re.schema_search=RegExp("(^|(?!_)(?:[><｜]|"+e.src_ZPCc+"))("+i+")","ig"),r.re.pretest=RegExp("("+r.re.schema_test.source+")|("+r.re.host_fuzzy_test.source+")|@","i"),resetScanCache(r)}function Match(r,e){var t=r.__index__,a=r.__last_index__,s=r.__text_cache__.slice(t,a);this.schema=r.__schema__.toLowerCase(),this.index=t+e,this.lastIndex=a+e,this.raw=s,this.text=s,this.url=s}function createMatch(r,e){var t=new Match(r,e);return r.__compiled__[t.schema].normalize(t,r),t}function LinkifyIt(r,e){if(!(this instanceof LinkifyIt))return new LinkifyIt(r,e);e||isOptionsObj(r)&&(e=r,r={}),this.__opts__=assign$1({},defaultOptions,e),this.__index__=-1,this.__last_index__=-1,this.__schema__="",this.__text_cache__="",this.__schemas__=assign$1({},defaultSchemas,r),this.__compiled__={},this.__tlds__=tlds_default,this.__tlds_replaced__=!1,this.re={},compile(this)}LinkifyIt.prototype.add=function(r,e){return this.__schemas__[r]=e,compile(this),this},LinkifyIt.prototype.set=function(r){return this.__opts__=assign$1(this.__opts__,r),this},LinkifyIt.prototype.test=function(r){if(this.__text_cache__=r,this.__index__=-1,!r.length)return!1;var e,t,a,s,o,i,n,l;if(this.re.schema_test.test(r))for((n=this.re.schema_search).lastIndex=0;null!==(e=n.exec(r));)if(s=this.testSchemaAt(r,e[2],n.lastIndex)){this.__schema__=e[2],this.__index__=e.index+e[1].length,this.__last_index__=e.index+e[0].length+s;break}return this.__opts__.fuzzyLink&&this.__compiled__["http:"]&&(l=r.search(this.re.host_fuzzy_test))>=0&&(this.__index__<0||l<this.__index__)&&null!==(t=r.match(this.__opts__.fuzzyIP?this.re.link_fuzzy:this.re.link_no_ip_fuzzy))&&(o=t.index+t[1].length,(this.__index__<0||o<this.__index__)&&(this.__schema__="",this.__index__=o,this.__last_index__=t.index+t[0].length)),this.__opts__.fuzzyEmail&&this.__compiled__["mailto:"]&&r.indexOf("@")>=0&&null!==(a=r.match(this.re.email_fuzzy))&&(o=a.index+a[1].length,i=a.index+a[0].length,(this.__index__<0||o<this.__index__||o===this.__index__&&i>this.__last_index__)&&(this.__schema__="mailto:",this.__index__=o,this.__last_index__=i)),this.__index__>=0},LinkifyIt.prototype.pretest=function(r){return this.re.pretest.test(r)},LinkifyIt.prototype.testSchemaAt=function(r,e,t){return this.__compiled__[e.toLowerCase()]?this.__compiled__[e.toLowerCase()].validate(r,t,this):0},LinkifyIt.prototype.match=function(r){var e=0,t=[];this.__index__>=0&&this.__text_cache__===r&&(t.push(createMatch(this,e)),e=this.__last_index__);for(var a=e?r.slice(e):r;this.test(a);)t.push(createMatch(this,e)),a=a.slice(this.__last_index__),e+=this.__last_index__;return t.length?t:null},LinkifyIt.prototype.tlds=function(r,e){return r=Array.isArray(r)?r:[r],e?(this.__tlds__=this.__tlds__.concat(r).sort().filter(function(r,e,t){return r!==t[e-1]}).reverse(),compile(this),this):(this.__tlds__=r.slice(),this.__tlds_replaced__=!0,compile(this),this)},LinkifyIt.prototype.normalize=function(r){r.schema||(r.url="http://"+r.url),"mailto:"!==r.schema||/^mailto:/i.test(r.url)||(r.url="mailto:"+r.url)},LinkifyIt.prototype.onCompile=function(){};var linkifyIt=LinkifyIt,_default={options:{html:!1,xhtmlOut:!1,breaks:!1,langPrefix:"language-",linkify:!1,typographer:!1,quotes:"“”‘’",highlight:null,maxNesting:100},components:{core:{},block:{},inline:{}}},zero={options:{html:!1,xhtmlOut:!1,breaks:!1,langPrefix:"language-",linkify:!1,typographer:!1,quotes:"“”‘’",highlight:null,maxNesting:20},components:{core:{rules:["normalize","block","inline"]},block:{rules:["paragraph"]},inline:{rules:["text"],rules2:["balance_pairs","text_collapse"]}}},commonmark={options:{html:!0,xhtmlOut:!0,breaks:!1,langPrefix:"language-",linkify:!1,typographer:!1,quotes:"“”‘’",highlight:null,maxNesting:20},components:{core:{rules:["normalize","block","inline"]},block:{rules:["blockquote","code","fence","heading","hr","html_block","lheading","list","reference","paragraph"]},inline:{rules:["autolink","backticks","emphasis","entity","escape","html_inline","image","link","newline","text"],rules2:["balance_pairs","emphasis","text_collapse"]}}},config={default:_default,zero:zero,commonmark:commonmark},BAD_PROTO_RE=/^(vbscript|javascript|file|data):/,GOOD_DATA_RE=/^data:image\/(gif|png|jpeg|webp);/;function validateLink(r){var e=r.trim().toLowerCase();return!BAD_PROTO_RE.test(e)||!!GOOD_DATA_RE.test(e)}var RECODE_HOSTNAME_FOR=["http:","https:","mailto:"];function normalizeLink(r){var e=mdurl.parse(r,!0);if(e.hostname&&(!e.protocol||RECODE_HOSTNAME_FOR.indexOf(e.protocol)>=0))try{e.hostname=punycode.toASCII(e.hostname)}catch(r){}return mdurl.encode(mdurl.format(e))}function normalizeLinkText(r){var e=mdurl.parse(r,!0);if(e.hostname&&(!e.protocol||RECODE_HOSTNAME_FOR.indexOf(e.protocol)>=0))try{e.hostname=punycode.toUnicode(e.hostname)}catch(r){}return mdurl.decode(mdurl.format(e))}function MarkdownIt(r,e){if(!(this instanceof MarkdownIt))return new MarkdownIt(r,e);e||utils.isString(r)||(e=r||{},r="default"),this.inline=new parser_inline,this.block=new parser_block,this.core=new parser_core,this.renderer=new renderer,this.linkify=new linkifyIt,this.validateLink=validateLink,this.normalizeLink=normalizeLink,this.normalizeLinkText=normalizeLinkText,this.utils=utils,this.helpers=utils.assign({},helpers),this.options={},this.configure(r),e&&this.set(e)}MarkdownIt.prototype.set=function(r){return utils.assign(this.options,r),this},MarkdownIt.prototype.configure=function(r){var e,t=this;if(utils.isString(r)&&!(r=config[e=r]))throw new Error('Wrong `markdown-it` preset "'+e+'", check name');if(!r)throw new Error("Wrong `markdown-it` preset, can't be empty");return r.options&&t.set(r.options),r.components&&Object.keys(r.components).forEach(function(e){r.components[e].rules&&t[e].ruler.enableOnly(r.components[e].rules),r.components[e].rules2&&t[e].ruler2.enableOnly(r.components[e].rules2)}),this},MarkdownIt.prototype.enable=function(r,e){var t=[];Array.isArray(r)||(r=[r]),["core","block","inline"].forEach(function(e){t=t.concat(this[e].ruler.enable(r,!0))},this),t=t.concat(this.inline.ruler2.enable(r,!0));var a=r.filter(function(r){return t.indexOf(r)<0});if(a.length&&!e)throw new Error("MarkdownIt. Failed to enable unknown rule(s): "+a);return this},MarkdownIt.prototype.disable=function(r,e){var t=[];Array.isArray(r)||(r=[r]),["core","block","inline"].forEach(function(e){t=t.concat(this[e].ruler.disable(r,!0))},this),t=t.concat(this.inline.ruler2.disable(r,!0));var a=r.filter(function(r){return t.indexOf(r)<0});if(a.length&&!e)throw new Error("MarkdownIt. Failed to disable unknown rule(s): "+a);return this},MarkdownIt.prototype.use=function(r){var e=[this].concat(Array.prototype.slice.call(arguments,1));return r.apply(r,e),this},MarkdownIt.prototype.parse=function(r,e){if("string"!=typeof r)throw new Error("Input data should be a String");var t=new this.core.State(r,this,e);return this.core.process(t),t.tokens},MarkdownIt.prototype.render=function(r,e){return e=e||{},this.renderer.render(this.parse(r,e),this.options,e)},MarkdownIt.prototype.parseInline=function(r,e){var t=new this.core.State(r,this,e);return t.inlineMode=!0,this.core.process(t),t.tokens},MarkdownIt.prototype.renderInline=function(r,e){return e=e||{},this.renderer.render(this.parseInline(r,e),this.options,e)};var lib=MarkdownIt;lib.Token=token,module.exports=lib;
