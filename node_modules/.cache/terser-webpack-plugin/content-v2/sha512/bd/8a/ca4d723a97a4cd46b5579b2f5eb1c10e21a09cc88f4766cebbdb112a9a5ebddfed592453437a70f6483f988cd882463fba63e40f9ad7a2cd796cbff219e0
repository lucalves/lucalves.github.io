{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{86:function(e,t,a){\"use strict\";a.r(t);var o=a(1),n=function(e){var t,a,o,n,i=(n=void 0,{attributes:{slug:\"como-adicionar-funcionamento-ao-botao-voltar-no-flutter\",title:\"Como adicionar funcionamento ao botão ‘voltar’ no Flutter\",layout:t=\"post\",date:\"2019-10-10 09:00:00\",tags:[a=\"flutter\",o=\"development\"],createdAt:new Date(15707088e5),updatedAt:new Date(1570708399290),type:t,permalink:\"/posts/como-adicionar-funcionamento-ao-botao-voltar-no-flutter\",assets:{}},internal:n,contentType:\"markdown\",content:n,markdownHeadings:[{text:\"Antes de tudo…\",slug:\"antes-de-tudo…\",level:1},{text:\"Pondo a mão na massa\",slug:\"pondo-a-mão-na-massa\",level:1}],excerpt:\"<p>Construir um layout utilizando Flutter é relativamente simples, tendo a noção da linguagem e da estrutura de desenvolvimento, que é basicamente composta por Widgets, um aninhando ao outro.</p>\\n\",tags:[{name:a,permalink:\"/tags/flutter\"},{name:o,permalink:\"/tags/development\"}]}),r=e.options.beforeCreate||[];e.options.beforeCreate=[function(){this.$page=i}].concat(r);[\"layout\",\"transition\"].forEach(function(t){var a=e.options.PageComponent;a&&(e.options[t]=a[t]),void 0===e.options[t]&&(e.options[t]=i.attributes[t])}),e.options.name=\"page-wrapper-\"+i.attributes.slug.replace(/[^0-9a-z\\-]/i,\"-\")},i=Object(o.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a(\"layout-manager\",[a(\"p\",[e._v(\"Construir um layout utilizando Flutter é relativamente simples, tendo a noção da linguagem e da estrutura de desenvolvimento, que é basicamente composta por Widgets, um aninhando ao outro.\")]),e._v(\" \"),a(\"p\",[e._v(\"Porém, volta e meia necessitamos de algo mais específico, e neste caso trataremos de como adicionar funcionalidade ao botão 'voltar' no flutter.\")]),e._v(\" \"),a(\"p\",[e._v(\"Nesse exemplo iremos atribuir a apresentação de um Dialog ao clicar no botão, e tendo como resultado o seguinte:\")]),e._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://cdn-images-1.medium.com/max/800/1*6tgpgMVCnnHdhYBZf9tCqw.gif\",alt:\"Resultado-01\"}})]),e._v(\" \"),a(\"h1\",{attrs:{id:\"antes-de-tudo…\"}},[e._v(\"Antes de tudo…\")]),e._v(\" \"),a(\"p\",[e._v(\"A criação deste artigo foi baseada na documentação oficial do Flutter, onde a mesma pode ser conferida aqui. Os termos e os códigos descritos aqui foram escritos pensados em uma forma que o entendimento do assunto fique o mais simples possível, ao contrário de alguns artigos no Medium que incluem muito código e dificulta o entendimento.\")]),e._v(\" \"),a(\"p\",[e._v(\"Trataremos da utilização da classe WillPopScope, que nos proporcionará o retorno ao clicar no botão de voltar. Você pode passar uma função de retorno de chamada que será chamada quando o botão foi clicado. Basta executar as tarefas a serem concluídas e depois retornar true.\")]),e._v(\" \"),a(\"h1\",{attrs:{id:\"pondo-a-mão-na-massa\"}},[e._v(\"Pondo a mão na massa\")]),e._v(\" \"),a(\"p\",[e._v(\"Nossa aplicação será composta de apenas duas telas, a tela principal gerada pelo flutter (main.dart) e uma segunda tela que criaremos e nomearemos de segunda_activity.dart.\")]),e._v(\" \"),a(\"p\",[e._v(\"Nesse exemplo, foi criado um projeto com o nome de funcionamento_voltar, mas pode escolher qualquer nome para o projeto. Foram deletados todos os comentários da classe main.dart, do código inicial do flutter e deixei apenas a estrutura seguinte:\")]),e._v(\" \"),a(\"div\",{pre:!0,attrs:{class:\"saber-highlight\",\"data-lang\":\"\"}},[a(\"pre\",{pre:!0,attrs:{class:\"saber-highlight-code language-text\"}},[a(\"code\",{pre:!0,attrs:{class:\"language-text\"}},[e._v(\"import 'package:flutter/material.dart';\\nimport 'SegundaActivity.dart';\\n\\nvoid main() => runApp(MyApp());\\n\\nclass MyApp extends StatelessWidget {\\n  @override\\n  Widget build(BuildContext context) {\\n    return MaterialApp(\\n      title: 'Funcionamento do botão voltar',\\n      theme: ThemeData(\\n        primarySwatch: Colors.blue,\\n      ),\\n      home: MyHomePage(title: 'Funcionamento do botão voltar'),\\n    );\\n  }\\n}\\n\\nclass MyHomePage extends StatefulWidget {\\n  MyHomePage({Key key, this.title}) : super(key: key);\\n  final String title;\\n\\n  @override\\n  _MyHomePageState createState() => _MyHomePageState();\\n}\\n\\nclass _MyHomePageState extends State<MyHomePage> {\\n\\n  @override\\n  Widget build(BuildContext context) {\\n    return Scaffold(\\n      appBar: AppBar(\\n        title: Text(widget.title),\\n      ),\\n      body: Center(\\n        child: Column(\\n          mainAxisAlignment: MainAxisAlignment.center,\\n          children: <Widget>[\\n            Text(\\n              'Avançar para segunda tela:\\\\n',\\n              style: TextStyle(\\n                fontSize: 16.0,\\n              ),\\n            ),\\n            RaisedButton(\\n              onPressed: (){\\n                Navigator.push(\\n                  context,\\n                  MaterialPageRoute(builder: (context) => SegundaActivity()),\\n                );\\n              },\\n              color: Colors.blue,\\n              textColor: Colors.white,\\n              child: Text ('Clique aqui'),\\n            )\\n          ],\\n        ),\\n      ),\\n    );\\n  }\\n}\")])])]),a(\"p\",[e._v(\"Após isso, realizaremos a criação da segunda tela, no qual será denominada de segunda_activity.dart, e nessa será adicionada o método _onBackPressed, para retornar no nosso retorno do botão voltar.\")]),e._v(\" \"),a(\"p\",[e._v(\"A classe ficará dessa forma:\")]),e._v(\" \"),a(\"div\",{pre:!0,attrs:{class:\"saber-highlight\",\"data-lang\":\"\"}},[a(\"pre\",{pre:!0,attrs:{class:\"saber-highlight-code language-text\"}},[a(\"code\",{pre:!0,attrs:{class:\"language-text\"}},[e._v(\"import 'package:flutter/material.dart';\\nimport 'main.dart';\\n\\nvoid main() => runApp(SegundaActivity());\\n\\nclass SegundaActivity extends StatefulWidget {\\n  @override\\n  _SegundaActivityState createState() => _SegundaActivityState();\\n}\\n\\nclass _SegundaActivityState extends State<SegundaActivity> {\\n  @override\\n  Widget build(BuildContext context) {\\n    return WillPopScope(\\n      onWillPop: _onBackPressed,\\n      child: Scaffold(\\n        appBar: AppBar(\\n          title: Text('Funcionamento do botão voltar'),\\n        ),\\n        body: Center(\\n          child: Column(\\n            mainAxisAlignment: MainAxisAlignment.center,\\n            children: <Widget>[\\n              Text(\\n                'Clique no botão voltar!',\\n                style: TextStyle(\\n                  fontSize: 16.0,\\n                ),\\n              ),\\n            ],\\n          ),\\n        ),\\n      ),\\n    );\\n  }\\n\\n  Future<bool> _onBackPressed() {\\n    return showDialog(\\n      context: context,\\n      builder: (context) => new AlertDialog(\\n        title: new Text('Você tem certeza?'),\\n        content: new Text('Você irá voltar para a tela anterior'),\\n        actions: <Widget>[\\n          new FlatButton(\\n            onPressed: () => Navigator.of(context).pop(false),\\n            child: new Text('Não'),\\n          ),\\n          new FlatButton(\\n            onPressed: () {\\n              Navigator.push(\\n                context,\\n                MaterialPageRoute(builder: (context) => MyApp()),\\n              );\\n            },\\n            child: new Text('Sim'),\\n          ),\\n        ],\\n      ),\\n    ) ?? false;\\n  }\\n}\")])])]),a(\"p\",[e._v(\"Finalizando o exemplo. Caso necessite realizar o clone/download do exemplo deste artigo, o código poderá ser encontrado neste repositório.\")]),e._v(\" \"),a(\"p\",[e._v(\"Let's Code! :)\")])])},[],!1,null,null,null);\"function\"==typeof n&&n(i);t.default=i.exports}}]);","extractedComments":[]}